From b48ad701f5a17a4c3050f697d999025fb2058acc Mon Sep 17 00:00:00 2001
From: Prasad Mujumdar <prasadm@cloudera.com>
Date: Mon, 14 Jan 2013 01:56:58 -0800
Subject: [PATCH 025/121] CLOUDERA-BUILD CDH-9794: Fix local mode settings for MR1 and MR2

---
 build-common.xml                                   |    8 +++-
 .../apache/hadoop/hive/shims/Hadoop23Shims.java    |   36 ++++++++++++++++----
 2 files changed, 35 insertions(+), 9 deletions(-)

diff --git a/src/build-common.xml b/src/build-common.xml
index 4d53e8f..e61cc42 100644
--- a/src/build-common.xml
+++ b/src/build-common.xml
@@ -96,7 +96,7 @@
   <property name="test.lang" value="en_US.UTF-8"/>
 
   <property name="hadoop.opts.23" value="-D mapreduce.framework.name=local" />
-  <property name="hadoop.opts.20" value="" />
+  <property name="hadoop.opts.20" value="-D mapreduce.framework.name=local" />
 
   <target name="set-test-classpath">
     <if>
@@ -455,8 +455,9 @@
   </condition>
 
   <property name="test.warehouse.dir" value="${test.warehouse.scheme}${build.dir}/test/data/warehouse"/>
-  <property name="mapred.job.tracker" value="local"/>
   <property name="fs.default.name" value="file:///"/>
+  <property name="mapred.job.tracker" value=""/>
+  <property name="mapreduce.framework.name" value=""/>
 
   <!-- target to run the tests -->
   <target name="test"
@@ -466,9 +467,11 @@
     <if>
       <equals arg1="${hadoop.mr.test.rev}" arg2="mr1" />
       <then>
+        <property name="mapred.job.tracker" value="local"/>
         <property name="hadoop.opts" value="${hadoop.opts.20}" />
       </then>
       <else>
+        <property name="mapreduce.framework.name" value="local"/>
         <property name="hadoop.opts" value="${hadoop.opts.23}" />
       </else>
     </if>
@@ -514,6 +517,7 @@
       <sysproperty key="test.warehouse.dir" value="${test.warehouse.dir}"/>
       <sysproperty key="test.build.resources" value="${test.build.resources}"/>
       <sysproperty key="mapred.job.tracker" value="${mapred.job.tracker}"/>
+      <sysproperty key="mapreduce.framework.name" value="${mapreduce.framework.name}"/>
       <sysproperty key="fs.default.name" value="${fs.default.name}"/>
       <sysproperty key="build.dir" value="${build.dir}"/>
       <sysproperty key="build.dir.hive" value="${build.dir.hive}"/>
diff --git a/src/shims/src/0.23/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java b/src/shims/src/0.23/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java
index fdd16dd..87892eb 100644
--- a/src/shims/src/0.23/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java
+++ b/src/shims/src/0.23/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java
@@ -87,30 +87,52 @@ public class Hadoop23Shims extends HadoopShimsSecure {
 
   @Override
   public boolean isLocalMode(Configuration conf) {
-    return "local".equals(conf.get("mapreduce.framework.name"));
+    if ("local".equals(conf.get("mapreduce.framework.name"))) {
+      return true;
+    } else {
+      return "local".equals(conf.get("mapred.job.tracker"));
+    }
   }
 
   @Override
   public String getJobLauncherRpcAddress(Configuration conf) {
-    return conf.get("yarn.resourcemanager.address");
+    if (isMR2(conf)) {
+      return conf.get("yarn.resourcemanager.address");
+    } else {
+      return conf.get("mapred.job.tracker");
+    }
   }
 
   @Override
   public void setJobLauncherRpcAddress(Configuration conf, String val) {
     if (val.equals("local")) {
       // LocalClientProtocolProvider expects both parameters to be 'local'.
-      conf.set("mapreduce.framework.name", val);
-      conf.set("mapreduce.jobtracker.address", val);
+      if (isMR2(conf)) {
+        conf.set("mapreduce.framework.name", val);
+        conf.set("mapreduce.jobtracker.address", val);
+      } else {
+        conf.set("mapred.job.tracker", val);
+      }
     }
     else {
-      conf.set("mapreduce.framework.name", "yarn");
-      conf.set("yarn.resourcemanager.address", val);
+      if (isMR2(conf)) {
+        conf.set("yarn.resourcemanager.address", val);
+      } else {
+        conf.set("mapred.job.tracker", val);
+      }
     }
   }
 
   @Override
   public String getJobLauncherHttpAddress(Configuration conf) {
-    return conf.get("yarn.resourcemanager.webapp.address");
+    if (isMR2(conf)) {
+      return conf.get("yarn.resourcemanager.webapp.address");
+    } else {
+      return conf.get("mapred.job.tracker.http.address");
+    }
   }
 
+  private boolean isMR2(Configuration conf) {
+    return "yarn".equals(conf.get("mapreduce.framework.name"));
+  }
 }
-- 
1.7.0.4

