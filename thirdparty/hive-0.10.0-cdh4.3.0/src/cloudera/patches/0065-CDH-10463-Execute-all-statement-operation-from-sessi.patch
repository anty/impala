From 848f2983fd75f327299bb64626315a487a8691b0 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Thu, 14 Feb 2013 11:11:30 -0600
Subject: [PATCH 065/121] CDH-10463: Execute all statement operation from session context and setup correct proxy session for impersonation support

---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |   10 +++
 .../org/apache/hive/service/cli/CLIService.java    |   17 +++--
 .../cli/operation/AddResourceOperation.java        |    4 +-
 .../cli/operation/DeleteResourceOperation.java     |    4 +-
 .../hive/service/cli/operation/DfsOperation.java   |    4 +-
 .../cli/operation/ExecuteStatementOperation.java   |    6 +-
 .../cli/operation/GetCatalogsOperation.java        |    4 +-
 .../service/cli/operation/GetColumnsOperation.java |    4 +-
 .../cli/operation/GetFunctionsOperation.java       |    6 +-
 .../service/cli/operation/GetSchemasOperation.java |    4 +-
 .../cli/operation/GetTableTypesOperation.java      |    4 +-
 .../service/cli/operation/GetTablesOperation.java  |    4 +-
 .../cli/operation/GetTypeInfoOperation.java        |    4 +-
 .../cli/operation/HiveCommandOperation.java        |    4 +-
 .../service/cli/operation/MetadataOperation.java   |    4 +-
 .../hive/service/cli/operation/Operation.java      |    8 +-
 .../service/cli/operation/OperationManager.java    |   20 +++---
 .../hive/service/cli/operation/SQLOperation.java   |    4 +-
 .../hive/service/cli/operation/SetOperation.java   |    4 +-
 .../hive/service/cli/session/HiveSession.java      |   15 ++++
 .../hive/service/cli/session/HiveSessionImpl.java  |   75 +++++++++++++++++--
 .../cli/session/HiveSessionImplwithUGI.java        |   30 ++++++++
 .../hive/service/cli/session/SessionManager.java   |    1 +
 23 files changed, 179 insertions(+), 61 deletions(-)

diff --git a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index f1a6148..d26dcbe 100644
--- a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -157,6 +157,16 @@ public class HiveConf extends Configuration {
   };
 
   /**
+   * The conf variables that depends on current user
+   */
+  public static final HiveConf.ConfVars[] userVars = {
+    HiveConf.ConfVars.SCRATCHDIR,
+    HiveConf.ConfVars.LOCALSCRATCHDIR,
+    HiveConf.ConfVars.DOWNLOADED_RESOURCES_DIR,
+    HiveConf.ConfVars.HIVEHISTORYFILELOC
+  };
+
+  /**
    * ConfVars.
    *
    * These are the default configuration properties for Hive. Each HiveConf
diff --git a/src/service/src/java/org/apache/hive/service/cli/CLIService.java b/src/service/src/java/org/apache/hive/service/cli/CLIService.java
index 05f2b27..2d474cb 100644
--- a/src/service/src/java/org/apache/hive/service/cli/CLIService.java
+++ b/src/service/src/java/org/apache/hive/service/cli/CLIService.java
@@ -267,7 +267,8 @@ public class CLIService extends CompositeService implements ICLIService {
   @Override
   public void cancelOperation(OperationHandle opHandle)
       throws HiveSQLException {
-    sessionManager.getOperationManager().cancelOperation(opHandle);
+    sessionManager.getOperationManager().getOperation(opHandle).
+        getParentSession().cancelOperation(opHandle);
     LOG.info(opHandle + ": cancelOperation()");
     sessionManager.clearThreadLocals();
     }
@@ -278,7 +279,8 @@ public class CLIService extends CompositeService implements ICLIService {
   @Override
   public void closeOperation(OperationHandle opHandle)
       throws HiveSQLException {
-    sessionManager.getOperationManager().closeOperation(opHandle);
+    sessionManager.getOperationManager().getOperation(opHandle).
+        getParentSession().closeOperation(opHandle);
     LOG.info(opHandle + ": closeOperation");
     sessionManager.clearThreadLocals();
   }
@@ -289,8 +291,8 @@ public class CLIService extends CompositeService implements ICLIService {
   @Override
   public TableSchema getResultSetMetadata(OperationHandle opHandle)
       throws HiveSQLException {
-    TableSchema tableSchema = sessionManager.getOperationManager()
-        .getOperationResultSetSchema(opHandle);
+    TableSchema tableSchema = sessionManager.getOperationManager().getOperation(opHandle).
+        getParentSession().getResultSetMetadata(opHandle);
     LOG.info(opHandle + ": getResultSetMetadata()");
     sessionManager.clearThreadLocals();
     return tableSchema;
@@ -302,8 +304,8 @@ public class CLIService extends CompositeService implements ICLIService {
   @Override
   public RowSet fetchResults(OperationHandle opHandle, FetchOrientation orientation, long maxRows)
       throws HiveSQLException {
-    RowSet rowSet = sessionManager.getOperationManager()
-        .getOperationNextRowSet(opHandle, orientation, maxRows);
+    RowSet rowSet = sessionManager.getOperationManager().getOperation(opHandle).
+        getParentSession().fetchResults(opHandle, orientation, maxRows);
     LOG.info(opHandle + ": fetchResults()");
     sessionManager.clearThreadLocals();
     return rowSet;
@@ -315,7 +317,8 @@ public class CLIService extends CompositeService implements ICLIService {
   @Override
   public RowSet fetchResults(OperationHandle opHandle)
       throws HiveSQLException {
-    RowSet rowSet = sessionManager.getOperationManager().getOperationNextRowSet(opHandle);
+    RowSet rowSet = sessionManager.getOperationManager().getOperation(opHandle).
+        getParentSession().fetchResults(opHandle);
     LOG.info(opHandle + ": fetchResults()");
     sessionManager.clearThreadLocals();
     return rowSet;
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/AddResourceOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/AddResourceOperation.java
index 3bf0ac5..fe0c6db 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/AddResourceOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/AddResourceOperation.java
@@ -21,7 +21,7 @@ package org.apache.hive.service.cli.operation;
 import java.util.Map;
 
 import org.apache.hadoop.hive.ql.processors.AddResourceProcessor;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * HiveAddResourceOperation.
@@ -29,7 +29,7 @@ import org.apache.hive.service.cli.session.HiveSessionImpl;
  */
 public class AddResourceOperation extends HiveCommandOperation {
 
-  protected AddResourceOperation(HiveSessionImpl parentSession, String statement,
+  protected AddResourceOperation(HiveSession parentSession, String statement,
       Map<String, String> confOverlay) {
     super(parentSession, statement, confOverlay);
     setCommandProcessor(new AddResourceProcessor());
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/DeleteResourceOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/DeleteResourceOperation.java
index d992f5f..496bba9 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/DeleteResourceOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/DeleteResourceOperation.java
@@ -21,7 +21,7 @@ package org.apache.hive.service.cli.operation;
 import java.util.Map;
 
 import org.apache.hadoop.hive.ql.processors.DeleteResourceProcessor;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * HiveDeleteResourceOperation.
@@ -29,7 +29,7 @@ import org.apache.hive.service.cli.session.HiveSessionImpl;
  */
 public class DeleteResourceOperation extends HiveCommandOperation {
 
-  protected DeleteResourceOperation(HiveSessionImpl parentSession, String statement,
+  protected DeleteResourceOperation(HiveSession parentSession, String statement,
       Map<String, String> confOverlay) {
     super(parentSession, statement, confOverlay);
     setCommandProcessor(new DeleteResourceProcessor());
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/DfsOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/DfsOperation.java
index d0c9a1f..a8b8ed4 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/DfsOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/DfsOperation.java
@@ -21,7 +21,7 @@ package org.apache.hive.service.cli.operation;
 import java.util.Map;
 
 import org.apache.hadoop.hive.ql.processors.DfsProcessor;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * HiveDfsCommandOperation.
@@ -29,7 +29,7 @@ import org.apache.hive.service.cli.session.HiveSessionImpl;
  */
 public class DfsOperation extends HiveCommandOperation {
 
-  protected DfsOperation(HiveSessionImpl parentSession, String statement,
+  protected DfsOperation(HiveSession parentSession, String statement,
       Map<String, String> confOverlay) {
     super(parentSession, statement, confOverlay);
     setCommandProcessor(new DfsProcessor(parentSession.getHiveConf()));
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java
index 463d3b6..9a1da59 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java
@@ -23,13 +23,13 @@ import java.util.HashMap;
 import java.util.Map;
 
 import org.apache.hive.service.cli.OperationType;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 public abstract class ExecuteStatementOperation extends Operation {
   protected String statement = null;
   protected Map<String, String> confOverlay = new HashMap<String, String>();
 
-  public ExecuteStatementOperation(HiveSessionImpl parentSession, String statement, Map<String, String> confOverlay) {
+  public ExecuteStatementOperation(HiveSession parentSession, String statement, Map<String, String> confOverlay) {
     super(parentSession, OperationType.EXECUTE_STATEMENT);
     this.statement = statement;
     this.confOverlay = confOverlay;
@@ -40,7 +40,7 @@ public abstract class ExecuteStatementOperation extends Operation {
   }
 
   public static ExecuteStatementOperation newExecuteStatementOperation(
-      HiveSessionImpl parentSession, String statement, Map<String, String> confOverlay) {
+      HiveSession parentSession, String statement, Map<String, String> confOverlay) {
     String[] tokens = statement.trim().split("\\s+");
     String command = tokens[0].toLowerCase();
 
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetCatalogsOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetCatalogsOperation.java
index 5d477e7..581e69c 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetCatalogsOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetCatalogsOperation.java
@@ -24,7 +24,7 @@ import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetCatalogsOperation.
@@ -36,7 +36,7 @@ public class GetCatalogsOperation extends MetadataOperation {
 
   private final RowSet rowSet = new RowSet();
 
-  protected GetCatalogsOperation(HiveSessionImpl parentSession) {
+  protected GetCatalogsOperation(HiveSession parentSession) {
     super(parentSession, OperationType.GET_CATALOGS);
   }
 
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetColumnsOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetColumnsOperation.java
index 497477f..af87a90 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetColumnsOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetColumnsOperation.java
@@ -33,7 +33,7 @@ import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
 import org.apache.hive.service.cli.Type;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetColumnsOperation.
@@ -103,7 +103,7 @@ public class GetColumnsOperation extends MetadataOperation {
 
   private final RowSet rowSet = new RowSet();
 
-  protected GetColumnsOperation(HiveSessionImpl parentSession, String catalogName, String schemaName,
+  protected GetColumnsOperation(HiveSession parentSession, String catalogName, String schemaName,
       String tableName, String columnName) {
     super(parentSession, OperationType.GET_COLUMNS);
     this.catalogName = catalogName;
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetFunctionsOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetFunctionsOperation.java
index 50dd146..0fe01c0 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetFunctionsOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetFunctionsOperation.java
@@ -23,15 +23,15 @@ import java.util.Set;
 
 import org.apache.hadoop.hive.ql.exec.FunctionInfo;
 import org.apache.hadoop.hive.ql.exec.FunctionRegistry;
+import org.apache.hive.service.cli.CLIServiceUtils;
 import org.apache.hive.service.cli.FetchOrientation;
 import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
-import org.apache.hive.service.cli.CLIServiceUtils;
 import org.apache.hive.service.cli.TableSchema;
 import org.apache.hive.service.cli.Type;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetFunctionsOperation.
@@ -58,7 +58,7 @@ public class GetFunctionsOperation extends MetadataOperation {
 
   private final RowSet rowSet = new RowSet();
 
-  public GetFunctionsOperation(HiveSessionImpl parentSession,
+  public GetFunctionsOperation(HiveSession parentSession,
       String catalogName, String schemaName, String functionName) {
     super(parentSession, OperationType.GET_FUNCTIONS);
     this.catalogName = catalogName;
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetSchemasOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetSchemasOperation.java
index 7db45d4..6970f35 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetSchemasOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetSchemasOperation.java
@@ -25,7 +25,7 @@ import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetSchemasOperation.
@@ -41,7 +41,7 @@ public class GetSchemasOperation extends MetadataOperation {
 
   private RowSet rowSet;
 
-  protected GetSchemasOperation(HiveSessionImpl parentSession,
+  protected GetSchemasOperation(HiveSession parentSession,
       String catalogName, String schemaName) {
     super(parentSession, OperationType.GET_SCHEMAS);
     this.catalogName = catalogName;
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
index 9ff66dc..eaf867e 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
@@ -25,7 +25,7 @@ import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetTableTypesOperation.
@@ -38,7 +38,7 @@ public class GetTableTypesOperation extends MetadataOperation {
 
   private RowSet rowSet;
 
-  protected GetTableTypesOperation(HiveSessionImpl parentSession) {
+  protected GetTableTypesOperation(HiveSession parentSession) {
     super(parentSession, OperationType.GET_TABLE_TYPES);
   }
 
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
index 59ecabd..df8b5b3 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
@@ -29,7 +29,7 @@ import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetTablesOperation.
@@ -51,7 +51,7 @@ public class GetTablesOperation extends MetadataOperation {
   .addStringColumn("TABLE_TYPE", "The table type, e.g. \"TABLE\", \"VIEW\", etc.")
   .addStringColumn("REMARKS", "Comments about the table.");
 
-  protected GetTablesOperation(HiveSessionImpl parentSession,
+  protected GetTablesOperation(HiveSession parentSession,
       String catalogName, String schemaName, String tableName,
       List<String> tableTypes) {
     super(parentSession, OperationType.GET_TABLES);
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/GetTypeInfoOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/GetTypeInfoOperation.java
index 45e11bd..2daa9cd 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/GetTypeInfoOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/GetTypeInfoOperation.java
@@ -25,7 +25,7 @@ import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
 import org.apache.hive.service.cli.Type;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * GetTypeInfoOperation.
@@ -73,7 +73,7 @@ public class GetTypeInfoOperation extends MetadataOperation {
 
   private final RowSet rowSet = new RowSet();
 
-  protected GetTypeInfoOperation(HiveSessionImpl parentSession) {
+  protected GetTypeInfoOperation(HiveSession parentSession) {
     super(parentSession, OperationType.GET_TYPE_INFO);
   }
 
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/HiveCommandOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/HiveCommandOperation.java
index bc5c3d3..60148cb 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/HiveCommandOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/HiveCommandOperation.java
@@ -39,7 +39,7 @@ import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * HiveCommandOperation.
@@ -57,7 +57,7 @@ public abstract class HiveCommandOperation extends ExecuteStatementOperation {
   private BufferedReader resultReader;
 
 
-  protected HiveCommandOperation(HiveSessionImpl parentSession, String statement, Map<String, String> confOverlay) {
+  protected HiveCommandOperation(HiveSession parentSession, String statement, Map<String, String> confOverlay) {
     super(parentSession, statement, confOverlay);
     setupSessionIO(parentSession.getSessionState());
   }
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/MetadataOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/MetadataOperation.java
index e685758..8dc82ab 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/MetadataOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/MetadataOperation.java
@@ -22,7 +22,7 @@ import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * MetadataOperation.
@@ -34,7 +34,7 @@ public abstract class MetadataOperation extends Operation {
   protected static TableSchema RESULT_SET_SCHEMA;
   private static final char SEARCH_STRING_ESCAPE = '\\';
 
-  protected MetadataOperation(HiveSessionImpl parentSession, OperationType opType) {
+  protected MetadataOperation(HiveSession parentSession, OperationType opType) {
     super(parentSession, opType);
     setHasResultSet(true);
   }
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/Operation.java b/src/service/src/java/org/apache/hive/service/cli/operation/Operation.java
index c8df560..b354ac9 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/Operation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/Operation.java
@@ -27,12 +27,12 @@ import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 
 
 public abstract class Operation {
-  private final HiveSessionImpl parentSession;
+  private final HiveSession parentSession;
   private OperationState state = OperationState.INITIALIZED;
   private final OperationHandle opHandle;
   private HiveConf configuration;
@@ -40,7 +40,7 @@ public abstract class Operation {
   public static final long DEFAULT_FETCH_MAX_ROWS = 100;
   protected boolean hasResultSet;
 
-  protected Operation(HiveSessionImpl parentSession, OperationType opType) {
+  protected Operation(HiveSession parentSession, OperationType opType) {
     super();
     this.parentSession = parentSession;
     opHandle = new OperationHandle(opType);
@@ -54,7 +54,7 @@ public abstract class Operation {
     return new HiveConf(configuration);
   }
 
-  public HiveSessionImpl getParentSession() {
+  public HiveSession getParentSession() {
     return parentSession;
   }
 
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java b/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java
index d96a421..e5c763d 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java
@@ -30,7 +30,7 @@ import org.apache.hive.service.cli.OperationHandle;
 import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * OperationManager.
@@ -65,7 +65,7 @@ public class OperationManager extends AbstractService {
     super.stop();
   }
 
-  public ExecuteStatementOperation newExecuteStatementOperation(HiveSessionImpl parentSession,
+  public ExecuteStatementOperation newExecuteStatementOperation(HiveSession parentSession,
       String statement, Map<String, String> confOverlay) {
     ExecuteStatementOperation executeStatementOperation = ExecuteStatementOperation
         .newExecuteStatementOperation(parentSession, statement, confOverlay);
@@ -73,26 +73,26 @@ public class OperationManager extends AbstractService {
     return executeStatementOperation;
   }
 
-  public GetTypeInfoOperation newGetTypeInfoOperation(HiveSessionImpl parentSession) {
+  public GetTypeInfoOperation newGetTypeInfoOperation(HiveSession parentSession) {
     GetTypeInfoOperation operation = new GetTypeInfoOperation(parentSession);
     addOperation(operation);
     return operation;
   }
 
-  public GetCatalogsOperation newGetCatalogsOperation(HiveSessionImpl parentSession) {
+  public GetCatalogsOperation newGetCatalogsOperation(HiveSession parentSession) {
     GetCatalogsOperation operation = new GetCatalogsOperation(parentSession);
     addOperation(operation);
     return operation;
   }
 
-  public GetSchemasOperation newGetSchemasOperation(HiveSessionImpl parentSession,
+  public GetSchemasOperation newGetSchemasOperation(HiveSession parentSession,
       String catalogName, String schemaName) {
     GetSchemasOperation operation = new GetSchemasOperation(parentSession, catalogName, schemaName);
     addOperation(operation);
     return operation;
   }
 
-  public MetadataOperation newGetTablesOperation(HiveSessionImpl parentSession,
+  public MetadataOperation newGetTablesOperation(HiveSession parentSession,
       String catalogName, String schemaName, String tableName,
       List<String> tableTypes) {
     MetadataOperation operation =
@@ -101,13 +101,13 @@ public class OperationManager extends AbstractService {
     return operation;
   }
 
-  public GetTableTypesOperation newGetTableTypesOperation(HiveSessionImpl parentSession) {
+  public GetTableTypesOperation newGetTableTypesOperation(HiveSession parentSession) {
     GetTableTypesOperation operation = new GetTableTypesOperation(parentSession);
     addOperation(operation);
     return operation;
   }
 
-  public GetColumnsOperation newGetColumnsOperation(HiveSessionImpl parentSession,
+  public GetColumnsOperation newGetColumnsOperation(HiveSession parentSession,
       String catalogName, String schemaName, String tableName, String columnName) {
     GetColumnsOperation operation = new GetColumnsOperation(parentSession,
         catalogName, schemaName, tableName, columnName);
@@ -115,7 +115,7 @@ public class OperationManager extends AbstractService {
     return operation;
   }
 
-  public GetFunctionsOperation newGetFunctionsOperation(HiveSessionImpl parentSession,
+  public GetFunctionsOperation newGetFunctionsOperation(HiveSession parentSession,
       String catalogName, String schemaName, String functionName) {
     GetFunctionsOperation operation = new GetFunctionsOperation(parentSession,
         catalogName, schemaName, functionName);
@@ -123,7 +123,7 @@ public class OperationManager extends AbstractService {
     return operation;
   }
 
-  private synchronized Operation getOperation(OperationHandle operationHandle) throws HiveSQLException {
+  public synchronized Operation getOperation(OperationHandle operationHandle) throws HiveSQLException {
     Operation operation = handleToOperation.get(operationHandle);
     if (operation == null) {
       throw new HiveSQLException("Invalid OperationHandle: " + operationHandle);
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java
index cd0ecd7..f3a48a2 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/SQLOperation.java
@@ -47,7 +47,7 @@ import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationState;
 import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.TableSchema;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * SQLOperation.
@@ -62,7 +62,7 @@ public class SQLOperation extends ExecuteStatementOperation {
   private SerDe serde = null;
 
 
-  public SQLOperation(HiveSessionImpl parentSession, String statement, Map<String, String> confOverlay) {
+  public SQLOperation(HiveSession parentSession, String statement, Map<String, String> confOverlay) {
     // TODO: call setRemoteUser in ExecuteStatementOperation or higher.
     super(parentSession, statement, confOverlay);
   }
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/SetOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/SetOperation.java
index e2c5bfb..bf6969a 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/SetOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/SetOperation.java
@@ -21,7 +21,7 @@ package org.apache.hive.service.cli.operation;
 import java.util.Map;
 
 import org.apache.hadoop.hive.ql.processors.SetProcessor;
-import org.apache.hive.service.cli.session.HiveSessionImpl;
+import org.apache.hive.service.cli.session.HiveSession;
 
 /**
  * HiveSetCommandOperation.
@@ -29,7 +29,7 @@ import org.apache.hive.service.cli.session.HiveSessionImpl;
  */
 public class SetOperation extends HiveCommandOperation {
 
-  protected SetOperation(HiveSessionImpl parentSession, String statement,
+  protected SetOperation(HiveSession parentSession, String statement,
       Map<String, String> confOverlay) {
     super(parentSession, statement, confOverlay);
     setCommandProcessor(new SetProcessor());
diff --git a/src/service/src/java/org/apache/hive/service/cli/session/HiveSession.java b/src/service/src/java/org/apache/hive/service/cli/session/HiveSession.java
index 14feb13..d4651e0 100644
--- a/src/service/src/java/org/apache/hive/service/cli/session/HiveSession.java
+++ b/src/service/src/java/org/apache/hive/service/cli/session/HiveSession.java
@@ -24,11 +24,14 @@ import java.util.Map;
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.metastore.IMetaStoreClient;
 import org.apache.hadoop.hive.ql.session.SessionState;
+import org.apache.hive.service.cli.FetchOrientation;
 import org.apache.hive.service.cli.GetInfoType;
 import org.apache.hive.service.cli.GetInfoValue;
 import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationHandle;
+import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.SessionHandle;
+import org.apache.hive.service.cli.TableSchema;
 import org.apache.hive.service.cli.operation.OperationManager;
 
 public interface HiveSession {
@@ -144,6 +147,18 @@ public interface HiveSession {
    */
   public void close() throws HiveSQLException;
 
+  public void cancelOperation(OperationHandle opHandle) throws HiveSQLException;
+
+  public void closeOperation(OperationHandle opHandle) throws HiveSQLException;
+
+  public TableSchema getResultSetMetadata(OperationHandle opHandle)
+      throws HiveSQLException;
+
+  public RowSet fetchResults(OperationHandle opHandle, FetchOrientation orientation, long maxRows)
+      throws HiveSQLException;
+
+  public RowSet fetchResults(OperationHandle opHandle) throws HiveSQLException;
+
   public SessionState getSessionState();
 
   public String getIpAddress();
diff --git a/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImpl.java b/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImpl.java
index 7e33600..e0e68ec 100644
--- a/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImpl.java
+++ b/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImpl.java
@@ -27,11 +27,14 @@ import org.apache.hadoop.hive.metastore.HiveMetaStoreClient;
 import org.apache.hadoop.hive.metastore.IMetaStoreClient;
 import org.apache.hadoop.hive.metastore.api.MetaException;
 import org.apache.hadoop.hive.ql.session.SessionState;
+import org.apache.hive.service.cli.FetchOrientation;
 import org.apache.hive.service.cli.GetInfoType;
 import org.apache.hive.service.cli.GetInfoValue;
 import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationHandle;
+import org.apache.hive.service.cli.RowSet;
 import org.apache.hive.service.cli.SessionHandle;
+import org.apache.hive.service.cli.TableSchema;
 import org.apache.hive.service.cli.operation.ExecuteStatementOperation;
 import org.apache.hive.service.cli.operation.GetCatalogsOperation;
 import org.apache.hive.service.cli.operation.GetColumnsOperation;
@@ -161,7 +164,7 @@ public class HiveSessionImpl implements HiveSession {
     acquire();
     try {
       ExecuteStatementOperation operation = getOperationManager()
-          .newExecuteStatementOperation(this, statement, confOverlay);
+          .newExecuteStatementOperation(getSession(), statement, confOverlay);
       operation.run();
       return operation.getHandle();
     } finally {
@@ -173,7 +176,7 @@ public class HiveSessionImpl implements HiveSession {
       throws HiveSQLException {
     acquire();
     try {
-      GetTypeInfoOperation operation = getOperationManager().newGetTypeInfoOperation(this);
+      GetTypeInfoOperation operation = getOperationManager().newGetTypeInfoOperation(getSession());
       operation.run();
       return operation.getHandle();
     } finally {
@@ -185,7 +188,7 @@ public class HiveSessionImpl implements HiveSession {
       throws HiveSQLException {
     acquire();
     try {
-      GetCatalogsOperation operation = getOperationManager().newGetCatalogsOperation(this);
+      GetCatalogsOperation operation = getOperationManager().newGetCatalogsOperation(getSession());
       operation.run();
       return operation.getHandle();
     } finally {
@@ -198,7 +201,7 @@ public class HiveSessionImpl implements HiveSession {
       acquire();
     try {
       GetSchemasOperation operation =
-          getOperationManager().newGetSchemasOperation(this, catalogName, schemaName);
+          getOperationManager().newGetSchemasOperation(getSession(), catalogName, schemaName);
       operation.run();
       return operation.getHandle();
     } finally {
@@ -212,7 +215,7 @@ public class HiveSessionImpl implements HiveSession {
       acquire();
     try {
       MetadataOperation operation =
-          getOperationManager().newGetTablesOperation(this, catalogName, schemaName, tableName, tableTypes);
+          getOperationManager().newGetTablesOperation(getSession(), catalogName, schemaName, tableName, tableTypes);
       operation.run();
       return operation.getHandle();
     } finally {
@@ -224,7 +227,7 @@ public class HiveSessionImpl implements HiveSession {
       throws HiveSQLException {
       acquire();
     try {
-      GetTableTypesOperation operation = getOperationManager().newGetTableTypesOperation(this);
+      GetTableTypesOperation operation = getOperationManager().newGetTableTypesOperation(getSession());
       operation.run();
       return operation.getHandle();
     } finally {
@@ -236,7 +239,7 @@ public class HiveSessionImpl implements HiveSession {
       String tableName, String columnName)  throws HiveSQLException {
     acquire();
     try {
-    GetColumnsOperation operation = getOperationManager().newGetColumnsOperation(this,
+    GetColumnsOperation operation = getOperationManager().newGetColumnsOperation(getSession(),
         catalogName, schemaName, tableName, columnName);
     operation.run();
     return operation.getHandle();
@@ -250,7 +253,7 @@ public class HiveSessionImpl implements HiveSession {
     acquire();
     try {
       GetFunctionsOperation operation = getOperationManager()
-          .newGetFunctionsOperation(this, catalogName, schemaName, functionName);
+          .newGetFunctionsOperation(getSession(), catalogName, schemaName, functionName);
       operation.run();
       return operation.getHandle();
     } finally {
@@ -292,4 +295,60 @@ public class HiveSessionImpl implements HiveSession {
   public void setUserName(String userName) {
     this.username = userName;
   }
+
+  @Override
+  public void cancelOperation(OperationHandle opHandle) throws HiveSQLException {
+    acquire();
+    try {
+      sessionManager.getOperationManager().cancelOperation(opHandle);
+    } finally {
+      release();
+    }
+  }
+
+  @Override
+  public void closeOperation(OperationHandle opHandle) throws HiveSQLException {
+    acquire();
+    try {
+      sessionManager.getOperationManager().closeOperation(opHandle);
+    } finally {
+      release();
+    }
+  }
+
+  @Override
+  public TableSchema getResultSetMetadata(OperationHandle opHandle) throws HiveSQLException {
+    acquire();
+    try {
+      return sessionManager.getOperationManager().getOperationResultSetSchema(opHandle);
+    } finally {
+      release();
+    }
+  }
+
+  @Override
+  public RowSet fetchResults(OperationHandle opHandle, FetchOrientation orientation, long maxRows)
+      throws HiveSQLException {
+    acquire();
+    try {
+      return sessionManager.getOperationManager()
+          .getOperationNextRowSet(opHandle, orientation, maxRows);
+    } finally {
+      release();
+    }
+  }
+
+  @Override
+  public RowSet fetchResults(OperationHandle opHandle) throws HiveSQLException {
+    acquire();
+    try {
+      return sessionManager.getOperationManager().getOperationNextRowSet(opHandle);
+    } finally {
+      release();
+    }
+  }
+
+  protected HiveSession getSession() {
+    return this;
+  }
 }
diff --git a/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImplwithUGI.java b/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImplwithUGI.java
index f54c6ca..13e30fc 100644
--- a/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImplwithUGI.java
+++ b/src/service/src/java/org/apache/hive/service/cli/session/HiveSessionImplwithUGI.java
@@ -18,9 +18,11 @@
 
 package org.apache.hive.service.cli.session;
 
+import java.io.File;
 import java.io.IOException;
 import java.util.Map;
 
+import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.metadata.Hive;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.shims.ShimLoader;
@@ -38,11 +40,13 @@ public class HiveSessionImplwithUGI extends HiveSessionImpl {
   private UserGroupInformation sessionUgi = null;
   private String delegationTokenStr = null;
   private Hive sessionHive = null;
+  private HiveSession proxySession = null;
 
   public HiveSessionImplwithUGI(String username, String password, Map<String, String> sessionConf,
       String ipAddress, String delegationToken) throws HiveSQLException {
     super(username, password, sessionConf, ipAddress);
     setSessionUGI(username);
+    setUserPath(username);
     setDelegationToken(delegationToken);
   }
 
@@ -134,4 +138,30 @@ public class HiveSessionImplwithUGI extends HiveSessionImpl {
     }
   }
 
+  // Append the user name to temp/scratch directory path for each impersonated user
+  private void setUserPath(String userName) {
+    for (HiveConf.ConfVars var: HiveConf.userVars) {
+      String userVar = getHiveConf().getVar(var);
+      if (userVar != null) {
+        // If there's a path separator at end then remove it
+        if (userVar.endsWith(File.separator)) {
+          userVar = userVar.substring(0, userVar.length()-2);
+        }
+        getHiveConf().setVar(var, userVar + "-" + userName);
+      }
+    }
+  }
+
+  @Override
+  protected HiveSession getSession() {
+    assert proxySession != null;
+
+    return proxySession;
+  }
+
+  public void setProxySession(HiveSession proxySession) {
+    this.proxySession = proxySession;
+  }
+
+
 }
diff --git a/src/service/src/java/org/apache/hive/service/cli/session/SessionManager.java b/src/service/src/java/org/apache/hive/service/cli/session/SessionManager.java
index 56a2b33..1065ee3 100644
--- a/src/service/src/java/org/apache/hive/service/cli/session/SessionManager.java
+++ b/src/service/src/java/org/apache/hive/service/cli/session/SessionManager.java
@@ -75,6 +75,7 @@ public class SessionManager extends CompositeService {
           HiveSessionImplwithUGI hiveSessionUgi = new HiveSessionImplwithUGI(username, password, sessionConf,
               threadLocalIpAddress.get(), delegationToken);
           session = (HiveSession)HiveSessionProxy.getProxy(hiveSessionUgi, hiveSessionUgi.getSessionUgi());
+          hiveSessionUgi.setProxySession(session);
     } else {
       session = new HiveSessionImpl(username, password, sessionConf, threadLocalIpAddress.get());
     }
-- 
1.7.0.4

