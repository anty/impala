From e4cc922366ce3ebf6acb336f9c8e18f802d513b2 Mon Sep 17 00:00:00 2001
From: Prasad Mujumdar <prasadm@cloudera.com>
Date: Thu, 11 Apr 2013 11:00:32 -0700
Subject: [PATCH 087/121] CDH-11053: Backport proposed patch of HIVE-4171

---
 .../org/apache/hadoop/hive/ql/exec/DDLTask.java    |    5 +++++
 .../hadoop/hive/ql/session/SessionState.java       |   17 +++++++++++++++++
 2 files changed, 22 insertions(+), 0 deletions(-)

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
index 46387ba..5026062 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
@@ -151,6 +151,7 @@ import org.apache.hadoop.hive.ql.plan.SwitchDatabaseDesc;
 import org.apache.hadoop.hive.ql.plan.UnlockTableDesc;
 import org.apache.hadoop.hive.ql.plan.api.StageType;
 import org.apache.hadoop.hive.ql.security.authorization.Privilege;
+import org.apache.hadoop.hive.ql.session.SessionState;
 import org.apache.hadoop.hive.serde.serdeConstants;
 import org.apache.hadoop.hive.serde2.Deserializer;
 import org.apache.hadoop.hive.serde2.MetadataTypedColumnsetSerDe;
@@ -3517,6 +3518,10 @@ public class DDLTask extends Task<DDLWork> implements Serializable {
       throw new HiveException("ERROR: The database " + dbName + " does not exist.");
     }
     db.setCurrentDatabase(dbName);
+    SessionState session = SessionState.get();
+    if (session != null) {
+      session.setCurrentDB(dbName);
+    }
 
     // set database specific parameters
     Database database = db.getDatabase(dbName);
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java b/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java
index f6727b7..78f3f73 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java
@@ -44,6 +44,7 @@ import org.apache.hadoop.hive.ql.MapRedStats;
 import org.apache.hadoop.hive.ql.exec.FunctionRegistry;
 import org.apache.hadoop.hive.ql.exec.Utilities;
 import org.apache.hadoop.hive.ql.history.HiveHistory;
+import org.apache.hadoop.hive.ql.metadata.Hive;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.ql.metadata.HiveUtils;
 import org.apache.hadoop.hive.ql.plan.HiveOperation;
@@ -133,6 +134,8 @@ public class SessionState {
    */
   LineageState ls;
 
+  private String currentDB;
+
   /**
    * Get the lineage state stored in this session.
    *
@@ -257,6 +260,9 @@ public class SessionState {
 
     tss.set(startSs);
 
+    HiveConf conf = startSs.getConf();
+    Thread.currentThread().setContextClassLoader(conf.getClassLoader());
+
     if (StringUtils.isEmpty(startSs.getConf().getVar(
         HiveConf.ConfVars.HIVESESSIONID))) {
       startSs.getConf()
@@ -282,6 +288,9 @@ public class SessionState {
     }
 
     try {
+      Hive hive = Hive.get(startSs.getConf());
+      hive.setCurrentDatabase(startSs.getCurrentDB());
+
       startSs.authenticator = HiveUtils.getAuthenticator(
           startSs.getConf(),HiveConf.ConfVars.HIVE_AUTHENTICATOR_MANAGER);
       startSs.authorizer = HiveUtils.getAuthorizeProviderManager(
@@ -323,6 +332,14 @@ public class SessionState {
         .get(Calendar.HOUR_OF_DAY), gc.get(Calendar.MINUTE));
   }
 
+  public String getCurrentDB() {
+    return currentDB;
+  }
+
+  public void setCurrentDB(String currentDB) {
+    this.currentDB = currentDB;
+  }
+
   /**
    * This class provides helper routines to emit informational and error
    * messages to the user and log4j files while obeying the current session's
-- 
1.7.0.4

