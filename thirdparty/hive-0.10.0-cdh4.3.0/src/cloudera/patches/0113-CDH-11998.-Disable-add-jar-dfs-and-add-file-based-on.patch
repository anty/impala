From 74cc1ca7ff528f42fcc58b595fb52b7c5eb89891 Mon Sep 17 00:00:00 2001
From: Shreepadma Venugopalan <shreepadma@cloudera.com>
Date: Wed, 8 May 2013 11:48:10 -0700
Subject: [PATCH 113/121] CDH-11998. Disable add jar, dfs and add file based on config in hive-site.xml

---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |    2 +
 .../cli/operation/ExecuteStatementOperation.java   |   28 +++++++++++++++----
 .../service/cli/operation/OperationManager.java    |    2 +-
 3 files changed, 25 insertions(+), 7 deletions(-)

diff --git a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index 3232238..094e1f0 100644
--- a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -699,6 +699,8 @@ public class HiveConf extends Configuration {
     HIVE_SERVER2_IN_MEM_LOGGING("hive.server2.in.mem.logging", true),
     HIVE_SERVER2_IN_MEM_LOG_SIZE("hive.server2.in.mem.log.size", 128 * 1024),
     HIVE_SERVER2_SESSION_HOOK("hive.server2.session.hook", ""),
+    HIVE_SERVER2_AUTHZ_EXTERNAL_EXEC("hive.server2.authorization.external.exec", true),
+
     HIVE_CONF_RESTRICTED_LIST("hive.conf.restricted.list", null),
 
     // If this is set all move tasks at the end of a multi-insert query will only begin once all
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java b/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java
index c415f79..6444944 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java
@@ -21,9 +21,10 @@ package org.apache.hive.service.cli.operation;
 
 import java.util.HashMap;
 import java.util.Map;
-import java.util.Map.Entry;
 
+import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.conf.HiveConf.ConfVars;
+import org.apache.hive.service.cli.HiveSQLException;
 import org.apache.hive.service.cli.OperationType;
 import org.apache.hive.service.cli.session.HiveSession;
 
@@ -42,19 +43,34 @@ public abstract class ExecuteStatementOperation extends Operation {
   }
 
   public static ExecuteStatementOperation newExecuteStatementOperation(
-      HiveSession parentSession, String statement, Map<String, String> confOverlay) {
+      HiveSession parentSession, String statement, Map<String, String> confOverlay) throws HiveSQLException {
     String[] tokens = statement.trim().split("\\s+");
     String command = tokens[0].toLowerCase();
 
     ExecuteStatementOperation newExecOP;
+    HiveConf hiveConf = parentSession.getHiveConf();
+    boolean allowExternalExec = hiveConf.getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_AUTHZ_EXTERNAL_EXEC);
     if ("set".equals(command)) {
-      newExecOP = new SetOperation(parentSession, statement, confOverlay);
+       newExecOP = new SetOperation(parentSession, statement, confOverlay);
     } else if ("dfs".equals(command)) {
-      newExecOP = new DfsOperation(parentSession, statement, confOverlay);
+      if (allowExternalExec) {
+        newExecOP = new DfsOperation(parentSession, statement, confOverlay);
+      } else {
+        throw new HiveSQLException("Insufficient privileges to execute dfs", "42000");
+      }
     } else if ("add".equals(command)) {
-      newExecOP = new AddResourceOperation(parentSession, statement, confOverlay);
+      if (allowExternalExec) {
+        newExecOP = new AddResourceOperation(parentSession, statement, confOverlay);
+      } else {
+        throw new HiveSQLException("Insufficient privileges to execute add", "42000");
+      }
     } else if ("delete".equals(command)) {
-      newExecOP = new DeleteResourceOperation(parentSession, statement, confOverlay);
+      if (allowExternalExec) {
+        newExecOP = new DeleteResourceOperation(parentSession, statement, confOverlay);
+      } else {
+        throw new HiveSQLException("Insufficient privileges to execute delete", "42000");
+      }
+
     } else {
       newExecOP = new SQLOperation(parentSession, statement, confOverlay);
       // check if this is needs to be run asynchronously
diff --git a/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java b/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java
index 21f6e40..25f915b 100644
--- a/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java
+++ b/src/service/src/java/org/apache/hive/service/cli/operation/OperationManager.java
@@ -75,7 +75,7 @@ public class OperationManager extends AbstractService {
     return sessionManager;
   }
   public ExecuteStatementOperation newExecuteStatementOperation(HiveSession parentSession,
-      String statement, Map<String, String> confOverlay) {
+      String statement, Map<String, String> confOverlay) throws HiveSQLException {
     ExecuteStatementOperation executeStatementOperation = ExecuteStatementOperation
         .newExecuteStatementOperation(parentSession, statement, confOverlay);
     addOperation(executeStatementOperation);
-- 
1.7.0.4

