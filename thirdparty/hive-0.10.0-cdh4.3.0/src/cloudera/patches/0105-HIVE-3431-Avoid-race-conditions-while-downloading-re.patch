From ec1270ae223da85fa86da134990b8d9d8c56744c Mon Sep 17 00:00:00 2001
From: Ashutosh Chauhan <hashutosh@apache.org>
Date: Mon, 7 Jan 2013 17:39:15 +0000
Subject: [PATCH 105/121] HIVE-3431 : Avoid race conditions while downloading resources from non-local filesystem (Navis via Ashutosh Chauhan)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1429916 13f79535-47bb-0310-9956-ffa450edef68
---
 .../hadoop/hive/ql/session/SessionState.java       |   33 ++++++++++++++++---
 1 files changed, 27 insertions(+), 6 deletions(-)

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java b/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java
index 78f3f73..392b74b 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java
@@ -620,15 +620,35 @@ public class SessionState {
   private String downloadResource(String value, boolean convertToUnix) {
     if (canDownloadResource(value)) {
       getConsole().printInfo("converting to local " + value);
-      File resourceDir = new File(getConf().getVar(HiveConf.ConfVars.DOWNLOADED_RESOURCES_DIR));
+      String location = getConf().getVar(HiveConf.ConfVars.DOWNLOADED_RESOURCES_DIR);
+
       String destinationName = new Path(value).getName();
-      File destinationFile = new File(resourceDir, destinationName);
-      if ( resourceDir.exists() && ! resourceDir.isDirectory() ) {
-        throw new RuntimeException("The resource directory is not a directory, resourceDir is set to" + resourceDir);
+      String prefix = destinationName;
+      String postfix = null;
+      int index = destinationName.lastIndexOf(".");
+      if (index > 0) {
+        prefix = destinationName.substring(0, index);
+        postfix = destinationName.substring(index);
+      }
+      if (prefix.length() < 3) {
+        prefix += ".tmp";   // prefix should be longer than 3
+      }
+
+      File resourceDir = new File(location);
+      if (resourceDir.exists() && !resourceDir.isDirectory()) {
+        throw new RuntimeException("The resource directory is not a directory, " +
+            "resourceDir is set to " + resourceDir);
       }
-      if ( ! resourceDir.exists() && ! resourceDir.mkdirs() ) {
+      if (!resourceDir.exists() && !resourceDir.mkdirs()) {
         throw new RuntimeException("Couldn't create directory " + resourceDir);
       }
+
+      File destinationFile;
+      try {
+        destinationFile = File.createTempFile(prefix, postfix, resourceDir);
+      } catch (Exception e) {
+        throw new RuntimeException("Failed to create temporary file for " + value, e);
+      }
       try {
         FileSystem fs = FileSystem.get(new URI(value), conf);
         fs.copyToLocalFile(new Path(value), new Path(destinationFile.getCanonicalPath()));
@@ -637,7 +657,8 @@ public class SessionState {
           try {
             DosToUnix.convertWindowsScriptToUnix(destinationFile);
           } catch (Exception e) {
-            throw new RuntimeException("Caught exception while converting to unix line endings", e);
+            throw new RuntimeException("Caught exception while converting file " +
+                destinationFile + " to unix line endings", e);
           }
         }
       } catch (Exception e) {
-- 
1.7.0.4

