From 2387a387d74ac73a6bdc29b8087fbb003b552163 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@cloudera.com>
Date: Wed, 27 Feb 2013 13:19:43 -0600
Subject: [PATCH 068/121] CDH-10690: Backport HIVE-4075 - TypeInfoFactory is not thread safe and is access by multiple threads

---
 .../hive/serde2/typeinfo/TypeInfoFactory.java      |   18 +++++++++---------
 1 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java
index c766c9e..f1b5eb5 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/typeinfo/TypeInfoFactory.java
@@ -19,8 +19,8 @@
 package org.apache.hadoop.hive.serde2.typeinfo;
 
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.apache.hadoop.hive.serde.serdeConstants;
 import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorUtils;
@@ -34,7 +34,7 @@ import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectIn
  */
 public final class TypeInfoFactory {
 
-  static HashMap<String, TypeInfo> cachedPrimitiveTypeInfo = new HashMap<String, TypeInfo>();
+  static ConcurrentHashMap<String, TypeInfo> cachedPrimitiveTypeInfo = new ConcurrentHashMap<String, TypeInfo>();
 
   private TypeInfoFactory() {
     // prevent instantiation
@@ -84,8 +84,8 @@ public final class TypeInfoFactory {
         .getTypeNameFromPrimitiveJava(clazz));
   }
 
-  static HashMap<ArrayList<List<?>>, TypeInfo> cachedStructTypeInfo =
-    new HashMap<ArrayList<List<?>>, TypeInfo>();
+  static ConcurrentHashMap<ArrayList<List<?>>, TypeInfo> cachedStructTypeInfo =
+    new ConcurrentHashMap<ArrayList<List<?>>, TypeInfo>();
 
   public static TypeInfo getStructTypeInfo(List<String> names,
       List<TypeInfo> typeInfos) {
@@ -100,8 +100,8 @@ public final class TypeInfoFactory {
     return result;
   }
 
-  static HashMap<List<?>, TypeInfo> cachedUnionTypeInfo =
-    new HashMap<List<?>, TypeInfo>();
+  static ConcurrentHashMap<List<?>, TypeInfo> cachedUnionTypeInfo =
+    new ConcurrentHashMap<List<?>, TypeInfo>();
 
   public static TypeInfo getUnionTypeInfo(List<TypeInfo> typeInfos) {
     TypeInfo result = cachedUnionTypeInfo.get(typeInfos);
@@ -112,7 +112,7 @@ public final class TypeInfoFactory {
     return result;
   }
 
-  static HashMap<TypeInfo, TypeInfo> cachedListTypeInfo = new HashMap<TypeInfo, TypeInfo>();
+  static ConcurrentHashMap<TypeInfo, TypeInfo> cachedListTypeInfo = new ConcurrentHashMap<TypeInfo, TypeInfo>();
 
   public static TypeInfo getListTypeInfo(TypeInfo elementTypeInfo) {
     TypeInfo result = cachedListTypeInfo.get(elementTypeInfo);
@@ -123,8 +123,8 @@ public final class TypeInfoFactory {
     return result;
   }
 
-  static HashMap<ArrayList<TypeInfo>, TypeInfo> cachedMapTypeInfo =
-    new HashMap<ArrayList<TypeInfo>, TypeInfo>();
+  static ConcurrentHashMap<ArrayList<TypeInfo>, TypeInfo> cachedMapTypeInfo =
+    new ConcurrentHashMap<ArrayList<TypeInfo>, TypeInfo>();
 
   public static TypeInfo getMapTypeInfo(TypeInfo keyTypeInfo,
       TypeInfo valueTypeInfo) {
-- 
1.7.0.4

