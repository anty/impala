From 731947e10febc58f4d7ab3f36bd891d0460daa70 Mon Sep 17 00:00:00 2001
From: Shreepadma Venugopalan <shreepadma@cloudera.com>
Date: Wed, 16 Jan 2013 13:17:34 -0800
Subject: [PATCH 028/121] CDH-9836. Backport HIVE-2439: Upgrade antlr version to 3.4

---
 ivy/libraries.properties                           |    4 +-
 .../apache/hadoop/hive/ql/parse/ASTErrorNode.java  |   49 ++++++++++++++++++++
 .../org/apache/hadoop/hive/ql/parse/ASTNode.java   |   12 +++++
 ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g |    4 +-
 .../apache/hadoop/hive/ql/parse/ParseDriver.java   |   21 +++++---
 .../hadoop/hive/ql/parse/UnparseTranslator.java    |   28 ++++++++++-
 .../results/clientnegative/archive_partspec3.q.out |    2 +-
 .../results/clientnegative/clusterbyorderby.q.out  |    2 +-
 .../results/clientnegative/column_rename3.q.out    |    2 +-
 .../results/clientnegative/lateral_view_join.q.out |    2 +-
 .../clientnegative/select_charliteral.q.out        |    3 +-
 .../results/clientnegative/show_columns2.q.out     |    2 +-
 .../results/clientnegative/show_tables_bad1.q.out  |    2 +-
 .../results/clientnegative/show_tables_bad2.q.out  |    2 +-
 .../results/compiler/errors/invalid_select.q.out   |    3 +-
 .../results/compiler/parse/case_sensitivity.q.out  |    2 +-
 ql/src/test/results/compiler/parse/cast1.q.out     |    2 +-
 ql/src/test/results/compiler/parse/groupby1.q.out  |    2 +-
 ql/src/test/results/compiler/parse/groupby2.q.out  |    2 +-
 ql/src/test/results/compiler/parse/groupby3.q.out  |    2 +-
 ql/src/test/results/compiler/parse/groupby4.q.out  |    2 +-
 ql/src/test/results/compiler/parse/groupby5.q.out  |    2 +-
 ql/src/test/results/compiler/parse/groupby6.q.out  |    2 +-
 ql/src/test/results/compiler/parse/input1.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input2.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input20.q.out   |    2 +-
 ql/src/test/results/compiler/parse/input3.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input4.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input5.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input6.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input7.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input8.q.out    |    2 +-
 ql/src/test/results/compiler/parse/input9.q.out    |    2 +-
 .../test/results/compiler/parse/input_part1.q.out  |    2 +-
 .../compiler/parse/input_testsequencefile.q.out    |    2 +-
 .../results/compiler/parse/input_testxpath.q.out   |    2 +-
 .../results/compiler/parse/input_testxpath2.q.out  |    2 +-
 ql/src/test/results/compiler/parse/join1.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join2.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join3.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join4.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join5.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join6.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join7.q.out     |    2 +-
 ql/src/test/results/compiler/parse/join8.q.out     |    2 +-
 ql/src/test/results/compiler/parse/sample1.q.out   |    2 +-
 ql/src/test/results/compiler/parse/sample2.q.out   |    2 +-
 ql/src/test/results/compiler/parse/sample3.q.out   |    2 +-
 ql/src/test/results/compiler/parse/sample4.q.out   |    2 +-
 ql/src/test/results/compiler/parse/sample5.q.out   |    2 +-
 ql/src/test/results/compiler/parse/sample6.q.out   |    2 +-
 ql/src/test/results/compiler/parse/sample7.q.out   |    2 +-
 ql/src/test/results/compiler/parse/subq.q.out      |    2 +-
 ql/src/test/results/compiler/parse/udf1.q.out      |    2 +-
 ql/src/test/results/compiler/parse/udf4.q.out      |    2 +-
 ql/src/test/results/compiler/parse/udf6.q.out      |    2 +-
 ql/src/test/results/compiler/parse/udf_case.q.out  |    2 +-
 ql/src/test/results/compiler/parse/udf_when.q.out  |    2 +-
 ql/src/test/results/compiler/parse/union.q.out     |    2 +-
 59 files changed, 158 insertions(+), 68 deletions(-)
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/parse/ASTErrorNode.java

diff --git a/src/ivy/libraries.properties b/src/ivy/libraries.properties
index e4e0df9..dec014a 100644
--- a/src/ivy/libraries.properties
+++ b/src/ivy/libraries.properties
@@ -20,8 +20,8 @@
 apacheant.version=1.7.1
 ant-contrib.version=1.0b3
 ant-task.version=2.0.10
-antlr.version=3.0.1
-antlr-runtime.version=3.0.1
+antlr.version=3.4
+antlr-runtime.version=3.4
 asm.version=3.1
 avro.version=1.7.3
 datanucleus-connectionpool.version=2.0.3
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTErrorNode.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTErrorNode.java
new file mode 100644
index 0000000..83afedb
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTErrorNode.java
@@ -0,0 +1,49 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.parse;
+
+import org.antlr.runtime.RecognitionException;
+import org.antlr.runtime.Token;
+import org.antlr.runtime.TokenStream;
+import org.antlr.runtime.tree.CommonErrorNode;
+
+public class ASTErrorNode extends ASTNode {
+
+  /**
+   *
+   */
+  private static final long serialVersionUID = 1L;
+  CommonErrorNode delegate;
+
+  public ASTErrorNode(TokenStream input, Token start, Token stop,
+      RecognitionException e){
+    delegate = new CommonErrorNode(input,start,stop,e);
+  }
+
+  @Override
+  public boolean isNil() { return delegate.isNil(); }
+
+  @Override
+  public int getType() { return delegate.getType(); }
+
+  @Override
+  public String getText() { return delegate.getText(); }
+  @Override
+  public String toString() { return delegate.toString(); }
+}
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTNode.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTNode.java
index fc02e3e..a6fe4c8 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTNode.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ASTNode.java
@@ -23,6 +23,7 @@ import java.util.ArrayList;
 
 import org.antlr.runtime.Token;
 import org.antlr.runtime.tree.CommonTree;
+import org.antlr.runtime.tree.Tree;
 import org.apache.hadoop.hive.ql.lib.Node;
 
 /**
@@ -36,6 +37,10 @@ public class ASTNode extends CommonTree implements Node,Serializable {
   public ASTNode() {
   }
 
+  public ASTNode(ASTNode copy){
+    super(copy);
+  }
+
   /**
    * Constructor.
    *
@@ -51,6 +56,7 @@ public class ASTNode extends CommonTree implements Node,Serializable {
    *
    * @see org.apache.hadoop.hive.ql.lib.Node#getChildren()
    */
+  @Override
   public ArrayList<Node> getChildren() {
     if (super.getChildCount() == 0) {
       return null;
@@ -89,6 +95,12 @@ public class ASTNode extends CommonTree implements Node,Serializable {
     this.origin = origin;
   }
 
+  @Override
+  public Tree dupNode() {
+
+    return new ASTNode(this);
+  }
+
   public String dump() {
     StringBuilder sb = new StringBuilder();
 
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g
index a17dfdc..920ae58 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g
@@ -1568,7 +1568,7 @@ insertClause
    :
      KW_INSERT KW_OVERWRITE destination ifNotExists? -> ^(TOK_DESTINATION destination ifNotExists?)
    | KW_INSERT KW_INTO KW_TABLE tableOrPartition
-       -> ^(TOK_INSERT_INTO ^(tableOrPartition))
+       -> ^(TOK_INSERT_INTO tableOrPartition)
    ;
 
 destination
@@ -1577,7 +1577,7 @@ destination
    :
      KW_LOCAL KW_DIRECTORY StringLiteral -> ^(TOK_LOCAL_DIR StringLiteral)
    | KW_DIRECTORY StringLiteral -> ^(TOK_DIR StringLiteral)
-   | KW_TABLE tableOrPartition -> ^(tableOrPartition)
+   | KW_TABLE tableOrPartition -> tableOrPartition
    ;
 
 limitClause
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseDriver.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseDriver.java
index 440b0a4..bcd1e65 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseDriver.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseDriver.java
@@ -33,6 +33,7 @@ import org.antlr.runtime.RecognitionException;
 import org.antlr.runtime.Token;
 import org.antlr.runtime.TokenRewriteStream;
 import org.antlr.runtime.TokenStream;
+import org.antlr.runtime.tree.CommonTree;
 import org.antlr.runtime.tree.CommonTreeAdaptor;
 import org.antlr.runtime.tree.TreeAdaptor;
 import org.apache.commons.logging.Log;
@@ -310,14 +311,7 @@ public class ParseDriver {
     }
 
     @Override
-    protected void mismatch(IntStream input, int ttype, BitSet follow)
-        throws RecognitionException {
-
-      throw new MismatchedTokenException(ttype, input);
-    }
-
-    @Override
-    public void recoverFromMismatchedSet(IntStream input,
+    public Object recoverFromMismatchedSet(IntStream input,
         RecognitionException re, BitSet follow) throws RecognitionException {
       throw re;
     }
@@ -404,6 +398,17 @@ public class ParseDriver {
     public Object create(Token payload) {
       return new ASTNode(payload);
     }
+
+    @Override
+    public Object dupNode(Object t) {
+
+      return create(((CommonTree)t).token);
+    };
+
+    @Override
+    public Object errorNode(TokenStream input, Token start, Token stop, RecognitionException e) {
+      return new ASTErrorNode(input, start, stop, e);
+    };
   };
 
   public ASTNode parse(String command) throws ParseException {
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java
index 0d95c8e..ec2c088 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java
@@ -29,7 +29,13 @@ import org.apache.hadoop.hive.ql.metadata.HiveUtils;
 
 /**
  * UnparseTranslator is used to "unparse" objects such as views when their
- * definition is stored.
+ * definition is stored. It has a translations map where its possible to replace all the
+ * text with the appropriate escaped version [say invites.ds will be replaced with
+ * `invites`.`ds` and the entire query is processed like this and stored as
+ * Extended text in table's metadata]. This holds all individual translations and
+ * where they apply in the stream. The unparse is lazy and happens when
+ * SemanticAnalyzer.saveViewDefinition() calls TokenRewriteStream.toString().
+ *
  */
 class UnparseTranslator {
   // key is token start index
@@ -57,12 +63,15 @@ class UnparseTranslator {
   }
 
   /**
-   * Register a translation to be performed as part of unparse.
+   * Register a translation to be performed as part of unparse. ANTLR imposes
+   * strict conditions on the translations and errors out during
+   * TokenRewriteStream.toString() if there is an overlap. It expects all
+   * the translations to be disjoint (See HIVE-2439).
    * If the translation overlaps with any previously
    * registered translation, then it must be either
    * identical or a prefix (in which cases it is ignored),
    * or else it must extend the existing translation (i.e.
-   * the existing translation must be a prefix of the new translation).
+   * the existing translation must be a prefix/suffix of the new translation).
    * All other overlap cases result in assertion failures.
    *
    * @param node
@@ -128,6 +137,19 @@ class UnparseTranslator {
       }
     }
 
+    // Is existing entry a suffix of the newer entry and a subset of it?
+    existingEntry = translations.floorEntry(tokenStopIndex);
+    if (existingEntry != null) {
+      if (existingEntry.getKey().equals(tokenStopIndex)) {
+        if (tokenStartIndex < existingEntry.getKey() &&
+            tokenStopIndex == existingEntry.getKey()) {
+          // Seems newer entry is a super-set of existing entry, remove existing entry
+          assert (replacementText.endsWith(existingEntry.getValue().replacementText));
+          translations.remove(tokenStopIndex);
+        }
+      }
+    }
+
     // It's all good: create a new entry in the map (or update existing one)
     translations.put(tokenStartIndex, translation);
   }
diff --git a/src/ql/src/test/results/clientnegative/archive_partspec3.q.out b/src/ql/src/test/results/clientnegative/archive_partspec3.q.out
index 69aa8e9..0bbbf53 100644
--- a/src/ql/src/test/results/clientnegative/archive_partspec3.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_partspec3.q.out
@@ -21,5 +21,5 @@ POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
-FAILED: ParseException line 3:48 mismatched input ')' expecting Identifier near '(' in archive statement
+FAILED: ParseException line 3:48 missing Identifier at ')' near '<EOF>'
 
diff --git a/src/ql/src/test/results/clientnegative/clusterbyorderby.q.out b/src/ql/src/test/results/clientnegative/clusterbyorderby.q.out
index 3d4d901..8ea6c6c 100644
--- a/src/ql/src/test/results/clientnegative/clusterbyorderby.q.out
+++ b/src/ql/src/test/results/clientnegative/clusterbyorderby.q.out
@@ -1,2 +1,2 @@
-FAILED: ParseException line 5:0 mismatched input 'ORDER' expecting EOF near 'tkey'
+FAILED: ParseException line 5:0 missing EOF at 'ORDER' near 'tkey'
 
diff --git a/src/ql/src/test/results/clientnegative/column_rename3.q.out b/src/ql/src/test/results/clientnegative/column_rename3.q.out
index f1ed689..a581d84 100644
--- a/src/ql/src/test/results/clientnegative/column_rename3.q.out
+++ b/src/ql/src/test/results/clientnegative/column_rename3.q.out
@@ -1,2 +1,2 @@
-FAILED: ParseException line 1:27 cannot recognize input near '<EOF>' '<EOF>' '<EOF>' in column type
+FAILED: ParseException line 1:30 cannot recognize input near '<EOF>' '<EOF>' '<EOF>' in column type
 
diff --git a/src/ql/src/test/results/clientnegative/lateral_view_join.q.out b/src/ql/src/test/results/clientnegative/lateral_view_join.q.out
index 4421436..556c3d7 100644
--- a/src/ql/src/test/results/clientnegative/lateral_view_join.q.out
+++ b/src/ql/src/test/results/clientnegative/lateral_view_join.q.out
@@ -1,2 +1,2 @@
-FAILED: ParseException line 1:59 mismatched input 'AS' expecting Identifier near ')' in table alias
+FAILED: ParseException line 1:59 extraneous input 'AS' expecting Identifier near 'myTable' in lateral view
 
diff --git a/src/ql/src/test/results/clientnegative/select_charliteral.q.out b/src/ql/src/test/results/clientnegative/select_charliteral.q.out
index 6ba0e20..9a66551 100644
--- a/src/ql/src/test/results/clientnegative/select_charliteral.q.out
+++ b/src/ql/src/test/results/clientnegative/select_charliteral.q.out
@@ -1,2 +1,3 @@
-FAILED: ParseException line 3:11 mismatched input ',' expecting \' near '_c17' in character string literal
+FAILED: ParseException line 3:11 missing \' at ',' near '_c17' in character string literal
+line 4:0 mismatched input '<EOF>' expecting \' near '_c17' in character string literal
 
diff --git a/src/ql/src/test/results/clientnegative/show_columns2.q.out b/src/ql/src/test/results/clientnegative/show_columns2.q.out
index a06dc5b..bd6a10a 100644
--- a/src/ql/src/test/results/clientnegative/show_columns2.q.out
+++ b/src/ql/src/test/results/clientnegative/show_columns2.q.out
@@ -1,2 +1,2 @@
-FAILED: ParseException line 1:29 mismatched input 'foo' expecting EOF near 'shcol_test'
+FAILED: ParseException line 1:29 extraneous input 'foo' expecting EOF near '<EOF>'
 
diff --git a/src/ql/src/test/results/clientnegative/show_tables_bad1.q.out b/src/ql/src/test/results/clientnegative/show_tables_bad1.q.out
index 0ae3af6..7e575b7 100644
--- a/src/ql/src/test/results/clientnegative/show_tables_bad1.q.out
+++ b/src/ql/src/test/results/clientnegative/show_tables_bad1.q.out
@@ -1,2 +1,2 @@
-FAILED: ParseException line 1:12 mismatched input '<EOF>' expecting set null in Identifier for show statement
+FAILED: ParseException line 1:16 mismatched input '<EOF>' expecting set null in Identifier for show statement
 
diff --git a/src/ql/src/test/results/clientnegative/show_tables_bad2.q.out b/src/ql/src/test/results/clientnegative/show_tables_bad2.q.out
index 331deb3..0efc2b5 100644
--- a/src/ql/src/test/results/clientnegative/show_tables_bad2.q.out
+++ b/src/ql/src/test/results/clientnegative/show_tables_bad2.q.out
@@ -1,2 +1,2 @@
-FAILED: ParseException line 1:25 mismatched input '<EOF>' expecting set null in Identifier for show statement
+FAILED: ParseException line 1:29 mismatched input '<EOF>' expecting set null in Identifier for show statement
 
diff --git a/src/ql/src/test/results/compiler/errors/invalid_select.q.out b/src/ql/src/test/results/compiler/errors/invalid_select.q.out
index b621ef7..aafdc31 100644
--- a/src/ql/src/test/results/compiler/errors/invalid_select.q.out
+++ b/src/ql/src/test/results/compiler/errors/invalid_select.q.out
@@ -1 +1,2 @@
-Parse Error: line 3:6 mismatched input '(' expecting FROM near 'trim' in from clause
+Parse Error: line 3:6 missing FROM at '(' near '(' in subquery source
+line 3:7 cannot recognize input near 'b' ')' 'FROM' in subquery source
diff --git a/src/ql/src/test/results/compiler/parse/case_sensitivity.q.out b/src/ql/src/test/results/compiler/parse/case_sensitivity.q.out
index e02e0b2..c14fb1a 100644
--- a/src/ql/src/test/results/compiler/parse/case_sensitivity.q.out
+++ b/src/ql/src/test/results/compiler/parse/case_sensitivity.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME SRC_THRIFT))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR ([ (. (TOK_TABLE_OR_COL src_Thrift) LINT) 1)) (TOK_SELEXPR (. ([ (. (TOK_TABLE_OR_COL src_thrift) lintstring) 0) MYSTRING))) (TOK_WHERE (> ([ (. (TOK_TABLE_OR_COL src_thrift) liNT) 0) 0)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME SRC_THRIFT))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR ([ (. (TOK_TABLE_OR_COL src_Thrift) LINT) 1)) (TOK_SELEXPR (. ([ (. (TOK_TABLE_OR_COL src_thrift) lintstring) 0) MYSTRING))) (TOK_WHERE (> ([ (. (TOK_TABLE_OR_COL src_thrift) liNT) 0) 0)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/cast1.q.out b/src/ql/src/test/results/compiler/parse/cast1.q.out
index f0489a5..5d37c9d 100644
--- a/src/ql/src/test/results/compiler/parse/cast1.q.out
+++ b/src/ql/src/test/results/compiler/parse/cast1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ 3 2)) (TOK_SELEXPR (+ 3.0 2)) (TOK_SELEXPR (+ 3 2.0)) (TOK_SELEXPR (+ 3.0 2.0)) (TOK_SELEXPR (+ 3 (TOK_FUNCTION TOK_INT 2.0))) (TOK_SELEXPR (TOK_FUNCTION TOK_BOOLEAN 1)) (TOK_SELEXPR (TOK_FUNCTION TOK_INT TRUE))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL src) key) 86)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ 3 2)) (TOK_SELEXPR (+ 3.0 2)) (TOK_SELEXPR (+ 3 2.0)) (TOK_SELEXPR (+ 3.0 2.0)) (TOK_SELEXPR (+ 3 (TOK_FUNCTION TOK_INT 2.0))) (TOK_SELEXPR (TOK_FUNCTION TOK_BOOLEAN 1)) (TOK_SELEXPR (TOK_FUNCTION TOK_INT TRUE))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL src) key) 86)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/groupby1.q.out b/src/ql/src/test/results/compiler/parse/groupby1.q.out
index 61d04ac..1aa680c 100755
--- a/src/ql/src/test/results/compiler/parse/groupby1.q.out
+++ b/src/ql/src/test/results/compiler/parse/groupby1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/groupby2.q.out b/src/ql/src/test/results/compiler/parse/groupby2.q.out
index 8300bef..2c70804 100755
--- a/src/ql/src/test/results/compiler/parse/groupby2.q.out
+++ b/src/ql/src/test/results/compiler/parse/groupby2.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1)) (TOK_SELEXPR (TOK_FUNCTIONDI count (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION concat (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1) (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))))) (TOK_GROUPBY (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1)) (TOK_SELEXPR (TOK_FUNCTIONDI count (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION concat (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1) (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))))) (TOK_GROUPBY (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/groupby3.q.out b/src/ql/src/test/results/compiler/parse/groupby3.q.out
index 05ba671..057c101 100644
--- a/src/ql/src/test/results/compiler/parse/groupby3.q.out
+++ b/src/ql/src/test/results/compiler/parse/groupby3.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION avg (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTIONDI avg (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION max (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION min (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION avg (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTIONDI avg (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION max (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5))) (TOK_SELEXPR (TOK_FUNCTION min (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/groupby4.q.out b/src/ql/src/test/results/compiler/parse/groupby4.q.out
index d441c5c..d555d20 100644
--- a/src/ql/src/test/results/compiler/parse/groupby4.q.out
+++ b/src/ql/src/test/results/compiler/parse/groupby4.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1))) (TOK_GROUPBY (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1))) (TOK_GROUPBY (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) key) 1 1)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/groupby5.q.out b/src/ql/src/test/results/compiler/parse/groupby5.q.out
index 1bcb79c..0aa6914 100644
--- a/src/ql/src/test/results/compiler/parse/groupby5.q.out
+++ b/src/ql/src/test/results/compiler/parse/groupby5.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/groupby6.q.out b/src/ql/src/test/results/compiler/parse/groupby6.q.out
index eb11ccb..52fa9b4 100644
--- a/src/ql/src/test/results/compiler/parse/groupby6.q.out
+++ b/src/ql/src/test/results/compiler/parse/groupby6.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECTDI (TOK_SELEXPR (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5 1))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECTDI (TOK_SELEXPR (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5 1))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input1.q.out b/src/ql/src/test/results/compiler/parse/input1.q.out
index 092a04c..fa3613e 100755
--- a/src/ql/src/test/results/compiler/parse/input1.q.out
+++ b/src/ql/src/test/results/compiler/parse/input1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input2.q.out b/src/ql/src/test/results/compiler/parse/input2.q.out
index 884ecc8..153f517 100755
--- a/src/ql/src/test/results/compiler/parse/input2.q.out
+++ b/src/ql/src/test/results/compiler/parse/input2.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest2))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (and (>= (. (TOK_TABLE_OR_COL src) key) 100) (< (. (TOK_TABLE_OR_COL src) key) 200)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest3) (TOK_PARTSPEC (TOK_PARTVAL ds '2008-04-08') (TOK_PARTVAL hr '12')))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR 2)) (TOK_WHERE (>= (. (TOK_TABLE_OR_COL src) key) 200)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest2))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (and (>= (. (TOK_TABLE_OR_COL src) key) 100) (< (. (TOK_TABLE_OR_COL src) key) 200)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest3) (TOK_PARTSPEC (TOK_PARTVAL ds '2008-04-08') (TOK_PARTVAL hr '12')))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR 2)) (TOK_WHERE (>= (. (TOK_TABLE_OR_COL src) key) 200)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input20.q.out b/src/ql/src/test/results/compiler/parse/input20.q.out
index b68d470..da4c1af 100644
--- a/src/ql/src/test/results/compiler/parse/input20.q.out
+++ b/src/ql/src/test/results/compiler/parse/input20.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (% (. (TOK_TABLE_OR_COL src) key) 2) (% (. (TOK_TABLE_OR_COL src) key) 5)) TOK_SERDE TOK_RECORDWRITER 'cat' TOK_SERDE TOK_RECORDREADER))) (TOK_CLUSTERBY (TOK_TABLE_OR_COL key)))) tmap)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (. (TOK_TABLE_OR_COL tmap) key) (. (TOK_TABLE_OR_COL tmap) value)) TOK_SERDE TOK_RECORDWRITER 'uniq -c | sed "s@^ *@@" | sed "s@\t@_@" | sed "s@ @\t@"' TOK_SERDE TOK_RECORDREADER (TOK_ALIASLIST key value)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (% (. (TOK_TABLE_OR_COL src) key) 2) (% (. (TOK_TABLE_OR_COL src) key) 5)) TOK_SERDE TOK_RECORDWRITER 'cat' TOK_SERDE TOK_RECORDREADER))) (TOK_CLUSTERBY (TOK_TABLE_OR_COL key)))) tmap)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (. (TOK_TABLE_OR_COL tmap) key) (. (TOK_TABLE_OR_COL tmap) value)) TOK_SERDE TOK_RECORDWRITER 'uniq -c | sed "s@^ *@@" | sed "s@\t@_@" | sed "s@ @\t@"' TOK_SERDE TOK_RECORDREADER (TOK_ALIASLIST key value)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input3.q.out b/src/ql/src/test/results/compiler/parse/input3.q.out
index e0d19b2..b033f3a 100755
--- a/src/ql/src/test/results/compiler/parse/input3.q.out
+++ b/src/ql/src/test/results/compiler/parse/input3.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest2))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (and (>= (. (TOK_TABLE_OR_COL src) key) 100) (< (. (TOK_TABLE_OR_COL src) key) 200)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest3) (TOK_PARTSPEC (TOK_PARTVAL ds '2008-04-08') (TOK_PARTVAL hr '12')))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR 2)) (TOK_WHERE (and (>= (. (TOK_TABLE_OR_COL src) key) 200) (< (. (TOK_TABLE_OR_COL src) key) 300)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../../../../build/contrib/hive/ql/test/data/warehouse/dest4.out')) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (>= (. (TOK_TABLE_OR_COL src) key) 300)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest2))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (and (>= (. (TOK_TABLE_OR_COL src) key) 100) (< (. (TOK_TABLE_OR_COL src) key) 200)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest3) (TOK_PARTSPEC (TOK_PARTVAL ds '2008-04-08') (TOK_PARTVAL hr '12')))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR 2)) (TOK_WHERE (and (>= (. (TOK_TABLE_OR_COL src) key) 200) (< (. (TOK_TABLE_OR_COL src) key) 300)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../../../../build/contrib/hive/ql/test/data/warehouse/dest4.out')) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (>= (. (TOK_TABLE_OR_COL src) key) 300)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input4.q.out b/src/ql/src/test/results/compiler/parse/input4.q.out
index 70108c0..c1425e7 100755
--- a/src/ql/src/test/results/compiler/parse/input4.q.out
+++ b/src/ql/src/test/results/compiler/parse/input4.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src) value)) TOK_SERDE TOK_RECORDWRITER '/bin/cat' TOK_SERDE TOK_RECORDREADER (TOK_ALIASLIST tkey tvalue)))) (TOK_CLUSTERBY (TOK_TABLE_OR_COL tkey)))) tmap)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tkey)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tvalue))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL tmap) tkey) 100)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (. (TOK_TABLE_OR_COL src) key) (. (TOK_TABLE_OR_COL src) value)) TOK_SERDE TOK_RECORDWRITER '/bin/cat' TOK_SERDE TOK_RECORDREADER (TOK_ALIASLIST tkey tvalue)))) (TOK_CLUSTERBY (TOK_TABLE_OR_COL tkey)))) tmap)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tkey)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tvalue))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL tmap) tkey) 100)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input5.q.out b/src/ql/src/test/results/compiler/parse/input5.q.out
index 73c8947..854907b 100644
--- a/src/ql/src/test/results/compiler/parse/input5.q.out
+++ b/src/ql/src/test/results/compiler/parse/input5.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src_thrift))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (. (TOK_TABLE_OR_COL src_thrift) lint) (. (TOK_TABLE_OR_COL src_thrift) lintstring)) TOK_SERDE TOK_RECORDWRITER '/bin/cat' TOK_SERDE TOK_RECORDREADER (TOK_ALIASLIST tkey tvalue)))) (TOK_CLUSTERBY (TOK_TABLE_OR_COL tkey)))) tmap)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tkey)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tvalue))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src_thrift))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TRANSFORM (TOK_EXPLIST (. (TOK_TABLE_OR_COL src_thrift) lint) (. (TOK_TABLE_OR_COL src_thrift) lintstring)) TOK_SERDE TOK_RECORDWRITER '/bin/cat' TOK_SERDE TOK_RECORDREADER (TOK_ALIASLIST tkey tvalue)))) (TOK_CLUSTERBY (TOK_TABLE_OR_COL tkey)))) tmap)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tkey)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL tmap) tvalue))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input6.q.out b/src/ql/src/test/results/compiler/parse/input6.q.out
index 062bf73..35f73a6 100644
--- a/src/ql/src/test/results/compiler/parse/input6.q.out
+++ b/src/ql/src/test/results/compiler/parse/input6.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value))) (TOK_WHERE (TOK_FUNCTION TOK_ISNULL (. (TOK_TABLE_OR_COL src1) key))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value))) (TOK_WHERE (TOK_FUNCTION TOK_ISNULL (. (TOK_TABLE_OR_COL src1) key))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input7.q.out b/src/ql/src/test/results/compiler/parse/input7.q.out
index 56c48ac..a26964d 100644
--- a/src/ql/src/test/results/compiler/parse/input7.q.out
+++ b/src/ql/src/test/results/compiler/parse/input7.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR TOK_NULL) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR TOK_NULL) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input8.q.out b/src/ql/src/test/results/compiler/parse/input8.q.out
index 0b30b3b..a9a3bd1 100644
--- a/src/ql/src/test/results/compiler/parse/input8.q.out
+++ b/src/ql/src/test/results/compiler/parse/input8.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ 4 TOK_NULL)) (TOK_SELEXPR (- (. (TOK_TABLE_OR_COL src1) key) TOK_NULL)) (TOK_SELEXPR (+ TOK_NULL TOK_NULL))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (+ 4 TOK_NULL)) (TOK_SELEXPR (- (. (TOK_TABLE_OR_COL src1) key) TOK_NULL)) (TOK_SELEXPR (+ TOK_NULL TOK_NULL))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input9.q.out b/src/ql/src/test/results/compiler/parse/input9.q.out
index 298cd9f..b24ef54 100644
--- a/src/ql/src/test/results/compiler/parse/input9.q.out
+++ b/src/ql/src/test/results/compiler/parse/input9.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR TOK_NULL) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key))) (TOK_WHERE (= TOK_NULL TOK_NULL)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR TOK_NULL) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key))) (TOK_WHERE (= TOK_NULL TOK_NULL)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input_part1.q.out b/src/ql/src/test/results/compiler/parse/input_part1.q.out
index 367b103..880e0f8 100644
--- a/src/ql/src/test/results/compiler/parse/input_part1.q.out
+++ b/src/ql/src/test/results/compiler/parse/input_part1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcpart))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) hr)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) ds))) (TOK_WHERE (and (and (< (. (TOK_TABLE_OR_COL srcpart) key) 100) (= (. (TOK_TABLE_OR_COL srcpart) ds) '2008-04-08')) (= (. (TOK_TABLE_OR_COL srcpart) hr) '12'))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcpart))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) hr)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL srcpart) ds))) (TOK_WHERE (and (and (< (. (TOK_TABLE_OR_COL srcpart) key) 100) (= (. (TOK_TABLE_OR_COL srcpart) ds) '2008-04-08')) (= (. (TOK_TABLE_OR_COL srcpart) hr) '12'))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input_testsequencefile.q.out b/src/ql/src/test/results/compiler/parse/input_testsequencefile.q.out
index 76d0517..0b80da4 100644
--- a/src/ql/src/test/results/compiler/parse/input_testsequencefile.q.out
+++ b/src/ql/src/test/results/compiler/parse/input_testsequencefile.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest4_sequencefile))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest4_sequencefile))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input_testxpath.q.out b/src/ql/src/test/results/compiler/parse/input_testxpath.q.out
index e944831..aeb505b 100644
--- a/src/ql/src/test/results/compiler/parse/input_testxpath.q.out
+++ b/src/ql/src/test/results/compiler/parse/input_testxpath.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src_thrift))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR ([ (. (TOK_TABLE_OR_COL src_thrift) lint) 1)) (TOK_SELEXPR (. ([ (. (TOK_TABLE_OR_COL src_thrift) lintstring) 0) mystring)) (TOK_SELEXPR ([ (. (TOK_TABLE_OR_COL src_thrift) mstringstring) 'key_2'))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src_thrift))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR ([ (. (TOK_TABLE_OR_COL src_thrift) lint) 1)) (TOK_SELEXPR (. ([ (. (TOK_TABLE_OR_COL src_thrift) lintstring) 0) mystring)) (TOK_SELEXPR ([ (. (TOK_TABLE_OR_COL src_thrift) mstringstring) 'key_2'))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/input_testxpath2.q.out b/src/ql/src/test/results/compiler/parse/input_testxpath2.q.out
index 48afa84..d4c4610 100644
--- a/src/ql/src/test/results/compiler/parse/input_testxpath2.q.out
+++ b/src/ql/src/test/results/compiler/parse/input_testxpath2.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src_thrift))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION size (. (TOK_TABLE_OR_COL src_thrift) lint))) (TOK_SELEXPR (TOK_FUNCTION size (. (TOK_TABLE_OR_COL src_thrift) lintstring))) (TOK_SELEXPR (TOK_FUNCTION size (. (TOK_TABLE_OR_COL src_thrift) mstringstring)))) (TOK_WHERE (AND (TOK_FUNCTION TOK_ISNOTNULL (. (TOK_TABLE_OR_COL src_thrift) lint)) (NOT (TOK_FUNCTION TOK_ISNULL (. (TOK_TABLE_OR_COL src_thrift) mstringstring))))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src_thrift))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION size (. (TOK_TABLE_OR_COL src_thrift) lint))) (TOK_SELEXPR (TOK_FUNCTION size (. (TOK_TABLE_OR_COL src_thrift) lintstring))) (TOK_SELEXPR (TOK_FUNCTION size (. (TOK_TABLE_OR_COL src_thrift) mstringstring)))) (TOK_WHERE (AND (TOK_FUNCTION TOK_ISNOTNULL (. (TOK_TABLE_OR_COL src_thrift) lint)) (NOT (TOK_FUNCTION TOK_ISNULL (. (TOK_TABLE_OR_COL src_thrift) mstringstring))))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join1.q.out b/src/ql/src/test/results/compiler/parse/join1.q.out
index 8e09f3c..1c45f30 100644
--- a/src/ql/src/test/results/compiler/parse/join1.q.out
+++ b/src/ql/src/test/results/compiler/parse/join1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join2.q.out b/src/ql/src/test/results/compiler/parse/join2.q.out
index 848798a..debbac3 100644
--- a/src/ql/src/test/results/compiler/parse/join2.q.out
+++ b/src/ql/src/test/results/compiler/parse/join2.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key))) (TOK_TABREF (TOK_TABNAME src) src3) (= (+ (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)) (. (TOK_TABLE_OR_COL src3) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key))) (TOK_TABREF (TOK_TABNAME src) src3) (= (+ (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key)) (. (TOK_TABLE_OR_COL src3) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join3.q.out b/src/ql/src/test/results/compiler/parse/join3.q.out
index 6e50e16..51baa24 100644
--- a/src/ql/src/test/results/compiler/parse/join3.q.out
+++ b/src/ql/src/test/results/compiler/parse/join3.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key))) (TOK_TABREF (TOK_TABNAME src) src3) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF (TOK_TABNAME src) src1) (TOK_TABREF (TOK_TABNAME src) src2) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src2) key))) (TOK_TABREF (TOK_TABNAME src) src3) (= (. (TOK_TABLE_OR_COL src1) key) (. (TOK_TABLE_OR_COL src3) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join4.q.out b/src/ql/src/test/results/compiler/parse/join4.q.out
index 96bb14d..77f3486 100644
--- a/src/ql/src/test/results/compiler/parse/join4.q.out
+++ b/src/ql/src/test/results/compiler/parse/join4.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join5.q.out b/src/ql/src/test/results/compiler/parse/join5.q.out
index c0e92f8..4db56a4 100644
--- a/src/ql/src/test/results/compiler/parse/join5.q.out
+++ b/src/ql/src/test/results/compiler/parse/join5.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join6.q.out b/src/ql/src/test/results/compiler/parse/join6.q.out
index d498a51..3114d62 100644
--- a/src/ql/src/test/results/compiler/parse/join6.q.out
+++ b/src/ql/src/test/results/compiler/parse/join6.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_FULLOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_FULLOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join7.q.out b/src/ql/src/test/results/compiler/parse/join7.q.out
index 9ad3ffb..9b12cec 100644
--- a/src/ql/src/test/results/compiler/parse/join7.q.out
+++ b/src/ql/src/test/results/compiler/parse/join7.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_FULLOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src3)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) key) c5) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value) c6)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src3) key) 20) (< (. (TOK_TABLE_OR_COL src3) key) 25))))) c) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL c) c5)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c5) c5) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c6) c6)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c5)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c6))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_FULLOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src3)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) key) c5) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src3) value) c6)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src3) key) 20) (< (. (TOK_TABLE_OR_COL src3) key) 25))))) c) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL c) c5)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c5) c5) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c6) c6)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c5)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c6))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/join8.q.out b/src/ql/src/test/results/compiler/parse/join8.q.out
index 63bc90b..aa4e64a 100644
--- a/src/ql/src/test/results/compiler/parse/join8.q.out
+++ b/src/ql/src/test/results/compiler/parse/join8.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))) (TOK_WHERE (AND (TOK_FUNCTION TOK_ISNULL (. (TOK_TABLE_OR_COL c) c3)) (TOK_FUNCTION TOK_ISNOTNULL (. (TOK_TABLE_OR_COL c) c1)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) value) c2)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src1) key) 10) (< (. (TOK_TABLE_OR_COL src1) key) 20))))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) value) c4)) (TOK_WHERE (and (> (. (TOK_TABLE_OR_COL src2) key) 15) (< (. (TOK_TABLE_OR_COL src2) key) 25))))) b) (= (. (TOK_TABLE_OR_COL a) c1) (. (TOK_TABLE_OR_COL b) c3)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c1) c1) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) c2) c2) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c3) c3) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) c4) c4)))) c)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c2)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c3)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL c) c4))) (TOK_WHERE (AND (TOK_FUNCTION TOK_ISNULL (. (TOK_TABLE_OR_COL c) c3)) (TOK_FUNCTION TOK_ISNOTNULL (. (TOK_TABLE_OR_COL c) c1)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample1.q.out b/src/ql/src/test/results/compiler/parse/sample1.q.out
index b1f8e60..9a493ad 100644
--- a/src/ql/src/test/results/compiler/parse/sample1.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcpart) (TOK_TABLEBUCKETSAMPLE 1 1 (TOK_FUNCTION rand)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))) (TOK_WHERE (and (= (. (TOK_TABLE_OR_COL s) ds) '2008-04-08') (= (. (TOK_TABLE_OR_COL s) hr) '11'))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcpart) (TOK_TABLEBUCKETSAMPLE 1 1 (TOK_FUNCTION rand)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))) (TOK_WHERE (and (= (. (TOK_TABLE_OR_COL s) ds) '2008-04-08') (= (. (TOK_TABLE_OR_COL s) hr) '11'))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample2.q.out b/src/ql/src/test/results/compiler/parse/sample2.q.out
index 4f036b3..e67c761 100644
--- a/src/ql/src/test/results/compiler/parse/sample2.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample2.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 2) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 2) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample3.q.out b/src/ql/src/test/results/compiler/parse/sample3.q.out
index 44e9bb8..ad5855b 100644
--- a/src/ql/src/test/results/compiler/parse/sample3.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample3.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 2 (TOK_TABLE_OR_COL key) (TOK_TABLE_OR_COL value)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 2 (TOK_TABLE_OR_COL key) (TOK_TABLE_OR_COL value)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample4.q.out b/src/ql/src/test/results/compiler/parse/sample4.q.out
index ead43f4..790b009 100644
--- a/src/ql/src/test/results/compiler/parse/sample4.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample4.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 2 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 2 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample5.q.out b/src/ql/src/test/results/compiler/parse/sample5.q.out
index 78cf066..cb55074 100644
--- a/src/ql/src/test/results/compiler/parse/sample5.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample5.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 5 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 5 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample6.q.out b/src/ql/src/test/results/compiler/parse/sample6.q.out
index d06de7b..3562bb8 100644
--- a/src/ql/src/test/results/compiler/parse/sample6.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample6.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 4 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 4 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/sample7.q.out b/src/ql/src/test/results/compiler/parse/sample7.q.out
index 88693c0..6bcf840 100644
--- a/src/ql/src/test/results/compiler/parse/sample7.q.out
+++ b/src/ql/src/test/results/compiler/parse/sample7.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 4 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))) (TOK_WHERE (> (. (TOK_TABLE_OR_COL s) key) 100)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcbucket) (TOK_TABLEBUCKETSAMPLE 1 4 (TOK_TABLE_OR_COL key)) s)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME dest1))) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME s)))) (TOK_WHERE (> (. (TOK_TABLE_OR_COL s) key) 100)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/subq.q.out b/src/ql/src/test/results/compiler/parse/subq.q.out
index 1198a82..afdcb57 100644
--- a/src/ql/src/test/results/compiler/parse/subq.q.out
+++ b/src/ql/src/test/results/compiler/parse/subq.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) unioninput)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../build/ql/test/data/warehouse/union.out')) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME unioninput)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) unioninput)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../build/ql/test/data/warehouse/union.out')) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME unioninput)))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/udf1.q.out b/src/ql/src/test/results/compiler/parse/udf1.q.out
index 13bd3cb..a9084e1 100644
--- a/src/ql/src/test/results/compiler/parse/udf1.q.out
+++ b/src/ql/src/test/results/compiler/parse/udf1.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (LIKE 'a' '%a%')) (TOK_SELEXPR (LIKE 'b' '%a%')) (TOK_SELEXPR (LIKE 'ab' '%a%')) (TOK_SELEXPR (LIKE 'ab' '%a_')) (TOK_SELEXPR (LIKE '%_' '\%\_')) (TOK_SELEXPR (LIKE 'ab' '\%\_')) (TOK_SELEXPR (LIKE 'ab' '_a%')) (TOK_SELEXPR (LIKE 'ab' 'a')) (TOK_SELEXPR (RLIKE '' '.*')) (TOK_SELEXPR (RLIKE 'a' '[ab]')) (TOK_SELEXPR (RLIKE '' '[ab]')) (TOK_SELEXPR (RLIKE 'hadoop' '[a-z]*')) (TOK_SELEXPR (RLIKE 'hadoop' 'o*')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'abc' 'b' 'c')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'abc' 'z' 'a')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'abbbb' 'bb' 'b')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'hadoop' '(.)[a-z]*' '$1ive'))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL src) key) 86)))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (LIKE 'a' '%a%')) (TOK_SELEXPR (LIKE 'b' '%a%')) (TOK_SELEXPR (LIKE 'ab' '%a%')) (TOK_SELEXPR (LIKE 'ab' '%a_')) (TOK_SELEXPR (LIKE '%_' '\%\_')) (TOK_SELEXPR (LIKE 'ab' '\%\_')) (TOK_SELEXPR (LIKE 'ab' '_a%')) (TOK_SELEXPR (LIKE 'ab' 'a')) (TOK_SELEXPR (RLIKE '' '.*')) (TOK_SELEXPR (RLIKE 'a' '[ab]')) (TOK_SELEXPR (RLIKE '' '[ab]')) (TOK_SELEXPR (RLIKE 'hadoop' '[a-z]*')) (TOK_SELEXPR (RLIKE 'hadoop' 'o*')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'abc' 'b' 'c')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'abc' 'z' 'a')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'abbbb' 'bb' 'b')) (TOK_SELEXPR (TOK_FUNCTION REGEXP_REPLACE 'hadoop' '(.)[a-z]*' '$1ive'))) (TOK_WHERE (= (. (TOK_TABLE_OR_COL src) key) 86)))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/udf4.q.out b/src/ql/src/test/results/compiler/parse/udf4.q.out
index 50d3787..6065692 100644
--- a/src/ql/src/test/results/compiler/parse/udf4.q.out
+++ b/src/ql/src/test/results/compiler/parse/udf4.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME dest1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION round 1.0)) (TOK_SELEXPR (TOK_FUNCTION round 1.5)) (TOK_SELEXPR (TOK_FUNCTION round (- 1.5))) (TOK_SELEXPR (TOK_FUNCTION floor 1.0)) (TOK_SELEXPR (TOK_FUNCTION floor 1.5)) (TOK_SELEXPR (TOK_FUNCTION floor (- 1.5))) (TOK_SELEXPR (TOK_FUNCTION sqrt 1.0)) (TOK_SELEXPR (TOK_FUNCTION sqrt (- 1.0))) (TOK_SELEXPR (TOK_FUNCTION sqrt 0.0)) (TOK_SELEXPR (TOK_FUNCTION ceil 1.0)) (TOK_SELEXPR (TOK_FUNCTION ceil 1.5)) (TOK_SELEXPR (TOK_FUNCTION ceil (- 1.5))) (TOK_SELEXPR (TOK_FUNCTION ceiling 1.0)) (TOK_SELEXPR (TOK_FUNCTION rand 3)) (TOK_SELEXPR (+ 3)) (TOK_SELEXPR (- 3)) (TOK_SELEXPR (+ 1 (+ 2))) (TOK_SELEXPR (+ 1 (- 2))) (TOK_SELEXPR (~ 1))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME dest1))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION round 1.0)) (TOK_SELEXPR (TOK_FUNCTION round 1.5)) (TOK_SELEXPR (TOK_FUNCTION round (- 1.5))) (TOK_SELEXPR (TOK_FUNCTION floor 1.0)) (TOK_SELEXPR (TOK_FUNCTION floor 1.5)) (TOK_SELEXPR (TOK_FUNCTION floor (- 1.5))) (TOK_SELEXPR (TOK_FUNCTION sqrt 1.0)) (TOK_SELEXPR (TOK_FUNCTION sqrt (- 1.0))) (TOK_SELEXPR (TOK_FUNCTION sqrt 0.0)) (TOK_SELEXPR (TOK_FUNCTION ceil 1.0)) (TOK_SELEXPR (TOK_FUNCTION ceil 1.5)) (TOK_SELEXPR (TOK_FUNCTION ceil (- 1.5))) (TOK_SELEXPR (TOK_FUNCTION ceiling 1.0)) (TOK_SELEXPR (TOK_FUNCTION rand 3)) (TOK_SELEXPR (+ 3)) (TOK_SELEXPR (- 3)) (TOK_SELEXPR (+ 1 (+ 2))) (TOK_SELEXPR (+ 1 (- 2))) (TOK_SELEXPR (~ 1))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/udf6.q.out b/src/ql/src/test/results/compiler/parse/udf6.q.out
index 978b577..795216a 100644
--- a/src/ql/src/test/results/compiler/parse/udf6.q.out
+++ b/src/ql/src/test/results/compiler/parse/udf6.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION CONCAT 'a' 'b')) (TOK_SELEXPR (TOK_FUNCTION IF TRUE 1 2))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION CONCAT 'a' 'b')) (TOK_SELEXPR (TOK_FUNCTION IF TRUE 1 2))))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/udf_case.q.out b/src/ql/src/test/results/compiler/parse/udf_case.q.out
index 0c3bbd4..f8de5fc 100644
--- a/src/ql/src/test/results/compiler/parse/udf_case.q.out
+++ b/src/ql/src/test/results/compiler/parse/udf_case.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION CASE 1 1 2 3 4 5)) (TOK_SELEXPR (TOK_FUNCTION CASE 11 12 13 14 15))) (TOK_LIMIT 1))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION CASE 1 1 2 3 4 5)) (TOK_SELEXPR (TOK_FUNCTION CASE 11 12 13 14 15))) (TOK_LIMIT 1))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/udf_when.q.out b/src/ql/src/test/results/compiler/parse/udf_when.q.out
index 40c4e10..a527fa4 100644
--- a/src/ql/src/test/results/compiler/parse/udf_when.q.out
+++ b/src/ql/src/test/results/compiler/parse/udf_when.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION WHEN (= 1 1) 2 (= 3 5) 4 5)) (TOK_SELEXPR (TOK_FUNCTION WHEN (= 12 11) 13 (= 14 10) 15))) (TOK_LIMIT 1))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_FUNCTION WHEN (= 1 1) 2 (= 3 5) 4 5)) (TOK_SELEXPR (TOK_FUNCTION WHEN (= 12 11) 13 (= 14 10) 15))) (TOK_LIMIT 1))) <EOF>
\ No newline at end of file
diff --git a/src/ql/src/test/results/compiler/parse/union.q.out b/src/ql/src/test/results/compiler/parse/union.q.out
index 3185f21..d9be739 100644
--- a/src/ql/src/test/results/compiler/parse/union.q.out
+++ b/src/ql/src/test/results/compiler/parse/union.q.out
@@ -1 +1 @@
-(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (> (. (TOK_TABLE_OR_COL src) key) 100))))) unioninput)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../build/ql/test/data/warehouse/union.out')) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME unioninput)))))) null
\ No newline at end of file
+(TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) value))) (TOK_WHERE (< (. (TOK_TABLE_OR_COL src) key) 100)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME src)))) (TOK_WHERE (> (. (TOK_TABLE_OR_COL src) key) 100))))) unioninput)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR '../build/ql/test/data/warehouse/union.out')) (TOK_SELECT (TOK_SELEXPR (TOK_ALLCOLREF (TOK_TABNAME unioninput)))))) <EOF>
\ No newline at end of file
-- 
1.7.0.4

