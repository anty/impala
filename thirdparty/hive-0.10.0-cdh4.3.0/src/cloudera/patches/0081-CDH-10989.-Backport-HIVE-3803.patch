From d1baf3981d383295a623530e97ec9d8d61027753 Mon Sep 17 00:00:00 2001
From: Kevin Wilfong <kevinwilfong@apache.org>
Date: Sun, 13 Jan 2013 02:11:34 +0000
Subject: [PATCH 081/121] CDH-10989. Backport HIVE-3803

---
 .../src/test/results/positive/hbase_stats.q.out    |    6 ++
 .../src/test/results/positive/hbase_stats2.q.out   |    6 ++
 ql/src/java/org/apache/hadoop/hive/ql/Driver.java  |   25 ++++-----
 .../apache/hadoop/hive/ql/exec/ExplainTask.java    |   32 ++++++------
 .../apache/hadoop/hive/ql/hooks/ReadEntity.java    |   32 +++++++++++-
 .../hadoop/hive/ql/optimizer/GenMapRedUtils.java   |   37 +++++++++++++-
 .../apache/hadoop/hive/ql/parse/ParseContext.java  |    8 +++-
 .../hadoop/hive/ql/parse/SemanticAnalyzer.java     |   54 ++++++++++++++-----
 .../org/apache/hadoop/hive/ql/plan/PlanUtils.java  |   35 +++++++++++++
 .../queries/clientpositive/explain_dependency.q    |    5 ++
 ql/src/test/results/clientnegative/archive1.q.out  |    2 +
 ql/src/test/results/clientnegative/archive2.q.out  |    2 +
 .../results/clientnegative/archive_insert1.q.out   |    2 +
 .../results/clientnegative/archive_insert2.q.out   |    2 +
 .../results/clientnegative/archive_insert3.q.out   |    2 +
 .../results/clientnegative/archive_insert4.q.out   |    2 +
 .../results/clientnegative/archive_multi1.q.out    |    4 ++
 .../results/clientnegative/archive_multi2.q.out    |    4 ++
 .../results/clientnegative/archive_multi3.q.out    |    4 ++
 .../results/clientnegative/archive_multi4.q.out    |    4 ++
 .../results/clientnegative/archive_multi5.q.out    |    4 ++
 .../results/clientnegative/archive_multi6.q.out    |    4 ++
 .../results/clientnegative/archive_multi7.q.out    |    2 +
 .../results/clientnegative/archive_partspec1.q.out |    2 +
 .../results/clientnegative/archive_partspec2.q.out |    2 +
 .../results/clientnegative/archive_partspec3.q.out |    2 +
 .../results/clientnegative/archive_partspec4.q.out |    2 +
 .../results/clientnegative/archive_partspec5.q.out |    2 +
 .../clientnegative/authorization_part.q.out        |    6 ++
 .../clientnegative/create_or_replace_view1.q.out   |    2 +
 .../clientnegative/create_or_replace_view2.q.out   |    2 +
 ql/src/test/results/clientnegative/lockneg3.q.out  |    2 +
 ql/src/test/results/clientnegative/lockneg4.q.out  |    2 +
 .../results/clientnegative/protectmode_part1.q.out |    6 ++
 .../alter_concatenate_indexed_table.q.out          |    8 +++
 .../test/results/clientpositive/alter_merge.q.out  |    8 +++
 .../results/clientpositive/alter_merge_2.q.out     |    8 +++
 .../results/clientpositive/alter_merge_stats.q.out |    2 +
 .../results/clientpositive/alter_view_rename.q.out |    2 +
 ql/src/test/results/clientpositive/archive.q.out   |   28 ++++++++++
 .../results/clientpositive/archive_corrupt.q.out   |    6 ++
 .../results/clientpositive/archive_multi.q.out     |   18 +++++++
 .../results/clientpositive/authorization_2.q.out   |   16 ++++++
 .../results/clientpositive/authorization_6.q.out   |    4 ++
 .../clientpositive/auto_join14_hadoop20.q.out      |    2 +
 .../test/results/clientpositive/auto_join19.q.out  |    2 +
 .../test/results/clientpositive/auto_join25.q.out  |    2 +
 .../test/results/clientpositive/auto_join9.q.out   |    2 +
 ql/src/test/results/clientpositive/bucket3.q.out   |    2 +
 .../results/clientpositive/bucket_groupby.q.out    |   24 +++++++++
 .../results/clientpositive/bucketcontext_1.q.out   |    8 +++
 .../results/clientpositive/bucketcontext_2.q.out   |    8 +++
 .../results/clientpositive/bucketcontext_3.q.out   |    8 +++
 .../results/clientpositive/bucketcontext_4.q.out   |    8 +++
 .../results/clientpositive/bucketcontext_6.q.out   |    4 ++
 .../results/clientpositive/bucketcontext_7.q.out   |    8 +++
 .../results/clientpositive/bucketcontext_8.q.out   |    8 +++
 .../bucketizedhiveinputformat_auto.q.out           |   12 ++++
 .../results/clientpositive/bucketmapjoin1.q.out    |   16 ++++++
 .../results/clientpositive/bucketmapjoin10.q.out   |    4 ++
 .../results/clientpositive/bucketmapjoin11.q.out   |    8 +++
 .../results/clientpositive/bucketmapjoin12.q.out   |    8 +++
 .../results/clientpositive/bucketmapjoin13.q.out   |   16 ++++++
 .../results/clientpositive/bucketmapjoin2.q.out    |   24 +++++++++
 .../results/clientpositive/bucketmapjoin3.q.out    |   16 ++++++
 .../results/clientpositive/bucketmapjoin5.q.out    |    8 +++
 .../results/clientpositive/bucketmapjoin7.q.out    |    4 ++
 .../results/clientpositive/bucketmapjoin8.q.out    |    8 +++
 .../results/clientpositive/bucketmapjoin9.q.out    |    8 +++
 .../clientpositive/columnstats_partlvl.q.out       |    4 ++
 .../results/clientpositive/combine2_hadoop20.q.out |    6 ++
 ql/src/test/results/clientpositive/combine3.q.out  |    4 ++
 .../concatenate_inherit_table_location.q.out       |    1 +
 .../clientpositive/create_or_replace_view.q.out    |   10 ++++
 .../clientpositive/create_view_partitioned.q.out   |    4 ++
 ql/src/test/results/clientpositive/database.q.out  |    2 +
 .../results/clientpositive/database_drop.q.out     |   12 ++++
 .../clientpositive/diff_part_input_formats.q.out   |    2 +
 ql/src/test/results/clientpositive/escape1.q.out   |  Bin 108711 -> 108776 bytes
 ql/src/test/results/clientpositive/escape2.q.out   |  Bin 832211 -> 832276 bytes
 .../clientpositive/explain_dependency.q.out        |   30 ++++++++---
 .../results/clientpositive/fileformat_mix.q.out    |    4 ++
 .../clientpositive/filter_join_breaktask.q.out     |    2 +
 .../clientpositive/filter_join_breaktask2.q.out    |    8 +++
 .../test/results/clientpositive/global_limit.q.out |   12 ++++
 .../results/clientpositive/groupby_map_ppr.q.out   |    2 +
 .../groupby_map_ppr_multi_distinct.q.out           |    2 +
 .../test/results/clientpositive/groupby_ppr.q.out  |    2 +
 .../groupby_ppr_multi_distinct.q.out               |    2 +
 .../results/clientpositive/hook_context_cs.q.out   |    1 +
 .../test/results/clientpositive/index_auth.q.out   |    2 +
 .../clientpositive/index_auto_mult_tables.q.out    |    8 +++
 .../index_auto_mult_tables_compact.q.out           |    8 +++
 .../clientpositive/index_auto_partitioned.q.out    |    6 ++
 .../results/clientpositive/index_auto_unused.q.out |    4 ++
 .../test/results/clientpositive/index_bitmap.q.out |   22 ++++++++
 .../index_bitmap_auto_partitioned.q.out            |    6 ++
 .../results/clientpositive/index_bitmap_rc.q.out   |   32 ++++++++++++
 .../results/clientpositive/index_compact.q.out     |   22 ++++++++
 .../results/clientpositive/index_compact_2.q.out   |   32 ++++++++++++
 .../clientpositive/index_stale_partitioned.q.out   |    6 ++
 ql/src/test/results/clientpositive/input23.q.out   |    2 +
 ql/src/test/results/clientpositive/input24.q.out   |    2 +
 ql/src/test/results/clientpositive/input25.q.out   |    2 +
 ql/src/test/results/clientpositive/input26.q.out   |    2 +
 ql/src/test/results/clientpositive/input28.q.out   |    2 +
 .../results/clientpositive/input39_hadoop20.q.out  |    4 ++
 ql/src/test/results/clientpositive/input40.q.out   |    4 ++
 ql/src/test/results/clientpositive/input41.q.out   |    2 +
 ql/src/test/results/clientpositive/input42.q.out   |    6 ++
 .../test/results/clientpositive/input_part1.q.out  |    2 +
 .../test/results/clientpositive/input_part2.q.out  |    2 +
 .../test/results/clientpositive/input_part5.q.out  |    2 +
 .../test/results/clientpositive/input_part6.q.out  |    2 +
 .../test/results/clientpositive/input_part7.q.out  |    2 +
 .../test/results/clientpositive/input_part9.q.out  |    2 +
 ql/src/test/results/clientpositive/inputddl7.q.out |    4 ++
 .../insert1_overwrite_partitions.q.out             |    8 +++
 .../insert2_overwrite_partitions.q.out             |    8 +++
 .../test/results/clientpositive/insert_into2.q.out |    8 +++
 .../test/results/clientpositive/insert_into5.q.out |    6 ++
 .../test/results/clientpositive/insert_into6.q.out |    6 ++
 .../results/clientpositive/join14_hadoop20.q.out   |    2 +
 ql/src/test/results/clientpositive/join26.q.out    |    2 +
 ql/src/test/results/clientpositive/join28.q.out    |    2 +
 ql/src/test/results/clientpositive/join32.q.out    |    2 +
 ql/src/test/results/clientpositive/join33.q.out    |    2 +
 ql/src/test/results/clientpositive/join9.q.out     |    2 +
 .../test/results/clientpositive/join_empty.q.out   |    4 ++
 .../test/results/clientpositive/join_map_ppr.q.out |    4 ++
 .../results/clientpositive/lateral_view_ppd.q.out  |    2 +
 .../test/results/clientpositive/leftsemijoin.q.out |    4 ++
 .../results/clientpositive/load_dyn_part1.q.out    |    2 +
 .../results/clientpositive/load_dyn_part10.q.out   |    2 +
 .../results/clientpositive/load_dyn_part11.q.out   |    2 +
 .../results/clientpositive/load_dyn_part12.q.out   |    2 +
 .../results/clientpositive/load_dyn_part14.q.out   |    2 +
 .../results/clientpositive/load_dyn_part2.q.out    |    6 ++
 .../results/clientpositive/load_dyn_part3.q.out    |    2 +
 .../results/clientpositive/load_dyn_part4.q.out    |    2 +
 .../results/clientpositive/load_dyn_part6.q.out    |    2 +
 .../results/clientpositive/load_dyn_part7.q.out    |    2 +
 .../results/clientpositive/load_dyn_part8.q.out    |    2 +
 .../results/clientpositive/load_dyn_part9.q.out    |    2 +
 ql/src/test/results/clientpositive/lock2.q.out     |    2 +
 ql/src/test/results/clientpositive/lock3.q.out     |    8 +++
 ql/src/test/results/clientpositive/lock4.q.out     |    8 +++
 .../results/clientpositive/louter_join_ppr.q.out   |    8 +++
 ql/src/test/results/clientpositive/mapjoin1.q.out  |    2 +
 .../results/clientpositive/mapjoin_distinct.q.out  |    8 +++
 .../test/results/clientpositive/mapjoin_hook.q.out |    1 +
 .../results/clientpositive/mapjoin_mapjoin.q.out   |    2 +
 .../results/clientpositive/mapjoin_subquery.q.out  |    4 ++
 ql/src/test/results/clientpositive/merge1.q.out    |    4 ++
 ql/src/test/results/clientpositive/merge2.q.out    |    4 ++
 ql/src/test/results/clientpositive/merge3.q.out    |   12 ++++
 ql/src/test/results/clientpositive/merge4.q.out    |    6 ++
 .../clientpositive/merge_dynamic_partition.q.out   |   12 ++++
 .../clientpositive/merge_dynamic_partition2.q.out  |    2 +
 .../clientpositive/merge_dynamic_partition3.q.out  |    4 ++
 .../clientpositive/merge_dynamic_partition4.q.out  |    6 ++
 .../clientpositive/merge_dynamic_partition5.q.out  |    6 ++
 .../results/clientpositive/metadataonly1.q.out     |   20 +++++++
 ql/src/test/results/clientpositive/mi.q.out        |    2 +
 .../test/results/clientpositive/nonmr_fetch.q.out  |    2 +
 .../test/results/clientpositive/nullgroup3.q.out   |    8 +++
 .../test/results/clientpositive/nullgroup5.q.out   |    4 ++
 .../test/results/clientpositive/nullinput2.q.out   |    4 ++
 .../results/clientpositive/outer_join_ppr.q.out    |    4 ++
 ql/src/test/results/clientpositive/partcols1.q.out |    2 +
 .../clientpositive/partition_serde_format.q.out    |    2 +
 .../clientpositive/partition_special_char.q.out    |    4 ++
 .../partition_vs_table_metadata.q.out              |    2 +
 .../clientpositive/partition_wise_fileformat.q.out |   20 +++++++
 .../partition_wise_fileformat3.q.out               |    4 ++
 .../partition_wise_fileformat5.q.out               |    4 ++
 .../partition_wise_fileformat6.q.out               |    4 ++
 .../partition_wise_fileformat7.q.out               |    4 ++
 ql/src/test/results/clientpositive/pcr.q.out       |   38 ++++++++++++++
 ql/src/test/results/clientpositive/ppd2.q.out      |    4 ++
 .../test/results/clientpositive/ppd_udf_case.q.out |    4 ++
 .../results/clientpositive/ppd_union_view.q.out    |   24 +++++++++
 .../clientpositive/ppr_allchildsarenull.q.out      |    4 ++
 .../test/results/clientpositive/ppr_pushdown.q.out |   34 ++++++++++++
 .../results/clientpositive/ppr_pushdown3.q.out     |    4 ++
 .../test/results/clientpositive/protectmode.q.out  |    6 ++
 .../clientpositive/ql_rewrite_gbtoidx.q.out        |   16 ++++++
 ql/src/test/results/clientpositive/quote1.q.out    |    2 +
 .../clientpositive/rand_partitionpruner2.q.out     |    2 +
 .../clientpositive/rand_partitionpruner3.q.out     |    4 ++
 .../results/clientpositive/rcfile_createas1.q.out  |    4 ++
 .../results/clientpositive/rcfile_merge1.q.out     |    4 ++
 .../results/clientpositive/rcfile_merge2.q.out     |    2 +
 .../results/clientpositive/rcfile_merge3.q.out     |    4 ++
 .../results/clientpositive/rcfile_merge4.q.out     |    4 ++
 ql/src/test/results/clientpositive/regex_col.q.out |    4 ++
 .../rename_external_partition_location.q.out       |    4 ++
 .../clientpositive/rename_partition_location.q.out |    1 +
 .../results/clientpositive/router_join_ppr.q.out   |    8 +++
 ql/src/test/results/clientpositive/sample1.q.out   |    2 +
 ql/src/test/results/clientpositive/sample10.q.out  |    8 +++
 ql/src/test/results/clientpositive/sample8.q.out   |    2 +
 .../sample_islocalmode_hook_hadoop20.q.out         |    2 +
 .../test/results/clientpositive/smb_mapjoin9.q.out |   12 ++++
 .../results/clientpositive/smb_mapjoin_11.q.out    |    8 +++
 .../results/clientpositive/smb_mapjoin_12.q.out    |   14 +++++
 .../clientpositive/sort_merge_join_desc_5.q.out    |    4 ++
 .../clientpositive/sort_merge_join_desc_6.q.out    |    4 ++
 .../clientpositive/sort_merge_join_desc_7.q.out    |    4 ++
 .../test/results/clientpositive/split_sample.q.out |    4 ++
 ql/src/test/results/clientpositive/stats10.q.out   |    4 ++
 ql/src/test/results/clientpositive/stats11.q.out   |    8 +++
 ql/src/test/results/clientpositive/stats12.q.out   |    4 ++
 ql/src/test/results/clientpositive/stats13.q.out   |    4 ++
 ql/src/test/results/clientpositive/stats14.q.out   |    6 ++
 ql/src/test/results/clientpositive/stats15.q.out   |    6 ++
 ql/src/test/results/clientpositive/stats2.q.out    |    4 ++
 ql/src/test/results/clientpositive/stats3.q.out    |    4 ++
 ql/src/test/results/clientpositive/stats4.q.out    |    2 +
 ql/src/test/results/clientpositive/stats6.q.out    |    6 ++
 ql/src/test/results/clientpositive/stats7.q.out    |    4 ++
 ql/src/test/results/clientpositive/stats8.q.out    |   12 ++++
 ql/src/test/results/clientpositive/touch.q.out     |    2 +
 .../results/clientpositive/transform_ppr1.q.out    |    2 +
 .../results/clientpositive/transform_ppr2.q.out    |    2 +
 ql/src/test/results/clientpositive/union22.q.out   |    6 ++
 ql/src/test/results/clientpositive/union25.q.out   |    2 +
 ql/src/test/results/clientpositive/union26.q.out   |    6 ++
 .../results/clientpositive/union_lateralview.q.out |    2 +
 ql/src/test/results/clientpositive/union_ppr.q.out |    2 +
 .../results/clientpositive/updateAccessTime.q.out  |    4 ++
 231 files changed, 1484 insertions(+), 54 deletions(-)

diff --git a/src/hbase-handler/src/test/results/positive/hbase_stats.q.out b/src/hbase-handler/src/test/results/positive/hbase_stats.q.out
index c8cac9e..bcb4448 100644
--- a/src/hbase-handler/src/test/results/positive/hbase_stats.q.out
+++ b/src/hbase-handler/src/test/results/positive/hbase_stats.q.out
@@ -94,11 +94,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
@@ -110,11 +112,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
@@ -284,6 +288,7 @@ Storage Desc Params:
 	serialization.format	1                   
 PREHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
@@ -293,6 +298,7 @@ PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=13
 POSTHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
diff --git a/src/hbase-handler/src/test/results/positive/hbase_stats2.q.out b/src/hbase-handler/src/test/results/positive/hbase_stats2.q.out
index c8cac9e..bcb4448 100644
--- a/src/hbase-handler/src/test/results/positive/hbase_stats2.q.out
+++ b/src/hbase-handler/src/test/results/positive/hbase_stats2.q.out
@@ -94,11 +94,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
@@ -110,11 +112,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
@@ -284,6 +288,7 @@ Storage Desc Params:
 	serialization.format	1                   
 PREHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
@@ -293,6 +298,7 @@ PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=13
 POSTHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java b/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
index 96fbd91..1ca8ff8 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
@@ -586,8 +586,8 @@ public class Driver implements CommandProcessor {
 
       Map<String, Boolean> tableUsePartLevelAuth = new HashMap<String, Boolean>();
       for (ReadEntity read : inputs) {
-        if (read.getPartition() != null) {
-          Table tbl = read.getTable();
+        Table tbl = read.getTable();
+        if ((read.getPartition() != null) || (tbl.isPartitioned())) {
           String tblName = tbl.getTableName();
           if (tableUsePartLevelAuth.get(tblName) == null) {
             boolean usePartLevelPriv = (tbl.getParameters().get(
@@ -661,34 +661,33 @@ public class Driver implements CommandProcessor {
         }
       }
 
-
-      //cache the results for table authorization
+      // cache the results for table authorization
       Set<String> tableAuthChecked = new HashSet<String>();
       for (ReadEntity read : inputs) {
-        Table tbl = null;
+        Table tbl = read.getTable();
         if (read.getPartition() != null) {
-          tbl = read.getPartition().getTable();
+          Partition partition = read.getPartition();
+          tbl = partition.getTable();
           // use partition level authorization
           if (tableUsePartLevelAuth.get(tbl.getTableName()) == Boolean.TRUE) {
-            List<String> cols = part2Cols.get(read.getPartition());
+            List<String> cols = part2Cols.get(partition);
             if (cols != null && cols.size() > 0) {
-              ss.getAuthorizer().authorize(read.getPartition().getTable(),
-                  read.getPartition(), cols, op.getInputRequiredPrivileges(),
+              ss.getAuthorizer().authorize(partition.getTable(),
+                  partition, cols, op.getInputRequiredPrivileges(),
                   null);
             } else {
-              ss.getAuthorizer().authorize(read.getPartition(),
+              ss.getAuthorizer().authorize(partition,
                   op.getInputRequiredPrivileges(), null);
             }
             continue;
           }
-        } else if (read.getTable() != null) {
-          tbl = read.getTable();
         }
 
         // if we reach here, it means it needs to do a table authorization
         // check, and the table authorization may already happened because of other
         // partitions
-        if (tbl != null && !tableAuthChecked.contains(tbl.getTableName())) {
+        if (tbl != null && !tableAuthChecked.contains(tbl.getTableName()) &&
+            !(tableUsePartLevelAuth.get(tbl.getTableName()) == Boolean.TRUE)) {
           List<String> cols = tab2Cols.get(tbl);
           if (cols != null && cols.size() > 0) {
             ss.getAuthorizer().authorize(tbl, null, cols,
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java
index 6918aa6..5ff6d6d 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/ExplainTask.java
@@ -77,34 +77,34 @@ public class ExplainTask extends Task<ExplainWork> implements Serializable {
 
     JSONObject outJSONObject = new JSONObject();
     List<Map<String, String>> inputTableInfo = new ArrayList<Map<String, String>>();
-    Set<String> inputPartitions = new HashSet<String>();
-    Set<String> inputTables = new HashSet<String>();
-    Table table = null;
+    List<Map<String, String>> inputPartitionInfo = new ArrayList<Map<String, String>>();
     for (ReadEntity input: work.getInputs()) {
       switch (input.getType()) {
         case TABLE:
-          table = input.getTable();
+          Table table = input.getTable();
+          Map<String, String> tableInfo = new HashMap<String, String>();
+          tableInfo.put("tablename", table.getCompleteName());
+          tableInfo.put("tabletype", table.getTableType().toString());
+          if ((input.getParents() != null) && (!input.getParents().isEmpty())) {
+            tableInfo.put("tableParents", input.getParents().toString());
+          }
+          inputTableInfo.add(tableInfo);
           break;
         case PARTITION:
-          inputPartitions.add(input.getPartition().getCompleteName());
-          table = input.getPartition().getTable();
+          Map<String, String> partitionInfo = new HashMap<String, String>();
+          partitionInfo.put("partitionName", input.getPartition().getCompleteName());
+          if ((input.getParents() != null) && (!input.getParents().isEmpty())) {
+            partitionInfo.put("partitionParents", input.getParents().toString());
+          }
+          inputPartitionInfo.add(partitionInfo);
           break;
         default:
-          table = null;
           break;
       }
-
-      if (table != null && !inputTables.contains(table.getCompleteName())) {
-        Map<String, String> tableInfo = new HashMap<String, String>();
-        tableInfo.put("tablename", table.getCompleteName());
-        tableInfo.put("tabletype", table.getTableType().toString());
-        inputTableInfo.add(tableInfo);
-        inputTables.add(table.getCompleteName());
-      }
     }
 
     outJSONObject.put("input_tables", inputTableInfo);
-    outJSONObject.put("input_partitions", inputPartitions);
+    outJSONObject.put("input_partitions", inputPartitionInfo);
     return outJSONObject;
   }
 
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/hooks/ReadEntity.java b/src/ql/src/java/org/apache/hadoop/hive/ql/hooks/ReadEntity.java
index c5bb862..8676490 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/hooks/ReadEntity.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/hooks/ReadEntity.java
@@ -19,6 +19,8 @@
 package org.apache.hadoop.hive.ql.hooks;
 
 import java.io.Serializable;
+import java.util.HashSet;
+import java.util.Set;
 
 import org.apache.hadoop.hive.ql.metadata.Partition;
 import org.apache.hadoop.hive.ql.metadata.Table;
@@ -29,6 +31,13 @@ import org.apache.hadoop.hive.ql.metadata.Table;
  */
 public class ReadEntity extends Entity implements Serializable {
 
+  // Consider a query like: select * from V, where the view V is defined as:
+  // select * from T
+  // The inputs will contain V and T (parent: V)
+
+  // For views, the entities can be nested - by default, entities are at the top level
+  private Set<ReadEntity> parents = null;
+
   /**
    * For serialization only.
    */
@@ -46,8 +55,20 @@ public class ReadEntity extends Entity implements Serializable {
     super(t);
   }
 
+  private void initParent(ReadEntity parent) {
+    if (parent != null) {
+      this.parents = new HashSet<ReadEntity>();
+      this.parents.add(parent);
+    }
+  }
+
+  public ReadEntity(Table t, ReadEntity parent) {
+    super(t);
+    initParent(parent);
+  }
+
   /**
-   * Constructor given a partiton.
+   * Constructor given a partition.
    *
    * @param p
    *          The partition that the query reads from.
@@ -56,6 +77,15 @@ public class ReadEntity extends Entity implements Serializable {
     super(p);
   }
 
+  public ReadEntity(Partition p, ReadEntity parent) {
+    super(p);
+    initParent(parent);
+  }
+
+  public Set<ReadEntity> getParents() {
+    return parents;
+  }
+
   /**
    * Equals function.
    */
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
index edde378..4cd161e 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
@@ -597,6 +597,29 @@ public final class GenMapRedUtils {
     setTaskPlan(alias_id, topOp, plan, local, opProcCtx, null);
   }
 
+  private static ReadEntity getParentViewInfo(String alias_id,
+      Map<String, ReadEntity> viewAliasToInput) {
+    String[] aliases = alias_id.split(":");
+
+    String currentAlias = null;
+    ReadEntity currentInput = null;
+    // Find the immediate parent possible.
+    // For eg: for a query like 'select * from V3', where V3 -> V2, V2 -> V1, V1 -> T
+    // -> implies depends on.
+    // T's parent would be V1
+    for (int pos = 0; pos < aliases.length; pos++) {
+      currentAlias = currentAlias == null ? aliases[pos] : currentAlias + ":" + aliases[pos];
+      ReadEntity input = viewAliasToInput.get(currentAlias);
+      if (input == null) {
+        return currentInput;
+      }
+      currentInput = input;
+    }
+
+    return currentInput;
+  }
+
+
   /**
    * set the current task in the mapredWork.
    *
@@ -699,11 +722,21 @@ public final class GenMapRedUtils {
     boolean isFirstPart = true;
     boolean emptyInput = true;
     boolean singlePartition = (parts.size() == 1);
+
+    // Track the dependencies for the view. Consider a query like: select * from V;
+    // where V is a view of the form: select * from T
+    // The dependencies should include V at depth 0, and T at depth 1 (inferred).
+    ReadEntity parentViewInfo = getParentViewInfo(alias_id, parseCtx.getViewAliasToInput());
+
+    // The table should also be considered a part of inputs, even if the table is a
+    // partitioned table and whether any partition is selected or not
+    PlanUtils.addInput(inputs,
+        new ReadEntity(parseCtx.getTopToTable().get(topOp), parentViewInfo));
     for (Partition part : parts) {
       if (part.getTable().isPartitioned()) {
-        inputs.add(new ReadEntity(part));
+        PlanUtils.addInput(inputs, new ReadEntity(part, parentViewInfo));
       } else {
-        inputs.add(new ReadEntity(part.getTable()));
+        PlanUtils.addInput(inputs, new ReadEntity(part.getTable(), parentViewInfo));
       }
 
       // Later the properties have to come from the partition as opposed
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseContext.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseContext.java
index 2bf284d..cb43d84 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseContext.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/ParseContext.java
@@ -85,6 +85,7 @@ public class ParseContext {
   // reducer
   private Map<GroupByOperator, Set<String>> groupOpToInputTables;
   private Map<String, PrunedPartitionList> prunedPartitions;
+  private Map<String, ReadEntity> viewAliasToInput;
 
   /**
    * The lineage information.
@@ -169,7 +170,8 @@ public class ParseContext {
       GlobalLimitCtx globalLimitCtx,
       HashMap<String, SplitSample> nameToSplitSample,
       HashSet<ReadEntity> semanticInputs, List<Task<? extends Serializable>> rootTasks,
-      Map<TableScanOperator, Map<String, ExprNodeDesc>> opToPartToSkewedPruner) {
+      Map<TableScanOperator, Map<String, ExprNodeDesc>> opToPartToSkewedPruner,
+      Map<String, ReadEntity> viewAliasToInput) {
     this.conf = conf;
     this.qb = qb;
     this.ast = ast;
@@ -196,6 +198,7 @@ public class ParseContext {
     this.semanticInputs = semanticInputs;
     this.rootTasks = rootTasks;
     this.opToPartToSkewedPruner = opToPartToSkewedPruner;
+    this.viewAliasToInput = viewAliasToInput;
   }
 
   /**
@@ -578,4 +581,7 @@ public class ParseContext {
     this.opToPartToSkewedPruner = opToPartToSkewedPruner;
   }
 
+  public Map<String, ReadEntity> getViewAliasToInput() {
+    return viewAliasToInput;
+  }
 }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
index 330aa52..991c644 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
@@ -218,7 +218,14 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
   private final String autogenColAliasPrfxLbl;
   private final boolean autogenColAliasPrfxIncludeFuncName;
 
-  //Max characters when auto generating the column name with func name
+  // Keep track of view alias to read entity corresponding to the view
+  // For eg: for a query like 'select * from V3', where V3 -> V2, V2 -> V1, V1 -> T
+  // keeps track of aliases for V3, V3:V2, V3:V2:V1.
+  // This is used when T is added as an input for the query, the parents of T is
+  // derived from the alias V3:V2:V1:T
+  private final Map<String, ReadEntity> viewAliasToInput = new HashMap<String, ReadEntity>();
+
+  // Max characters when auto generating the column name with func name
   private static final int AUTOGEN_COLALIAS_PRFX_MAXLENGTH = 20;
 
   private static class Phase1Ctx {
@@ -300,7 +307,7 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
         loadFileWork, ctx, idToTableNameMap, destTableId, uCtx,
         listMapJoinOpsNoReducer, groupOpToInputTables, prunedPartitions,
         opToSamplePruner, globalLimitCtx, nameToSplitSample, inputs, rootTasks,
-        opToPartToSkewedPruner);
+        opToPartToSkewedPruner, viewAliasToInput);
   }
 
   @SuppressWarnings("nls")
@@ -917,16 +924,25 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
   }
 
   private void getMetaData(QBExpr qbexpr) throws SemanticException {
+    getMetaData(qbexpr, null);
+  }
+
+  private void getMetaData(QBExpr qbexpr, ReadEntity parentInput)
+      throws SemanticException {
     if (qbexpr.getOpcode() == QBExpr.Opcode.NULLOP) {
-      getMetaData(qbexpr.getQB());
+      getMetaData(qbexpr.getQB(), parentInput);
     } else {
-      getMetaData(qbexpr.getQBExpr1());
-      getMetaData(qbexpr.getQBExpr2());
+      getMetaData(qbexpr.getQBExpr1(), parentInput);
+      getMetaData(qbexpr.getQBExpr2(), parentInput);
     }
   }
 
-  @SuppressWarnings("nls")
   public void getMetaData(QB qb) throws SemanticException {
+    getMetaData(qb, null);
+  }
+
+  @SuppressWarnings("nls")
+  public void getMetaData(QB qb, ReadEntity parentInput) throws SemanticException {
     try {
 
       LOG.info("Get metadata for source tables");
@@ -935,7 +951,13 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
       // We have to materialize the table alias list since we might
       // modify it in the middle for view rewrite.
       List<String> tabAliases = new ArrayList<String>(qb.getTabAliases());
-      Map<String, String> aliasToViewName = new HashMap<String, String>();
+
+      // Keep track of view alias to view name and read entity
+      // For eg: for a query like 'select * from V3', where V3 -> V2, V2 -> V1, V1 -> T
+      // keeps track of full view name and read entity corresponding to alias V3, V3:V2, V3:V2:V1.
+      // This is needed for tracking the dependencies for inputs, along with their parents.
+      Map<String, ObjectPair<String, ReadEntity>> aliasToViewInfo =
+          new HashMap<String, ObjectPair<String, ReadEntity>>();
       for (String alias : tabAliases) {
         String tab_name = qb.getTabNameForAlias(alias);
         Table tab = null;
@@ -977,10 +999,12 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
                 " -> " + fullViewName + ").");
           }
           replaceViewReferenceWithDefinition(qb, tab, tab_name, alias);
-          aliasToViewName.put(alias, fullViewName);
           // This is the last time we'll see the Table objects for views, so add it to the inputs
           // now
-          inputs.add(new ReadEntity(tab));
+          ReadEntity viewInput = new ReadEntity(tab, parentInput);
+          viewInput = PlanUtils.addInput(inputs, viewInput);
+          aliasToViewInfo.put(alias, new ObjectPair<String, ReadEntity>(fullViewName, viewInput));
+          viewAliasToInput.put(getAliasId(alias, qb), viewInput);
           continue;
         }
 
@@ -1009,12 +1033,14 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
       LOG.info("Get metadata for subqueries");
       // Go over the subqueries and getMetaData for these
       for (String alias : qb.getSubqAliases()) {
-        boolean wasView = aliasToViewName.containsKey(alias);
+        boolean wasView = aliasToViewInfo.containsKey(alias);
+        ReadEntity newParentInput = null;
         if (wasView) {
-          viewsExpanded.add(aliasToViewName.get(alias));
+          viewsExpanded.add(aliasToViewInfo.get(alias).getFirst());
+          newParentInput = aliasToViewInfo.get(alias).getSecond();
         }
         QBExpr qbexpr = qb.getSubqForAlias(alias);
-        getMetaData(qbexpr);
+        getMetaData(qbexpr, newParentInput);
         if (wasView) {
            viewsExpanded.remove(viewsExpanded.size()-1);
         }
@@ -6679,7 +6705,7 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
           // (There are no aggregations in a representative query for the group and
           //  There is no group by in that representative query) or
           // The data is skewed or
-          // The conf variable used to control combining group bys into a signle reducer is false
+          // The conf variable used to control combining group bys into a single reducer is false
           if (commonGroupByDestGroup.size() == 1 ||
               (qbp.getAggregationExprsForClause(firstDest).size() == 0 &&
               getGroupByForClause(qbp, firstDest).size() == 0) ||
@@ -8149,7 +8175,7 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
         loadTableWork, loadFileWork, ctx, idToTableNameMap, destTableId, uCtx,
         listMapJoinOpsNoReducer, groupOpToInputTables, prunedPartitions,
         opToSamplePruner, globalLimitCtx, nameToSplitSample, inputs, rootTasks,
-        opToPartToSkewedPruner);
+        opToPartToSkewedPruner, viewAliasToInput);
 
     // Generate table access stats if required
     if (HiveConf.getBoolVar(this.conf, HiveConf.ConfVars.HIVE_STATS_COLLECT_TABLEKEYS) == true) {
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java
index f72159a..aa10c91 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PlanUtils.java
@@ -25,6 +25,7 @@ import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
+import java.util.Set;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -35,6 +36,7 @@ import org.apache.hadoop.hive.ql.exec.ColumnInfo;
 import org.apache.hadoop.hive.ql.exec.Operator;
 import org.apache.hadoop.hive.ql.exec.RowSchema;
 import org.apache.hadoop.hive.ql.exec.Utilities;
+import org.apache.hadoop.hive.ql.hooks.ReadEntity;
 import org.apache.hadoop.hive.ql.io.HiveOutputFormat;
 import org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat;
 import org.apache.hadoop.hive.ql.io.RCFileInputFormat;
@@ -735,4 +737,37 @@ public final class PlanUtils {
     // prevent instantiation
   }
 
+  // Add the input 'newInput' to the set of inputs for the query.
+  // The input may or may not be already present.
+  // The ReadEntity also contains the parents from it is derived (only populated
+  // in case of views). The equals method for ReadEntity does not compare the parents
+  // so that the same input with different parents cannot be added twice. If the input
+  // is already present, make sure the parents are added.
+  // Consider the query:
+  // select * from (select * from V2 union all select * from V3) subq;
+  // where both V2 and V3 depend on V1
+  // addInput would be called twice for V1 (one with parent V2 and the other with parent V3).
+  // When addInput is called for the first time for V1, V1 (parent V2) is added to inputs.
+  // When addInput is called for the second time for V1, the input V1 from inputs is picked up,
+  // and it's parents are enhanced to include V2 and V3
+  // The inputs will contain: (V2, no parent), (V3, no parent), (v1, parents(V2, v3))
+  public static ReadEntity addInput(Set<ReadEntity> inputs, ReadEntity newInput) {
+    // If the input is already present, make sure the new parent is added to the input.
+    if (inputs.contains(newInput)) {
+      for (ReadEntity input : inputs) {
+        if (input.equals(newInput)) {
+          if ((newInput.getParents() != null) && (!newInput.getParents().isEmpty())) {
+            input.getParents().addAll(newInput.getParents());
+          }
+          return input;
+        }
+      }
+      assert false;
+    } else {
+      inputs.add(newInput);
+      return newInput;
+    }
+    // make compile happy
+    return null;
+  }
 }
diff --git a/src/ql/src/test/queries/clientpositive/explain_dependency.q b/src/ql/src/test/queries/clientpositive/explain_dependency.q
index 4f8db59..eecf2a6 100644
--- a/src/ql/src/test/queries/clientpositive/explain_dependency.q
+++ b/src/ql/src/test/queries/clientpositive/explain_dependency.q
@@ -27,3 +27,8 @@ EXPLAIN DEPENDENCY SELECT * FROM V1;
 EXPLAIN DEPENDENCY SELECT * FROM V2;
 EXPLAIN DEPENDENCY SELECT * FROM V3;
 EXPLAIN DEPENDENCY SELECT * FROM V4;
+
+-- The table should show up in the explain dependency even if none
+-- of the partitions are selected.
+CREATE VIEW V5 as SELECT * FROM srcpart where ds = '10';
+EXPLAIN DEPENDENCY SELECT * FROM V5;
diff --git a/src/ql/src/test/results/clientnegative/archive1.q.out b/src/ql/src/test/results/clientnegative/archive1.q.out
index 7c39724..03b309e 100644
--- a/src/ql/src/test/results/clientnegative/archive1.q.out
+++ b/src/ql/src/test/results/clientnegative/archive1.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@srcpart_archived
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive2.q.out b/src/ql/src/test/results/clientnegative/archive2.q.out
index 36dfea2..6a942fd 100644
--- a/src/ql/src/test/results/clientnegative/archive2.q.out
+++ b/src/ql/src/test/results/clientnegative/archive2.q.out
@@ -16,11 +16,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_insert1.q.out b/src/ql/src/test/results/clientnegative/archive_insert1.q.out
index 0da06e4..e8548e6 100644
--- a/src/ql/src/test/results/clientnegative/archive_insert1.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_insert1.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_insert2.q.out b/src/ql/src/test/results/clientnegative/archive_insert2.q.out
index ba9544e..bb829f8 100644
--- a/src/ql/src/test/results/clientnegative/archive_insert2.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_insert2.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_insert3.q.out b/src/ql/src/test/results/clientnegative/archive_insert3.q.out
index 0f6ec6a..7c1c6f5 100644
--- a/src/ql/src/test/results/clientnegative/archive_insert3.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_insert3.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_insert4.q.out b/src/ql/src/test/results/clientnegative/archive_insert4.q.out
index 15b85cc..0fb1dc9 100644
--- a/src/ql/src/test/results/clientnegative/archive_insert4.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_insert4.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi1.q.out b/src/ql/src/test/results/clientnegative/archive_multi1.q.out
index 3e209b7..7153965 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi1.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi1.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,11 +26,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi2.q.out b/src/ql/src/test/results/clientnegative/archive_multi2.q.out
index 4ca3b54..5362df3 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi2.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi2.q.out
@@ -16,11 +16,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -28,11 +30,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi3.q.out b/src/ql/src/test/results/clientnegative/archive_multi3.q.out
index 3bf8170..af6c3f9 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi3.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi3.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,11 +26,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi4.q.out b/src/ql/src/test/results/clientnegative/archive_multi4.q.out
index 91e9d19..9a044fe 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi4.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi4.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,11 +26,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi5.q.out b/src/ql/src/test/results/clientnegative/archive_multi5.q.out
index 7da278b..8832ed2 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi5.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi5.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,11 +26,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi6.q.out b/src/ql/src/test/results/clientnegative/archive_multi6.q.out
index 8c67774..b6606e6 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi6.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi6.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,11 +26,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_multi7.q.out b/src/ql/src/test/results/clientnegative/archive_multi7.q.out
index 3b48060..9e27929 100644
--- a/src/ql/src/test/results/clientnegative/archive_multi7.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_multi7.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tstsrcpart PARTITION (ds='2008-04-08', hr='11')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_partspec1.q.out b/src/ql/src/test/results/clientnegative/archive_partspec1.q.out
index 63352a6..57a2f26 100644
--- a/src/ql/src/test/results/clientnegative/archive_partspec1.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_partspec1.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@srcpart_archived
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_partspec2.q.out b/src/ql/src/test/results/clientnegative/archive_partspec2.q.out
index 0cbc29f..43bbd30 100644
--- a/src/ql/src/test/results/clientnegative/archive_partspec2.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_partspec2.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@srcpart_archived
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_partspec3.q.out b/src/ql/src/test/results/clientnegative/archive_partspec3.q.out
index 0bbbf53..8f3bff6 100644
--- a/src/ql/src/test/results/clientnegative/archive_partspec3.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_partspec3.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@srcpart_archived
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_partspec4.q.out b/src/ql/src/test/results/clientnegative/archive_partspec4.q.out
index 0ad0434..6b7f77d 100644
--- a/src/ql/src/test/results/clientnegative/archive_partspec4.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_partspec4.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@srcpart_archived
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/archive_partspec5.q.out b/src/ql/src/test/results/clientnegative/archive_partspec5.q.out
index 1599472..a2c9e09 100644
--- a/src/ql/src/test/results/clientnegative/archive_partspec5.q.out
+++ b/src/ql/src/test/results/clientnegative/archive_partspec5.q.out
@@ -12,11 +12,13 @@ POSTHOOK: Output: default@srcpart_archived
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12', min='00')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12/min=00
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_archived PARTITION (ds='2008-04-08', hr='12', min='00')
 SELECT key, value FROM srcpart WHERE ds='2008-04-08' AND hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_archived@ds=2008-04-08/hr=12/min=00
 POSTHOOK: Lineage: srcpart_archived PARTITION(ds=2008-04-08,hr=12,min=00).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/authorization_part.q.out b/src/ql/src/test/results/clientnegative/authorization_part.q.out
index 8524bcc..affc89c 100644
--- a/src/ql/src/test/results/clientnegative/authorization_part.q.out
+++ b/src/ql/src/test/results/clientnegative/authorization_part.q.out
@@ -113,10 +113,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key, value from authorization_part_fail where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part_fail
 PREHOOK: Input: default@authorization_part_fail@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from authorization_part_fail where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part_fail
 POSTHOOK: Input: default@authorization_part_fail@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).key EXPRESSION [(src_auth)src_auth.FieldSchema(name:key, type:string, comment:null), ]
@@ -190,10 +192,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key, value from authorization_part_fail where ds='2011' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part_fail
 PREHOOK: Input: default@authorization_part_fail@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from authorization_part_fail where ds='2011' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part_fail
 POSTHOOK: Input: default@authorization_part_fail@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).key EXPRESSION [(src_auth)src_auth.FieldSchema(name:key, type:string, comment:null), ]
@@ -222,11 +226,13 @@ POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2011).value SIMPLE [(src
 19	val_19
 PREHOOK: query: select key,value, ds from authorization_part_fail where ds>='2010' order by key, ds limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part_fail
 PREHOOK: Input: default@authorization_part_fail@ds=2010
 PREHOOK: Input: default@authorization_part_fail@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select key,value, ds from authorization_part_fail where ds>='2010' order by key, ds limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part_fail
 POSTHOOK: Input: default@authorization_part_fail@ds=2010
 POSTHOOK: Input: default@authorization_part_fail@ds=2011
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientnegative/create_or_replace_view1.q.out b/src/ql/src/test/results/clientnegative/create_or_replace_view1.q.out
index e0c3e05..4f1814c 100644
--- a/src/ql/src/test/results/clientnegative/create_or_replace_view1.q.out
+++ b/src/ql/src/test/results/clientnegative/create_or_replace_view1.q.out
@@ -15,9 +15,11 @@ POSTHOOK: Output: default@v
 #### A masked pattern was here ####
 PREHOOK: query: alter view v add partition (ds='1',hr='2')
 PREHOOK: type: ALTERTABLE_ADDPARTS
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@v
 POSTHOOK: query: alter view v add partition (ds='1',hr='2')
 POSTHOOK: type: ALTERTABLE_ADDPARTS
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@v
 POSTHOOK: Output: default@v@ds=1/hr=2
 PREHOOK: query: create or replace view v as select * from srcpart
diff --git a/src/ql/src/test/results/clientnegative/create_or_replace_view2.q.out b/src/ql/src/test/results/clientnegative/create_or_replace_view2.q.out
index 611ee4a..4f6abdc 100644
--- a/src/ql/src/test/results/clientnegative/create_or_replace_view2.q.out
+++ b/src/ql/src/test/results/clientnegative/create_or_replace_view2.q.out
@@ -15,9 +15,11 @@ POSTHOOK: Output: default@v
 #### A masked pattern was here ####
 PREHOOK: query: alter view v add partition (ds='1',hr='2')
 PREHOOK: type: ALTERTABLE_ADDPARTS
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@v
 POSTHOOK: query: alter view v add partition (ds='1',hr='2')
 POSTHOOK: type: ALTERTABLE_ADDPARTS
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@v
 POSTHOOK: Output: default@v@ds=1/hr=2
 PREHOOK: query: create or replace view v partitioned on (hr) as select * from srcpart
diff --git a/src/ql/src/test/results/clientnegative/lockneg3.q.out b/src/ql/src/test/results/clientnegative/lockneg3.q.out
index 3eb86f1..0664348 100644
--- a/src/ql/src/test/results/clientnegative/lockneg3.q.out
+++ b/src/ql/src/test/results/clientnegative/lockneg3.q.out
@@ -10,11 +10,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/lockneg4.q.out b/src/ql/src/test/results/clientnegative/lockneg4.q.out
index 83ac7c1..bd5ff83 100644
--- a/src/ql/src/test/results/clientnegative/lockneg4.q.out
+++ b/src/ql/src/test/results/clientnegative/lockneg4.q.out
@@ -10,11 +10,13 @@ POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientnegative/protectmode_part1.q.out b/src/ql/src/test/results/clientnegative/protectmode_part1.q.out
index 16175ac..ab631e4 100644
--- a/src/ql/src/test/results/clientnegative/protectmode_part1.q.out
+++ b/src/ql/src/test/results/clientnegative/protectmode_part1.q.out
@@ -33,22 +33,26 @@ POSTHOOK: Output: default@tbl_protectmode5@p=p2
 PREHOOK: query: insert overwrite table tbl_protectmode5_1
 select col from tbl_protectmode5 where p='p1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tbl_protectmode5
 PREHOOK: Input: default@tbl_protectmode5@p=p1
 PREHOOK: Output: default@tbl_protectmode5_1
 POSTHOOK: query: insert overwrite table tbl_protectmode5_1
 select col from tbl_protectmode5 where p='p1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tbl_protectmode5
 POSTHOOK: Input: default@tbl_protectmode5@p=p1
 POSTHOOK: Output: default@tbl_protectmode5_1
 POSTHOOK: Lineage: tbl_protectmode5_1.col SIMPLE [(tbl_protectmode5)tbl_protectmode5.FieldSchema(name:col, type:string, comment:null), ]
 PREHOOK: query: insert overwrite table tbl_protectmode5_1
 select col from tbl_protectmode5 where p='p2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tbl_protectmode5
 PREHOOK: Input: default@tbl_protectmode5@p=p2
 PREHOOK: Output: default@tbl_protectmode5_1
 POSTHOOK: query: insert overwrite table tbl_protectmode5_1
 select col from tbl_protectmode5 where p='p2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tbl_protectmode5
 POSTHOOK: Input: default@tbl_protectmode5@p=p2
 POSTHOOK: Output: default@tbl_protectmode5_1
 POSTHOOK: Lineage: tbl_protectmode5_1.col SIMPLE [(tbl_protectmode5)tbl_protectmode5.FieldSchema(name:col, type:string, comment:null), ]
@@ -67,11 +71,13 @@ POSTHOOK: Lineage: tbl_protectmode5_1.col SIMPLE [(tbl_protectmode5)tbl_protectm
 PREHOOK: query: insert overwrite table tbl_protectmode5_1
 select col from tbl_protectmode5 where p='p2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tbl_protectmode5
 PREHOOK: Input: default@tbl_protectmode5@p=p2
 PREHOOK: Output: default@tbl_protectmode5_1
 POSTHOOK: query: insert overwrite table tbl_protectmode5_1
 select col from tbl_protectmode5 where p='p2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tbl_protectmode5
 POSTHOOK: Input: default@tbl_protectmode5@p=p2
 POSTHOOK: Output: default@tbl_protectmode5_1
 POSTHOOK: Lineage: tbl_protectmode5_1.col SIMPLE [(tbl_protectmode5)tbl_protectmode5.FieldSchema(name:col, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/alter_concatenate_indexed_table.q.out b/src/ql/src/test/results/clientpositive/alter_concatenate_indexed_table.q.out
index 49483fc..7bd5d61 100644
--- a/src/ql/src/test/results/clientpositive/alter_concatenate_indexed_table.q.out
+++ b/src/ql/src/test/results/clientpositive/alter_concatenate_indexed_table.q.out
@@ -162,19 +162,23 @@ minFileSize:206
 
 PREHOOK: query: select count(1) from src_rc_concatenate_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_concatenate_test_part
 PREHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from src_rc_concatenate_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_concatenate_test_part
 POSTHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 15
 PREHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_concatenate_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_concatenate_test_part
 PREHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_concatenate_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_concatenate_test_part
 POSTHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 214	-7678496319
@@ -215,19 +219,23 @@ minFileSize:239
 
 PREHOOK: query: select count(1) from src_rc_concatenate_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_concatenate_test_part
 PREHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from src_rc_concatenate_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_concatenate_test_part
 POSTHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 15
 PREHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_concatenate_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_concatenate_test_part
 PREHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_concatenate_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_concatenate_test_part
 POSTHOOK: Input: default@src_rc_concatenate_test_part@ds=2011
 #### A masked pattern was here ####
 214	-7678496319
diff --git a/src/ql/src/test/results/clientpositive/alter_merge.q.out b/src/ql/src/test/results/clientpositive/alter_merge.q.out
index 94823af..6109b45 100644
--- a/src/ql/src/test/results/clientpositive/alter_merge.q.out
+++ b/src/ql/src/test/results/clientpositive/alter_merge.q.out
@@ -148,19 +148,23 @@ minFileSize:206
 
 PREHOOK: query: select count(1) from src_rc_merge_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from src_rc_merge_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 15
 PREHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 214	-7678496319
@@ -191,19 +195,23 @@ minFileSize:239
 
 PREHOOK: query: select count(1) from src_rc_merge_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from src_rc_merge_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 15
 PREHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2011
 #### A masked pattern was here ####
 214	-7678496319
diff --git a/src/ql/src/test/results/clientpositive/alter_merge_2.q.out b/src/ql/src/test/results/clientpositive/alter_merge_2.q.out
index 29ded41..d8a527e 100644
--- a/src/ql/src/test/results/clientpositive/alter_merge_2.q.out
+++ b/src/ql/src/test/results/clientpositive/alter_merge_2.q.out
@@ -40,19 +40,23 @@ POSTHOOK: type: LOAD
 POSTHOOK: Output: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 PREHOOK: query: select count(1) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 15
 PREHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 POSTHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 214	-7678496319
@@ -66,19 +70,23 @@ POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Output: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 PREHOOK: query: select count(1) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 15
 PREHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part
 PREHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 POSTHOOK: query: select sum(hash(key)), sum(hash(value)) from src_rc_merge_test_part where ds='2012-01-03' and ts='2012-01-03+14:46:31'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part
 POSTHOOK: Input: default@src_rc_merge_test_part@ds=2012-01-03/ts=2012-01-03+14%3A46%3A31
 #### A masked pattern was here ####
 214	-7678496319
diff --git a/src/ql/src/test/results/clientpositive/alter_merge_stats.q.out b/src/ql/src/test/results/clientpositive/alter_merge_stats.q.out
index 907ad64..bbfac8d 100644
--- a/src/ql/src/test/results/clientpositive/alter_merge_stats.q.out
+++ b/src/ql/src/test/results/clientpositive/alter_merge_stats.q.out
@@ -153,11 +153,13 @@ ds	string
 #### A masked pattern was here ####
 PREHOOK: query: analyze table src_rc_merge_test_part_stat partition(ds='2011') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_rc_merge_test_part_stat
 PREHOOK: Input: default@src_rc_merge_test_part_stat@ds=2011
 PREHOOK: Output: default@src_rc_merge_test_part_stat
 PREHOOK: Output: default@src_rc_merge_test_part_stat@ds=2011
 POSTHOOK: query: analyze table src_rc_merge_test_part_stat partition(ds='2011') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_rc_merge_test_part_stat
 POSTHOOK: Input: default@src_rc_merge_test_part_stat@ds=2011
 POSTHOOK: Output: default@src_rc_merge_test_part_stat
 POSTHOOK: Output: default@src_rc_merge_test_part_stat@ds=2011
diff --git a/src/ql/src/test/results/clientpositive/alter_view_rename.q.out b/src/ql/src/test/results/clientpositive/alter_view_rename.q.out
index e83b08b..78620bc 100644
--- a/src/ql/src/test/results/clientpositive/alter_view_rename.q.out
+++ b/src/ql/src/test/results/clientpositive/alter_view_rename.q.out
@@ -39,10 +39,12 @@ ds	string
 #### A masked pattern was here ####
 PREHOOK: query: SELECT * FROM view2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@invites
 PREHOOK: Input: default@view2
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * FROM view2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@invites
 POSTHOOK: Input: default@view2
 #### A masked pattern was here ####
 PREHOOK: query: DROP TABLE invites
diff --git a/src/ql/src/test/results/clientpositive/archive.q.out b/src/ql/src/test/results/clientpositive/archive.q.out
index 43a22a3..6cf3d1d 100644
--- a/src/ql/src/test/results/clientpositive/archive.q.out
+++ b/src/ql/src/test/results/clientpositive/archive.q.out
@@ -47,11 +47,13 @@ POSTHOOK: Lineage: tstsrc.value SIMPLE [(src)src.FieldSchema(name:value, type:st
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -61,11 +63,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -77,11 +81,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='11')
 select key, value from srcpart where ds='2008-04-09' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='11')
 select key, value from srcpart where ds='2008-04-09' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -95,11 +101,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='12')
 select key, value from srcpart where ds='2008-04-09' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='12')
 select key, value from srcpart where ds='2008-04-09' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -115,12 +123,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -156,12 +166,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -178,10 +190,12 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 48479881068
 PREHOOK: query: SELECT key, count(1) FROM tstsrcpart WHERE ds='2008-04-08' AND hr='12' AND key='0' GROUP BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, count(1) FROM tstsrcpart WHERE ds='2008-04-08' AND hr='12' AND key='0' GROUP BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -199,12 +213,14 @@ PREHOOK: query: SELECT * FROM tstsrcpart a JOIN tstsrc b ON a.key=b.key
 WHERE a.ds='2008-04-08' AND a.hr='12' AND a.key='0'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@tstsrc
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * FROM tstsrcpart a JOIN tstsrc b ON a.key=b.key
 WHERE a.ds='2008-04-08' AND a.hr='12' AND a.key='0'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@tstsrc
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -247,12 +263,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -307,10 +325,12 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpar
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key FROM harbucket TABLESAMPLE(BUCKET 1 OUT OF 10) SORT BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@harbucket
 PREHOOK: Input: default@harbucket@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key FROM harbucket TABLESAMPLE(BUCKET 1 OUT OF 10) SORT BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@harbucket
 POSTHOOK: Input: default@harbucket@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: harbucket PARTITION(ds=1).key EXPRESSION [(tstsrc)tstsrc.FieldSchema(name:key, type:string, comment:default), ]
@@ -351,10 +371,12 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpar
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key FROM harbucket TABLESAMPLE(BUCKET 1 OUT OF 10) SORT BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@harbucket
 PREHOOK: Input: default@harbucket@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key FROM harbucket TABLESAMPLE(BUCKET 1 OUT OF 10) SORT BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@harbucket
 POSTHOOK: Input: default@harbucket@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: harbucket PARTITION(ds=1).key EXPRESSION [(tstsrc)tstsrc.FieldSchema(name:key, type:string, comment:default), ]
@@ -395,10 +417,12 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpar
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key FROM harbucket TABLESAMPLE(BUCKET 1 OUT OF 10) SORT BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@harbucket
 PREHOOK: Input: default@harbucket@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key FROM harbucket TABLESAMPLE(BUCKET 1 OUT OF 10) SORT BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@harbucket
 POSTHOOK: Input: default@harbucket@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: harbucket PARTITION(ds=1).key EXPRESSION [(tstsrc)tstsrc.FieldSchema(name:key, type:string, comment:default), ]
@@ -479,11 +503,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM old_name WHERE ds='1') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@old_name
 PREHOOK: Input: default@old_name@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM old_name WHERE ds='1') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@old_name
 POSTHOOK: Input: default@old_name@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: harbucket PARTITION(ds=1).key EXPRESSION [(tstsrc)tstsrc.FieldSchema(name:key, type:string, comment:default), ]
@@ -523,11 +549,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM new_name WHERE ds='1') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@new_name
 PREHOOK: Input: default@new_name@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM new_name WHERE ds='1') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@new_name
 POSTHOOK: Input: default@new_name@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: harbucket PARTITION(ds=1).key EXPRESSION [(tstsrc)tstsrc.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/archive_corrupt.q.out b/src/ql/src/test/results/clientpositive/archive_corrupt.q.out
index f1ac0e4..c4cff82 100644
--- a/src/ql/src/test/results/clientpositive/archive_corrupt.q.out
+++ b/src/ql/src/test/results/clientpositive/archive_corrupt.q.out
@@ -35,11 +35,13 @@ POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -47,11 +49,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='11')
 select key, value from srcpart where ds='2008-04-09' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='11')
 select key, value from srcpart where ds='2008-04-09' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -61,11 +65,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='12')
 select key, value from srcpart where ds='2008-04-09' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='12')
 select key, value from srcpart where ds='2008-04-09' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/archive_multi.q.out b/src/ql/src/test/results/clientpositive/archive_multi.q.out
index 31bee6c..8921be5 100644
--- a/src/ql/src/test/results/clientpositive/archive_multi.q.out
+++ b/src/ql/src/test/results/clientpositive/archive_multi.q.out
@@ -47,11 +47,13 @@ POSTHOOK: Lineage: tstsrc.value SIMPLE [(src)src.FieldSchema(name:value, type:st
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -61,11 +63,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -77,11 +81,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='11')
 select key, value from srcpart where ds='2008-04-09' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='11')
 select key, value from srcpart where ds='2008-04-09' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -95,11 +101,13 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcp
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='12')
 select key, value from srcpart where ds='2008-04-09' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-09', hr='12')
 select key, value from srcpart where ds='2008-04-09' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -117,6 +125,7 @@ PREHOOK: query: -- EXCLUDE_HADOOP_MAJOR_VERSIONS(0.17, 0.18, 0.19)
 SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -125,6 +134,7 @@ POSTHOOK: query: -- EXCLUDE_HADOOP_MAJOR_VERSIONS(0.17, 0.18, 0.19)
 SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -162,12 +172,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -184,10 +196,12 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 48479881068
 PREHOOK: query: SELECT key, count(1) FROM tstsrcpart WHERE ds='2008-04-08' AND hr='12' AND key='0' GROUP BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, count(1) FROM tstsrcpart WHERE ds='2008-04-08' AND hr='12' AND key='0' GROUP BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -205,12 +219,14 @@ PREHOOK: query: SELECT * FROM tstsrcpart a JOIN tstsrc b ON a.key=b.key
 WHERE a.ds='2008-04-08' AND a.hr='12' AND a.key='0'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@tstsrc
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * FROM tstsrcpart a JOIN tstsrc b ON a.key=b.key
 WHERE a.ds='2008-04-08' AND a.hr='12' AND a.key='0'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@tstsrc
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -255,12 +271,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 PREHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(hash(col)) FROM (SELECT transform(*) using 'tr "\t" "_"' AS col
 FROM (SELECT * FROM tstsrcpart WHERE ds='2008-04-08') subq1) subq2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/authorization_2.q.out b/src/ql/src/test/results/clientpositive/authorization_2.q.out
index 6b82a69..da1cad9 100644
--- a/src/ql/src/test/results/clientpositive/authorization_2.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_2.q.out
@@ -167,10 +167,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -227,10 +229,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -469,10 +473,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -587,10 +593,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -782,10 +790,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -858,10 +868,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -1046,10 +1058,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
@@ -1129,10 +1143,12 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 #### A masked pattern was here ####
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/authorization_6.q.out b/src/ql/src/test/results/clientpositive/authorization_6.q.out
index 5705a50..583d045 100644
--- a/src/ql/src/test/results/clientpositive/authorization_6.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_6.q.out
@@ -155,11 +155,13 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds>='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 PREHOOK: Input: default@authorization_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds>='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 POSTHOOK: Input: default@authorization_part@ds=2011
 #### A masked pattern was here ####
@@ -351,11 +353,13 @@ privilege	Select
 grantor	hive_test_user	
 PREHOOK: query: select key from authorization_part where ds>='2010' order by key limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@authorization_part
 PREHOOK: Input: default@authorization_part@ds=2010
 PREHOOK: Input: default@authorization_part@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select key from authorization_part where ds>='2010' order by key limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@authorization_part
 POSTHOOK: Input: default@authorization_part@ds=2010
 POSTHOOK: Input: default@authorization_part@ds=2011
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/auto_join14_hadoop20.q.out b/src/ql/src/test/results/clientpositive/auto_join14_hadoop20.q.out
index dc30130..8bada02 100644
--- a/src/ql/src/test/results/clientpositive/auto_join14_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join14_hadoop20.q.out
@@ -265,6 +265,7 @@ PREHOOK: query: FROM src JOIN srcpart ON src.key = srcpart.key AND srcpart.ds =
 INSERT OVERWRITE TABLE dest1 SELECT src.key, srcpart.value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
@@ -272,6 +273,7 @@ POSTHOOK: query: FROM src JOIN srcpart ON src.key = srcpart.key AND srcpart.ds =
 INSERT OVERWRITE TABLE dest1 SELECT src.key, srcpart.value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/auto_join19.q.out b/src/ql/src/test/results/clientpositive/auto_join19.q.out
index 9af7953..3773708 100644
--- a/src/ql/src/test/results/clientpositive/auto_join19.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join19.q.out
@@ -244,6 +244,7 @@ INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value
 where (src1.ds = '2008-04-08' or src1.ds = '2008-04-09' )and (src1.hr = '12' or src1.hr = '11')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -254,6 +255,7 @@ INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value
 where (src1.ds = '2008-04-08' or src1.ds = '2008-04-09' )and (src1.hr = '12' or src1.hr = '11')
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/auto_join25.q.out b/src/ql/src/test/results/clientpositive/auto_join25.q.out
index cabdcf8..9bb6053 100644
--- a/src/ql/src/test/results/clientpositive/auto_join25.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join25.q.out
@@ -8,6 +8,7 @@ INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value
 where (src1.ds = '2008-04-08' or src1.ds = '2008-04-09' )and (src1.hr = '12' or src1.hr = '11')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -30,6 +31,7 @@ INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value
 where (src1.ds = '2008-04-08' or src1.ds = '2008-04-09' )and (src1.hr = '12' or src1.hr = '11')
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/auto_join9.q.out b/src/ql/src/test/results/clientpositive/auto_join9.q.out
index 0465212..74930df 100644
--- a/src/ql/src/test/results/clientpositive/auto_join9.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join9.q.out
@@ -241,12 +241,14 @@ PREHOOK: query: FROM srcpart src1 JOIN src src2 ON (src1.key = src2.key)
 INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value where src1.ds = '2008-04-08' and src1.hr = '12'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
 POSTHOOK: query: FROM srcpart src1 JOIN src src2 ON (src1.key = src2.key)
 INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value where src1.ds = '2008-04-08' and src1.hr = '12'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.key EXPRESSION [(srcpart)src1.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/bucket3.q.out b/src/ql/src/test/results/clientpositive/bucket3.q.out
index 94dd48e..f4a997a 100644
--- a/src/ql/src/test/results/clientpositive/bucket3.q.out
+++ b/src/ql/src/test/results/clientpositive/bucket3.q.out
@@ -253,10 +253,12 @@ STAGE PLANS:
 
 PREHOOK: query: select * from bucket3_1 tablesample (bucket 1 out of 2) s where ds = '1' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket3_1
 PREHOOK: Input: default@bucket3_1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: select * from bucket3_1 tablesample (bucket 1 out of 2) s where ds = '1' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket3_1
 POSTHOOK: Input: default@bucket3_1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: bucket3_1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/bucket_groupby.q.out b/src/ql/src/test/results/clientpositive/bucket_groupby.q.out
index f8ce712..afd0894 100644
--- a/src/ql/src/test/results/clientpositive/bucket_groupby.q.out
+++ b/src/ql/src/test/results/clientpositive/bucket_groupby.q.out
@@ -110,10 +110,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby where ds='100' group by key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=100
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby where ds='100' group by key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=100
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -235,10 +237,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  where ds='101' group by key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  where ds='101' group by key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -339,10 +343,12 @@ STAGE PLANS:
 
 PREHOOK: query: select length(key), count(1) from clustergroupby  where ds='101' group by length(key) limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select length(key), count(1) from clustergroupby  where ds='101' group by length(key) limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -434,10 +440,12 @@ STAGE PLANS:
 
 PREHOOK: query: select abs(length(key)), count(1) from clustergroupby  where ds='101' group by abs(length(key)) limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select abs(length(key)), count(1) from clustergroupby  where ds='101' group by abs(length(key)) limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -539,10 +547,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  where ds='101' group by key,3 limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  where ds='101' group by key,3 limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -648,10 +658,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from (select value as key, key as value from clustergroupby where ds='101')subq group by key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from (select value as key, key as value from clustergroupby where ds='101')subq group by key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -749,11 +761,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  group by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=100
 PREHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  group by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=100
 POSTHOOK: Input: default@clustergroupby@ds=101
 #### A masked pattern was here ####
@@ -1305,10 +1319,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  where ds='102' group by key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=102
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  where ds='102' group by key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=102
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -1411,10 +1427,12 @@ STAGE PLANS:
 
 PREHOOK: query: select value, count(1) from clustergroupby  where ds='102'  group by value limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=102
 #### A masked pattern was here ####
 POSTHOOK: query: select value, count(1) from clustergroupby  where ds='102'  group by value limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=102
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -1527,10 +1545,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  where ds='102'  group by key, value limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=102
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  where ds='102'  group by key, value limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=102
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -1707,10 +1727,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  where ds='103' group by key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=103
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  where ds='103' group by key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=103
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -1827,10 +1849,12 @@ STAGE PLANS:
 
 PREHOOK: query: select key, count(1) from clustergroupby  where ds='103' group by  value, key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@clustergroupby
 PREHOOK: Input: default@clustergroupby@ds=103
 #### A masked pattern was here ####
 POSTHOOK: query: select key, count(1) from clustergroupby  where ds='103' group by  value, key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@clustergroupby
 POSTHOOK: Input: default@clustergroupby@ds=103
 #### A masked pattern was here ####
 POSTHOOK: Lineage: clustergroupby PARTITION(ds=100).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_1.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_1.q.out
index d5e0e99..9abca74 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_1.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_1.q.out
@@ -335,14 +335,18 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
@@ -577,14 +581,18 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_2.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_2.q.out
index 58dd9f7..308f61f 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_2.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_2.q.out
@@ -323,14 +323,18 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
@@ -565,14 +569,18 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_3.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_3.q.out
index 258aff0..df6d6e3 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_3.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_3.q.out
@@ -272,13 +272,17 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
@@ -463,13 +467,17 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_4.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_4.q.out
index 7cbd2d9..a524a0e 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_4.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_4.q.out
@@ -284,13 +284,17 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
@@ -475,13 +479,17 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_6.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_6.q.out
index e256319..76461a2 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_6.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_6.q.out
@@ -322,12 +322,14 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
 PREHOOK: Input: default@bucket_small
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
 POSTHOOK: Input: default@bucket_small
@@ -564,12 +566,14 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
 PREHOOK: Input: default@bucket_small
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
 POSTHOOK: Input: default@bucket_small
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_7.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_7.q.out
index 65d1fd8..c9c4eed 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_7.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_7.q.out
@@ -348,15 +348,19 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
@@ -592,15 +596,19 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/bucketcontext_8.q.out b/src/ql/src/test/results/clientpositive/bucketcontext_8.q.out
index 269dfb4..9342f61 100644
--- a/src/ql/src/test/results/clientpositive/bucketcontext_8.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketcontext_8.q.out
@@ -348,15 +348,19 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
@@ -592,15 +596,19 @@ STAGE PLANS:
 
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 PREHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 POSTHOOK: Input: default@bucket_small@ds=2008-04-09
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat_auto.q.out b/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat_auto.q.out
index bfd5472..cfceff8 100644
--- a/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat_auto.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat_auto.q.out
@@ -73,40 +73,52 @@ POSTHOOK: type: LOAD
 POSTHOOK: Output: default@bucket_big@ds=2008-04-09
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
 PREHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket_big
 PREHOOK: Input: default@bucket_big@ds=2008-04-08
 PREHOOK: Input: default@bucket_big@ds=2008-04-09
+PREHOOK: Input: default@bucket_small
 PREHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select /* + MAPJOIN(a) */ count(*) FROM bucket_small a JOIN bucket_big b ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket_big
 POSTHOOK: Input: default@bucket_big@ds=2008-04-08
 POSTHOOK: Input: default@bucket_big@ds=2008-04-09
+POSTHOOK: Input: default@bucket_small
 POSTHOOK: Input: default@bucket_small@ds=2008-04-08
 #### A masked pattern was here ####
 928
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
index e90090f..30fe946 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
@@ -134,11 +134,15 @@ PREHOOK: query: select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 #### A masked pattern was here ####
 POSTHOOK: query: select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 #### A masked pattern was here ####
 PREHOOK: query: explain extended
 select /*+mapjoin(a)*/ a.key, a.value, b.value
@@ -259,11 +263,15 @@ PREHOOK: query: select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 #### A masked pattern was here ####
 POSTHOOK: query: select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 #### A masked pattern was here ####
 PREHOOK: query: load data local inpath '../data/files/srcbucket20.txt' INTO TABLE srcbucket_mapjoin
 PREHOOK: type: LOAD
@@ -681,6 +689,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -689,6 +698,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_tmp_result.key SIMPLE [(srcbucket_mapjoin)a.FieldSchema(name:key, type:int, comment:null), ]
@@ -728,6 +738,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -736,6 +747,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1221,6 +1233,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -1229,6 +1242,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1304,6 +1318,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -1312,6 +1327,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin10.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin10.q.out
index d8a4853..3be3fff 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin10.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin10.q.out
@@ -363,8 +363,10 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part IS NOT NULL AND b.part IS NOT NULL
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
@@ -372,8 +374,10 @@ POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part IS NOT NULL AND b.part IS NOT NULL
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin11.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin11.q.out
index a26a884..0beefd1 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin11.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin11.q.out
@@ -376,8 +376,10 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part IS NOT NULL AND b.part IS NOT NULL
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
@@ -385,8 +387,10 @@ POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part IS NOT NULL AND b.part IS NOT NULL
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
@@ -657,8 +661,10 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = b.part AND a.part IS NOT NULL AND b.part IS NOT NULL
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
@@ -666,8 +672,10 @@ POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = b.part AND a.part IS NOT NULL AND b.part IS NOT NULL
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin12.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin12.q.out
index 98b5872..20fc43a 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin12.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin12.q.out
@@ -295,14 +295,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 464
@@ -520,14 +524,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_3 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_3
 PREHOOK: Input: default@srcbucket_mapjoin_part_3@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_3 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_3
 POSTHOOK: Input: default@srcbucket_mapjoin_part_3@part=1
 #### A masked pattern was here ####
 464
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin13.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin13.q.out
index 441dc92..9e501c5 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin13.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin13.q.out
@@ -343,16 +343,20 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: srcbucket_mapjoin_part_1 PARTITION(part=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -589,14 +593,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key and a.part = '2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key and a.part = '2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: srcbucket_mapjoin_part_1 PARTITION(part=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -847,14 +855,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: srcbucket_mapjoin_part_1 PARTITION(part=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -1107,14 +1119,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: srcbucket_mapjoin_part_1 PARTITION(part=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
index 474ed0a..1d32277 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
@@ -413,7 +413,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -421,7 +423,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_tmp_result.key SIMPLE [(srcbucket_mapjoin_part)a.FieldSchema(name:key, type:int, comment:null), ]
@@ -460,7 +464,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -468,7 +474,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -951,7 +959,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -959,7 +969,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1034,7 +1046,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -1042,7 +1056,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key and b.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1648,7 +1664,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 PREHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1657,7 +1675,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1769,7 +1789,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 PREHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1778,7 +1800,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
index 347985f..af00380 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
@@ -430,7 +430,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -438,7 +440,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_tmp_result.key SIMPLE [(srcbucket_mapjoin_part_2)a.FieldSchema(name:key, type:int, comment:null), ]
@@ -477,7 +481,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -485,7 +491,9 @@ select /*+mapjoin(b)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -968,7 +976,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -976,7 +986,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1051,7 +1063,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -1059,7 +1073,9 @@ select /*+mapjoin(a)*/ a.key, a.value, b.value
 from srcbucket_mapjoin_part_2 a join srcbucket_mapjoin_part b 
 on a.key=b.key and b.ds="2008-04-08" and a.ds="2008-04-08"
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
index e0685be..03b7811 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
@@ -518,6 +518,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-09
 PREHOOK: Output: default@bucketmapjoin_tmp_result
@@ -527,6 +528,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-09
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
@@ -567,6 +569,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-09
 PREHOOK: Output: default@bucketmapjoin_tmp_result
@@ -576,6 +579,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-09
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1109,6 +1113,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 PREHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1118,6 +1123,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1194,6 +1200,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 PREHOOK: Output: default@bucketmapjoin_tmp_result
@@ -1203,6 +1210,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part_2 b
 on a.key=b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-09
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin7.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin7.q.out
index 3c968eb..24566c2 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin7.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin7.q.out
@@ -207,14 +207,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ a.key, b.value
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.ds = '2008-04-08' AND b.ds = '2008-04-08' LIMIT 1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@ds=2008-04-08/hr=0
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08/hr=0
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ a.key, b.value
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.ds = '2008-04-08' AND b.ds = '2008-04-08' LIMIT 1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@ds=2008-04-08/hr=0
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@ds=2008-04-08/hr=0
 #### A masked pattern was here ####
 27	val_27
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin8.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin8.q.out
index 2e0023f..63f8663 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin8.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin8.q.out
@@ -267,14 +267,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 464
@@ -507,14 +511,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 464
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin9.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin9.q.out
index 8c93773..0abf9a9 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin9.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin9.q.out
@@ -266,14 +266,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' and b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 464
@@ -528,14 +532,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' AND b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' AND b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 464
diff --git a/src/ql/src/test/results/clientpositive/columnstats_partlvl.q.out b/src/ql/src/test/results/clientpositive/columnstats_partlvl.q.out
index 3b904f0..a846bb0 100644
--- a/src/ql/src/test/results/clientpositive/columnstats_partlvl.q.out
+++ b/src/ql/src/test/results/clientpositive/columnstats_partlvl.q.out
@@ -222,10 +222,12 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table Employee_Part partition (employeeSalary=2000.0) compute statistics for columns employeeID
 PREHOOK: type: QUERY
+PREHOOK: Input: default@employee_part
 PREHOOK: Input: default@employee_part@employeesalary=2000.0
 #### A masked pattern was here ####
 POSTHOOK: query: analyze table Employee_Part partition (employeeSalary=2000.0) compute statistics for columns employeeID
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@employee_part
 POSTHOOK: Input: default@employee_part@employeesalary=2000.0
 #### A masked pattern was here ####
 PREHOOK: query: explain 
@@ -427,9 +429,11 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table Employee_Part partition (employeeSalary=4000.0) compute statistics for columns employeeID
 PREHOOK: type: QUERY
+PREHOOK: Input: default@employee_part
 PREHOOK: Input: default@employee_part@employeesalary=4000.0
 #### A masked pattern was here ####
 POSTHOOK: query: analyze table Employee_Part partition (employeeSalary=4000.0) compute statistics for columns employeeID
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@employee_part
 POSTHOOK: Input: default@employee_part@employeesalary=4000.0
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/combine2_hadoop20.q.out b/src/ql/src/test/results/clientpositive/combine2_hadoop20.q.out
index 8f8c9ba..6279021 100644
--- a/src/ql/src/test/results/clientpositive/combine2_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/combine2_hadoop20.q.out
@@ -148,6 +148,7 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value from combine2 where value is not null order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@combine2
 PREHOOK: Input: default@combine2@value=2010-04-21 09%3A45%3A00
 PREHOOK: Input: default@combine2@value=val_0
 PREHOOK: Input: default@combine2@value=val_2
@@ -159,6 +160,7 @@ PREHOOK: Input: default@combine2@value=|
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from combine2 where value is not null order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@combine2
 POSTHOOK: Input: default@combine2@value=2010-04-21 09%3A45%3A00
 POSTHOOK: Input: default@combine2@value=val_0
 POSTHOOK: Input: default@combine2@value=val_2
@@ -648,6 +650,7 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from combine2 where value is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@combine2
 PREHOOK: Input: default@combine2@value=2010-04-21 09%3A45%3A00
 PREHOOK: Input: default@combine2@value=val_0
 PREHOOK: Input: default@combine2@value=val_2
@@ -659,6 +662,7 @@ PREHOOK: Input: default@combine2@value=|
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from combine2 where value is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@combine2
 POSTHOOK: Input: default@combine2@value=2010-04-21 09%3A45%3A00
 POSTHOOK: Input: default@combine2@value=val_0
 POSTHOOK: Input: default@combine2@value=val_2
@@ -762,6 +766,7 @@ STAGE PLANS:
 
 PREHOOK: query: select ds, count(1) from srcpart where ds is not null group by ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -769,6 +774,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select ds, count(1) from srcpart where ds is not null group by ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/combine3.q.out b/src/ql/src/test/results/clientpositive/combine3.q.out
index 19eba39..00b4d1f 100644
--- a/src/ql/src/test/results/clientpositive/combine3.q.out
+++ b/src/ql/src/test/results/clientpositive/combine3.q.out
@@ -69,11 +69,13 @@ hr	string
 #### A masked pattern was here ####
 PREHOOK: query: select key, value, ds, hr from combine_3_srcpart_seq_rc where ds="2010-08-03" order by key, hr limit 30
 PREHOOK: type: QUERY
+PREHOOK: Input: default@combine_3_srcpart_seq_rc
 PREHOOK: Input: default@combine_3_srcpart_seq_rc@ds=2010-08-03/hr=00
 PREHOOK: Input: default@combine_3_srcpart_seq_rc@ds=2010-08-03/hr=001
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds, hr from combine_3_srcpart_seq_rc where ds="2010-08-03" order by key, hr limit 30
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@combine_3_srcpart_seq_rc
 POSTHOOK: Input: default@combine_3_srcpart_seq_rc@ds=2010-08-03/hr=00
 POSTHOOK: Input: default@combine_3_srcpart_seq_rc@ds=2010-08-03/hr=001
 #### A masked pattern was here ####
@@ -178,11 +180,13 @@ POSTHOOK: Lineage: combine_3_srcpart_seq_rc_bucket PARTITION(ds=1).key EXPRESSIO
 POSTHOOK: Lineage: combine_3_srcpart_seq_rc_bucket PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select key, ds from combine_3_srcpart_seq_rc_bucket tablesample (bucket 1 out of 2) s where ds = '1' or ds= '11' order by key, ds limit 30
 PREHOOK: type: QUERY
+PREHOOK: Input: default@combine_3_srcpart_seq_rc_bucket
 PREHOOK: Input: default@combine_3_srcpart_seq_rc_bucket@ds=1
 PREHOOK: Input: default@combine_3_srcpart_seq_rc_bucket@ds=11
 #### A masked pattern was here ####
 POSTHOOK: query: select key, ds from combine_3_srcpart_seq_rc_bucket tablesample (bucket 1 out of 2) s where ds = '1' or ds= '11' order by key, ds limit 30
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@combine_3_srcpart_seq_rc_bucket
 POSTHOOK: Input: default@combine_3_srcpart_seq_rc_bucket@ds=1
 POSTHOOK: Input: default@combine_3_srcpart_seq_rc_bucket@ds=11
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/concatenate_inherit_table_location.q.out b/src/ql/src/test/results/clientpositive/concatenate_inherit_table_location.q.out
index 55a71b6..202e9f2 100644
--- a/src/ql/src/test/results/clientpositive/concatenate_inherit_table_location.q.out
+++ b/src/ql/src/test/results/clientpositive/concatenate_inherit_table_location.q.out
@@ -21,6 +21,7 @@ PREHOOK: Input: default@citl_table
 PREHOOK: Output: default@citl_table@part=1
 PREHOOK: query: SELECT count(*) FROM citl_table where part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@citl_table
 PREHOOK: Input: default@citl_table@part=1
 #### A masked pattern was here ####
 500
diff --git a/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out b/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out
index a273fc8..a126b80 100644
--- a/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out
+++ b/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out
@@ -52,29 +52,35 @@ POSTHOOK: Output: default@v
 #### A masked pattern was here ####
 PREHOOK: query: alter view v add partition (ds='2008-04-08',hr='11')
 PREHOOK: type: ALTERTABLE_ADDPARTS
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@v
 POSTHOOK: query: alter view v add partition (ds='2008-04-08',hr='11')
 POSTHOOK: type: ALTERTABLE_ADDPARTS
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@v
 POSTHOOK: Output: default@v@ds=2008-04-08/hr=11
 PREHOOK: query: alter view v add partition (ds='2008-04-08',hr='12')
 PREHOOK: type: ALTERTABLE_ADDPARTS
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@v
 POSTHOOK: query: alter view v add partition (ds='2008-04-08',hr='12')
 POSTHOOK: type: ALTERTABLE_ADDPARTS
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@v
 POSTHOOK: Output: default@v@ds=2008-04-08/hr=12
 PREHOOK: query: select * from v where value='val_409' and ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@v
 #### A masked pattern was here ####
 POSTHOOK: query: select * from v where value='val_409' and ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@v
 #### A masked pattern was here ####
@@ -134,11 +140,13 @@ POSTHOOK: Output: default@v
 #### A masked pattern was here ####
 PREHOOK: query: select * from v where value='val_409' and ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@v
 #### A masked pattern was here ####
 POSTHOOK: query: select * from v where value='val_409' and ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@v
 #### A masked pattern was here ####
@@ -197,11 +205,13 @@ POSTHOOK: Output: default@v
 #### A masked pattern was here ####
 PREHOOK: query: select * from v where value='val_409' and ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@v
 #### A masked pattern was here ####
 POSTHOOK: query: select * from v where value='val_409' and ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@v
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out b/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out
index 83ece94..ee9f0fd 100644
--- a/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out
+++ b/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out
@@ -274,6 +274,7 @@ View Original Text: 	SELECT * FROM srcpart WHERE key < 10
 View Expanded Text: 	SELECT `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` FROM `default`.`srcpart` WHERE `srcpart`.`key` < 10	 
 PREHOOK: query: ALTER VIEW vp2 ADD PARTITION (hr='11') PARTITION (hr='12')
 PREHOOK: type: ALTERTABLE_ADDPARTS
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -281,6 +282,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Input: default@vp2
 POSTHOOK: query: ALTER VIEW vp2 ADD PARTITION (hr='11') PARTITION (hr='12')
 POSTHOOK: type: ALTERTABLE_ADDPARTS
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -290,12 +292,14 @@ POSTHOOK: Output: default@vp2@hr=11
 POSTHOOK: Output: default@vp2@hr=12
 PREHOOK: query: SELECT key FROM vp2 WHERE hr='12' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Input: default@vp2
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key FROM vp2 WHERE hr='12' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Input: default@vp2
diff --git a/src/ql/src/test/results/clientpositive/database.q.out b/src/ql/src/test/results/clientpositive/database.q.out
index 86620b8..4264227 100644
--- a/src/ql/src/test/results/clientpositive/database.q.out
+++ b/src/ql/src/test/results/clientpositive/database.q.out
@@ -1054,12 +1054,14 @@ PREHOOK: query: -- SELECT from Partitioned foreign table
 SELECT key, value FROM db1.srcpart
 WHERE key < 100 AND ds='2008-04-08' AND hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: db1@srcpart
 PREHOOK: Input: db1@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: -- SELECT from Partitioned foreign table
 SELECT key, value FROM db1.srcpart
 WHERE key < 100 AND ds='2008-04-08' AND hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@srcpart
 POSTHOOK: Input: db1@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: temp_tbl2.c EXPRESSION [(temp_tbl)temp_tbl.null, ]
diff --git a/src/ql/src/test/results/clientpositive/database_drop.q.out b/src/ql/src/test/results/clientpositive/database_drop.q.out
index 43297c3..86e0dde 100644
--- a/src/ql/src/test/results/clientpositive/database_drop.q.out
+++ b/src/ql/src/test/results/clientpositive/database_drop.q.out
@@ -164,10 +164,12 @@ POSTHOOK: Lineage: db5__temp_tbl_idx1__._offsets EXPRESSION [(temp_tbl)temp_tbl.
 POSTHOOK: Lineage: db5__temp_tbl_idx1__.id SIMPLE [(temp_tbl)temp_tbl.FieldSchema(name:id, type:int, comment:null), ]
 PREHOOK: query: ALTER INDEX idx3 ON part_tab PARTITION (ds='2008-04-09') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: db5@part_tab
 PREHOOK: Input: db5@part_tab@ds=2008-04-09
 PREHOOK: Output: db5@db5__part_tab_idx3__@ds=2008-04-09
 POSTHOOK: query: ALTER INDEX idx3 ON part_tab PARTITION (ds='2008-04-09') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: db5@part_tab
 POSTHOOK: Input: db5@part_tab@ds=2008-04-09
 POSTHOOK: Output: db5@db5__part_tab_idx3__@ds=2008-04-09
 POSTHOOK: Lineage: db5__part_tab_idx3__ PARTITION(ds=2008-04-09)._bucketname SIMPLE [(part_tab)part_tab.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -181,10 +183,12 @@ POSTHOOK: Lineage: db5__temp_tbl_idx1__._offsets EXPRESSION [(temp_tbl)temp_tbl.
 POSTHOOK: Lineage: db5__temp_tbl_idx1__.id SIMPLE [(temp_tbl)temp_tbl.FieldSchema(name:id, type:int, comment:null), ]
 PREHOOK: query: ALTER INDEX idx3 ON part_tab PARTITION (ds='2009-04-09') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: db5@part_tab
 PREHOOK: Input: db5@part_tab@ds=2009-04-09
 PREHOOK: Output: db5@db5__part_tab_idx3__@ds=2009-04-09
 POSTHOOK: query: ALTER INDEX idx3 ON part_tab PARTITION (ds='2009-04-09') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: db5@part_tab
 POSTHOOK: Input: db5@part_tab@ds=2009-04-09
 POSTHOOK: Output: db5@db5__part_tab_idx3__@ds=2009-04-09
 POSTHOOK: Lineage: db5__part_tab_idx3__ PARTITION(ds=2008-04-09)._bucketname SIMPLE [(part_tab)part_tab.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -279,10 +283,12 @@ POSTHOOK: Lineage: db5__temp_tbl_idx1__._offsets EXPRESSION [(temp_tbl)temp_tbl.
 POSTHOOK: Lineage: db5__temp_tbl_idx1__.id SIMPLE [(temp_tbl)temp_tbl.FieldSchema(name:id, type:int, comment:null), ]
 PREHOOK: query: ALTER INDEX idx4 ON part_tab2 PARTITION (ds='2008-04-09') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: db5@part_tab2
 PREHOOK: Input: db5@part_tab2@ds=2008-04-09
 PREHOOK: Output: db5@db5__part_tab2_idx4__@ds=2008-04-09
 POSTHOOK: query: ALTER INDEX idx4 ON part_tab2 PARTITION (ds='2008-04-09') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: db5@part_tab2
 POSTHOOK: Input: db5@part_tab2@ds=2008-04-09
 POSTHOOK: Output: db5@db5__part_tab2_idx4__@ds=2008-04-09
 POSTHOOK: Lineage: db5__part_tab2_idx4__ PARTITION(ds=2008-04-09)._bucketname SIMPLE [(part_tab2)part_tab2.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -302,10 +308,12 @@ POSTHOOK: Lineage: db5__temp_tbl_idx1__._offsets EXPRESSION [(temp_tbl)temp_tbl.
 POSTHOOK: Lineage: db5__temp_tbl_idx1__.id SIMPLE [(temp_tbl)temp_tbl.FieldSchema(name:id, type:int, comment:null), ]
 PREHOOK: query: ALTER INDEX idx4 ON part_tab2 PARTITION (ds='2009-04-09') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: db5@part_tab2
 PREHOOK: Input: db5@part_tab2@ds=2009-04-09
 PREHOOK: Output: db5@db5__part_tab2_idx4__@ds=2009-04-09
 POSTHOOK: query: ALTER INDEX idx4 ON part_tab2 PARTITION (ds='2009-04-09') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: db5@part_tab2
 POSTHOOK: Input: db5@part_tab2@ds=2009-04-09
 POSTHOOK: Output: db5@db5__part_tab2_idx4__@ds=2009-04-09
 POSTHOOK: Lineage: db5__part_tab2_idx4__ PARTITION(ds=2008-04-09)._bucketname SIMPLE [(part_tab2)part_tab2.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -455,10 +463,12 @@ POSTHOOK: Lineage: db5__temp_tbl_idx1__._offsets EXPRESSION [(temp_tbl)temp_tbl.
 POSTHOOK: Lineage: db5__temp_tbl_idx1__.id SIMPLE [(temp_tbl)temp_tbl.FieldSchema(name:id, type:int, comment:null), ]
 PREHOOK: query: ALTER INDEX idx5 ON part_tab3 PARTITION (ds='2008-04-09') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: db5@part_tab3
 PREHOOK: Input: db5@part_tab3@ds=2008-04-09
 PREHOOK: Output: db5@db5__part_tab3_idx5__@ds=2008-04-09
 POSTHOOK: query: ALTER INDEX idx5 ON part_tab3 PARTITION (ds='2008-04-09') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: db5@part_tab3
 POSTHOOK: Input: db5@part_tab3@ds=2008-04-09
 POSTHOOK: Output: db5@db5__part_tab3_idx5__@ds=2008-04-09
 POSTHOOK: Lineage: db5__part_tab2_idx4__ PARTITION(ds=2008-04-09)._bucketname SIMPLE [(part_tab2)part_tab2.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -484,10 +494,12 @@ POSTHOOK: Lineage: db5__temp_tbl_idx1__._offsets EXPRESSION [(temp_tbl)temp_tbl.
 POSTHOOK: Lineage: db5__temp_tbl_idx1__.id SIMPLE [(temp_tbl)temp_tbl.FieldSchema(name:id, type:int, comment:null), ]
 PREHOOK: query: ALTER INDEX idx5 ON part_tab3 PARTITION (ds='2009-04-09') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: db5@part_tab3
 PREHOOK: Input: db5@part_tab3@ds=2009-04-09
 PREHOOK: Output: db5@db5__part_tab3_idx5__@ds=2009-04-09
 POSTHOOK: query: ALTER INDEX idx5 ON part_tab3 PARTITION (ds='2009-04-09') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: db5@part_tab3
 POSTHOOK: Input: db5@part_tab3@ds=2009-04-09
 POSTHOOK: Output: db5@db5__part_tab3_idx5__@ds=2009-04-09
 POSTHOOK: Lineage: db5__part_tab2_idx4__ PARTITION(ds=2008-04-09)._bucketname SIMPLE [(part_tab2)part_tab2.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
diff --git a/src/ql/src/test/results/clientpositive/diff_part_input_formats.q.out b/src/ql/src/test/results/clientpositive/diff_part_input_formats.q.out
index 719065d..474023b 100644
--- a/src/ql/src/test/results/clientpositive/diff_part_input_formats.q.out
+++ b/src/ql/src/test/results/clientpositive/diff_part_input_formats.q.out
@@ -33,8 +33,10 @@ POSTHOOK: Input: default@part_test
 POSTHOOK: Output: default@part_test@ds=2
 PREHOOK: query: SELECT count(1) FROM part_test WHERE ds='3'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@part_test
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT count(1) FROM part_test WHERE ds='3'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@part_test
 #### A masked pattern was here ####
 0
diff --git a/src/ql/src/test/results/clientpositive/escape1.q.out b/src/ql/src/test/results/clientpositive/escape1.q.out
index 7ee4d8fa9885ac3f68789ee494ae812ed7631d08..95ada2e1ad616d83e718a0ea426aab404e789e47 100644
GIT binary patch
delta 48
zcmZ2}k?qArwhestllT4On!MXzaq_Ew+#q_htG%q)^p&EF+>?Fd6`ONIx95g3S_K0D
DBxn>3

delta 40
vcmaEHk!|@!whestlNJ7pO}_1~xH;8cRt(7D+pNBDpGk9m*Y^A_#!5K=bQcj^

diff --git a/src/ql/src/test/results/clientpositive/escape2.q.out b/src/ql/src/test/results/clientpositive/escape2.q.out
index db244f07a177c3e9a88adeb0723aa36b5fc308d7..b7d3e603a7d4bc615c17b8d4230feb12d628f836 100644
GIT binary patch
delta 93
zcmcco)M&~xqYWnZ(=YsH;o3aAOHOPuKa0rZfKZF+3-&W|Pd>X)adPf|p62<X?ejw!
kftU%1nSq!Eh*^P{4T#x+m;;D8ftU-3xwp>`<uQo`08`K<*#H0l

delta 82
zcmbR8%;@q{qYWnZlQ(ekZR-9dI+>qEWO6~M1&}Y^{2;XbK`0{-GXXI(5VHU=D-g2*
WF*^`*05K;Ja{)2;_6MOnCb0nF93!Lv

diff --git a/src/ql/src/test/results/clientpositive/explain_dependency.q.out b/src/ql/src/test/results/clientpositive/explain_dependency.q.out
index 6d665b6..7254852 100644
--- a/src/ql/src/test/results/clientpositive/explain_dependency.q.out
+++ b/src/ql/src/test/results/clientpositive/explain_dependency.q.out
@@ -54,7 +54,7 @@ POSTHOOK: query: -- Simple select queries, union queries and join queries
 EXPLAIN DEPENDENCY 
   SELECT key, count(1) FROM srcpart WHERE ds IS NOT NULL GROUP BY key
 POSTHOOK: type: QUERY
-{"input_partitions":["default@srcpart@ds=2008-04-08/hr=11","default@srcpart@ds=2008-04-08/hr=12","default@srcpart@ds=2008-04-09/hr=11","default@srcpart@ds=2008-04-09/hr=12"],"input_tables":[{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[{"partitionName":"default@srcpart@ds=2008-04-08/hr=11"},{"partitionName":"default@srcpart@ds=2008-04-08/hr=12"},{"partitionName":"default@srcpart@ds=2008-04-09/hr=11"},{"partitionName":"default@srcpart@ds=2008-04-09/hr=12"}],"input_tables":[{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"}]}
 PREHOOK: query: EXPLAIN DEPENDENCY 
   SELECT key, count(1) FROM (SELECT key, value FROM src) subq1 GROUP BY key
 PREHOOK: type: QUERY
@@ -72,33 +72,49 @@ POSTHOOK: query: EXPLAIN DEPENDENCY
     SELECT key, value FROM src UNION ALL SELECT key, value FROM srcpart WHERE ds IS NOT NULL
   ) S1
 POSTHOOK: type: QUERY
-{"input_partitions":["default@srcpart@ds=2008-04-08/hr=11","default@srcpart@ds=2008-04-08/hr=12","default@srcpart@ds=2008-04-09/hr=11","default@srcpart@ds=2008-04-09/hr=12"],"input_tables":[{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[{"partitionName":"default@srcpart@ds=2008-04-08/hr=11"},{"partitionName":"default@srcpart@ds=2008-04-08/hr=12"},{"partitionName":"default@srcpart@ds=2008-04-09/hr=11"},{"partitionName":"default@srcpart@ds=2008-04-09/hr=12"}],"input_tables":[{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"}]}
 PREHOOK: query: EXPLAIN DEPENDENCY 
   SELECT S1.key, S2.value FROM src S1 JOIN srcpart S2 ON S1.key = S2.key WHERE ds IS NOT NULL
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN DEPENDENCY 
   SELECT S1.key, S2.value FROM src S1 JOIN srcpart S2 ON S1.key = S2.key WHERE ds IS NOT NULL
 POSTHOOK: type: QUERY
-{"input_partitions":["default@srcpart@ds=2008-04-08/hr=11","default@srcpart@ds=2008-04-08/hr=12","default@srcpart@ds=2008-04-09/hr=11","default@srcpart@ds=2008-04-09/hr=12"],"input_tables":[{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[{"partitionName":"default@srcpart@ds=2008-04-08/hr=11"},{"partitionName":"default@srcpart@ds=2008-04-08/hr=12"},{"partitionName":"default@srcpart@ds=2008-04-09/hr=11"},{"partitionName":"default@srcpart@ds=2008-04-09/hr=12"}],"input_tables":[{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"}]}
 PREHOOK: query: -- With views
 EXPLAIN DEPENDENCY SELECT * FROM V1
 PREHOOK: type: QUERY
 POSTHOOK: query: -- With views
 EXPLAIN DEPENDENCY SELECT * FROM V1
 POSTHOOK: type: QUERY
-{"input_partitions":[],"input_tables":[{"tablename":"default@v1","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[],"input_tables":[{"tablename":"default@v1","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@src","tabletype":"MANAGED_TABLE","tableParents":"[default@v1]"}]}
 PREHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V2
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V2
 POSTHOOK: type: QUERY
-{"input_partitions":["default@srcpart@ds=2008-04-08/hr=11","default@srcpart@ds=2008-04-08/hr=12","default@srcpart@ds=2008-04-09/hr=11","default@srcpart@ds=2008-04-09/hr=12"],"input_tables":[{"tablename":"default@v2","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-08/hr=11"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-08/hr=12"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-09/hr=11"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-09/hr=12"}],"input_tables":[{"tablename":"default@v2","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE","tableParents":"[default@v2]"}]}
 PREHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V3
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V3
 POSTHOOK: type: QUERY
-{"input_partitions":["default@srcpart@ds=2008-04-08/hr=11","default@srcpart@ds=2008-04-08/hr=12","default@srcpart@ds=2008-04-09/hr=11","default@srcpart@ds=2008-04-09/hr=12"],"input_tables":[{"tablename":"default@v3","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@v2","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-08/hr=11"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-08/hr=12"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-09/hr=11"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-09/hr=12"}],"input_tables":[{"tablename":"default@v3","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@v2","tabletype":"VIRTUAL_VIEW","tableParents":"[default@v3]"},{"tablename":"default@src","tabletype":"MANAGED_TABLE","tableParents":"[default@v3]"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE","tableParents":"[default@v2]"}]}
 PREHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V4
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V4
 POSTHOOK: type: QUERY
-{"input_partitions":["default@srcpart@ds=2008-04-08/hr=11","default@srcpart@ds=2008-04-08/hr=12","default@srcpart@ds=2008-04-09/hr=11","default@srcpart@ds=2008-04-09/hr=12"],"input_tables":[{"tablename":"default@v4","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@v2","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@v1","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@src","tabletype":"MANAGED_TABLE"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE"}]}
+{"input_partitions":[{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-08/hr=11"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-08/hr=12"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-09/hr=11"},{"partitionParents":"[default@v2]","partitionName":"default@srcpart@ds=2008-04-09/hr=12"}],"input_tables":[{"tablename":"default@v4","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@v2","tabletype":"VIRTUAL_VIEW","tableParents":"[default@v4]"},{"tablename":"default@v1","tabletype":"VIRTUAL_VIEW","tableParents":"[default@v4]"},{"tablename":"default@src","tabletype":"MANAGED_TABLE","tableParents":"[default@v4, default@v1]"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE","tableParents":"[default@v2]"}]}
+PREHOOK: query: -- The table should show up in the explain dependency even if none
+-- of the partitions are selected.
+CREATE VIEW V5 as SELECT * FROM srcpart where ds = '10'
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- The table should show up in the explain dependency even if none
+-- of the partitions are selected.
+CREATE VIEW V5 as SELECT * FROM srcpart where ds = '10'
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: default@V5
+#### A masked pattern was here ####
+PREHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V5
+PREHOOK: type: QUERY
+POSTHOOK: query: EXPLAIN DEPENDENCY SELECT * FROM V5
+POSTHOOK: type: QUERY
+{"input_partitions":[],"input_tables":[{"tablename":"default@v5","tabletype":"VIRTUAL_VIEW"},{"tablename":"default@srcpart","tabletype":"MANAGED_TABLE","tableParents":"[default@v5]"}]}
diff --git a/src/ql/src/test/results/clientpositive/fileformat_mix.q.out b/src/ql/src/test/results/clientpositive/fileformat_mix.q.out
index 60c8f99..32ad9e8 100644
--- a/src/ql/src/test/results/clientpositive/fileformat_mix.q.out
+++ b/src/ql/src/test/results/clientpositive/fileformat_mix.q.out
@@ -44,11 +44,13 @@ POSTHOOK: Lineage: fileformat_mix_test PARTITION(ds=1).src EXPRESSION [(src)src.
 POSTHOOK: Lineage: fileformat_mix_test PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select count(1) from fileformat_mix_test
 PREHOOK: type: QUERY
+PREHOOK: Input: default@fileformat_mix_test
 PREHOOK: Input: default@fileformat_mix_test@ds=1
 PREHOOK: Input: default@fileformat_mix_test@ds=2
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from fileformat_mix_test
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@fileformat_mix_test
 POSTHOOK: Input: default@fileformat_mix_test@ds=1
 POSTHOOK: Input: default@fileformat_mix_test@ds=2
 #### A masked pattern was here ####
@@ -57,11 +59,13 @@ POSTHOOK: Lineage: fileformat_mix_test PARTITION(ds=1).value SIMPLE [(src)src.Fi
 500
 PREHOOK: query: select src from fileformat_mix_test
 PREHOOK: type: QUERY
+PREHOOK: Input: default@fileformat_mix_test
 PREHOOK: Input: default@fileformat_mix_test@ds=1
 PREHOOK: Input: default@fileformat_mix_test@ds=2
 #### A masked pattern was here ####
 POSTHOOK: query: select src from fileformat_mix_test
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@fileformat_mix_test
 POSTHOOK: Input: default@fileformat_mix_test@ds=1
 POSTHOOK: Input: default@fileformat_mix_test@ds=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out b/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
index 6714cb3..63d7d07 100644
--- a/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
+++ b/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
@@ -309,12 +309,14 @@ PREHOOK: query: SELECT f.key, g.value
 FROM filter_join_breaktask f JOIN filter_join_breaktask m ON( f.key = m.key AND f.ds='2008-04-08' AND m.ds='2008-04-08' AND f.key is not null) 
 JOIN filter_join_breaktask g ON(g.value = m.value AND g.ds='2008-04-08' AND m.ds='2008-04-08' AND m.value is not null AND m.value !='')
 PREHOOK: type: QUERY
+PREHOOK: Input: default@filter_join_breaktask
 PREHOOK: Input: default@filter_join_breaktask@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT f.key, g.value 
 FROM filter_join_breaktask f JOIN filter_join_breaktask m ON( f.key = m.key AND f.ds='2008-04-08' AND m.ds='2008-04-08' AND f.key is not null) 
 JOIN filter_join_breaktask g ON(g.value = m.value AND g.ds='2008-04-08' AND m.ds='2008-04-08' AND m.value is not null AND m.value !='')
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@filter_join_breaktask
 POSTHOOK: Input: default@filter_join_breaktask@ds=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: Lineage: filter_join_breaktask PARTITION(ds=2008-04-08).key EXPRESSION [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/filter_join_breaktask2.q.out b/src/ql/src/test/results/clientpositive/filter_join_breaktask2.q.out
index c0e2364..08065ea 100644
--- a/src/ql/src/test/results/clientpositive/filter_join_breaktask2.q.out
+++ b/src/ql/src/test/results/clientpositive/filter_join_breaktask2.q.out
@@ -774,9 +774,13 @@ FROM T1 a JOIN T2 b
      JOIN T4 d 
        ON (c.c0 = d.c0 AND c.ds='2010-04-17' AND d.ds='2010-04-17')
 PREHOOK: type: QUERY
+PREHOOK: Input: default@t1
 PREHOOK: Input: default@t1@ds=2010-04-17
+PREHOOK: Input: default@t2
 PREHOOK: Input: default@t2@ds=2010-04-17
+PREHOOK: Input: default@t3
 PREHOOK: Input: default@t3@ds=2010-04-17
+PREHOOK: Input: default@t4
 PREHOOK: Input: default@t4@ds=2010-04-17
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT a.c1 as a_c1, b.c1 b_c1, d.c0 as d_c0
@@ -787,9 +791,13 @@ FROM T1 a JOIN T2 b
      JOIN T4 d 
        ON (c.c0 = d.c0 AND c.ds='2010-04-17' AND d.ds='2010-04-17')
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@t1
 POSTHOOK: Input: default@t1@ds=2010-04-17
+POSTHOOK: Input: default@t2
 POSTHOOK: Input: default@t2@ds=2010-04-17
+POSTHOOK: Input: default@t3
 POSTHOOK: Input: default@t3@ds=2010-04-17
+POSTHOOK: Input: default@t4
 POSTHOOK: Input: default@t4@ds=2010-04-17
 #### A masked pattern was here ####
 POSTHOOK: Lineage: t1 PARTITION(ds=2010-04-17).c1 SIMPLE []
diff --git a/src/ql/src/test/results/clientpositive/global_limit.q.out b/src/ql/src/test/results/clientpositive/global_limit.q.out
index 472469b..395ef93 100644
--- a/src/ql/src/test/results/clientpositive/global_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/global_limit.q.out
@@ -1166,11 +1166,13 @@ POSTHOOK: Output: default@gl_src_part1@p=12
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: select key from gl_src_part1 where p like '1%' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@gl_src_part1
 PREHOOK: Input: default@gl_src_part1@p=11
 PREHOOK: Input: default@gl_src_part1@p=12
 #### A masked pattern was here ####
 POSTHOOK: query: select key from gl_src_part1 where p like '1%' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@gl_src_part1
 POSTHOOK: Input: default@gl_src_part1@p=11
 POSTHOOK: Input: default@gl_src_part1@p=12
 #### A masked pattern was here ####
@@ -1187,10 +1189,12 @@ POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key,
 4
 PREHOOK: query: select key from gl_src_part1 where p='11' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@gl_src_part1
 PREHOOK: Input: default@gl_src_part1@p=11
 #### A masked pattern was here ####
 POSTHOOK: query: select key from gl_src_part1 where p='11' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@gl_src_part1
 POSTHOOK: Input: default@gl_src_part1@p=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
@@ -1206,10 +1210,12 @@ POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key,
 41
 PREHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@gl_src_part1
 PREHOOK: Input: default@gl_src_part1@p=12
 #### A masked pattern was here ####
 POSTHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@gl_src_part1
 POSTHOOK: Input: default@gl_src_part1@p=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
@@ -1225,9 +1231,11 @@ POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key,
 4
 PREHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@gl_src_part1
 #### A masked pattern was here ####
 POSTHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@gl_src_part1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: alter table gl_src_part1 add partition (p='13')
@@ -1240,19 +1248,23 @@ POSTHOOK: Output: default@gl_src_part1@p=13
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@gl_src_part1
 PREHOOK: Input: default@gl_src_part1@p=13
 #### A masked pattern was here ####
 POSTHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@gl_src_part1
 POSTHOOK: Input: default@gl_src_part1@p=13
 #### A masked pattern was here ####
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 1000
 PREHOOK: type: QUERY
+PREHOOK: Input: default@gl_src_part1
 PREHOOK: Input: default@gl_src_part1@p=12
 #### A masked pattern was here ####
 POSTHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 1000
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@gl_src_part1
 POSTHOOK: Input: default@gl_src_part1@p=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/groupby_map_ppr.q.out b/src/ql/src/test/results/clientpositive/groupby_map_ppr.q.out
index 9f521bb..2082630 100644
--- a/src/ql/src/test/results/clientpositive/groupby_map_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_map_ppr.q.out
@@ -256,6 +256,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
@@ -265,6 +266,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
index bf6b971..b78c399 100644
--- a/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
@@ -276,6 +276,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
@@ -285,6 +286,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/groupby_ppr.q.out b/src/ql/src/test/results/clientpositive/groupby_ppr.q.out
index ab01bf3..824c802 100644
--- a/src/ql/src/test/results/clientpositive/groupby_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_ppr.q.out
@@ -239,6 +239,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
@@ -248,6 +249,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out
index ac33d5c..6ae3db9 100644
--- a/src/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out
@@ -251,6 +251,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
@@ -260,6 +261,7 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1)
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/hook_context_cs.q.out b/src/ql/src/test/results/clientpositive/hook_context_cs.q.out
index 4b0f03e..9f13be3 100644
--- a/src/ql/src/test/results/clientpositive/hook_context_cs.q.out
+++ b/src/ql/src/test/results/clientpositive/hook_context_cs.q.out
@@ -16,5 +16,6 @@ POSTHOOK: Input: default@vcsc
 POSTHOOK: Output: default@vcsc@ds=dummy
 POSTHOOK: query: SELECT a.c, b.c FROM vcsc a JOIN vcsc b ON a.ds = 'dummy' AND b.ds = 'dummy' AND a.c = b.c
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@vcsc
 POSTHOOK: Input: default@vcsc@ds=dummy
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/index_auth.q.out b/src/ql/src/test/results/clientpositive/index_auth.q.out
index 21481b1..2973eb3 100644
--- a/src/ql/src/test/results/clientpositive/index_auth.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auth.q.out
@@ -41,10 +41,12 @@ POSTHOOK: type: GRANT_PRIVILEGE
 POSTHOOK: Output: default@default__foobar_srcpart_auth_index__
 PREHOOK: query: ALTER INDEX srcpart_auth_index ON foobar PARTITION (ds='2008-04-08',hr='12')  REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@foobar
 PREHOOK: Input: default@foobar@ds=2008-04-08/hr=12
 PREHOOK: Output: default@default__foobar_srcpart_auth_index__@ds=2008-04-08/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_auth_index ON foobar PARTITION (ds='2008-04-08',hr='12')  REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@foobar
 POSTHOOK: Input: default@foobar@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@default__foobar_srcpart_auth_index__@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: default__foobar_srcpart_auth_index__ PARTITION(ds=2008-04-08,hr=12)._bitmaps EXPRESSION [(foobar)foobar.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
diff --git a/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out b/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out
index 4d885b4..63912ac 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out
@@ -115,6 +115,7 @@ STAGE PLANS:
 PREHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -123,6 +124,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -204,6 +206,7 @@ POSTHOOK: Lineage: default__src_src_index__._offset SIMPLE [(src)src.FieldSchema
 POSTHOOK: Lineage: default__src_src_index__.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX srcpart_index ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -214,6 +217,7 @@ PREHOOK: Output: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=11
 PREHOOK: Output: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_index ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -533,11 +537,13 @@ STAGE PLANS:
 PREHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@default__src_src_index__
+PREHOOK: Input: default@default__srcpart_srcpart_index__
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=12
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -546,11 +552,13 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@default__src_src_index__
+POSTHOOK: Input: default@default__srcpart_srcpart_index__
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=12
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out b/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out
index fbfbe03..334c950 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out
@@ -115,6 +115,7 @@ STAGE PLANS:
 PREHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -123,6 +124,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -202,6 +204,7 @@ POSTHOOK: Lineage: default__src_src_index__._offsets EXPRESSION [(src)src.FieldS
 POSTHOOK: Lineage: default__src_src_index__.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX srcpart_index ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -212,6 +215,7 @@ PREHOOK: Output: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=11
 PREHOOK: Output: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_index ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -505,11 +509,13 @@ STAGE PLANS:
 PREHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@default__src_src_index__
+PREHOOK: Input: default@default__srcpart_srcpart_index__
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=12
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -518,11 +524,13 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@default__src_src_index__
+POSTHOOK: Input: default@default__srcpart_srcpart_index__
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index__@ds=2008-04-09/hr=12
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out b/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
index fa92a90..78fbb8b 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
@@ -7,6 +7,7 @@ POSTHOOK: type: CREATEINDEX
 POSTHOOK: Output: default@default__srcpart_src_part_index__
 PREHOOK: query: ALTER INDEX src_part_index ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -17,6 +18,7 @@ PREHOOK: Output: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=11
 PREHOOK: Output: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX src_part_index ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -167,15 +169,19 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=86 AND ds='2008-04-09' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_src_part_index__
 PREHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=11
 PREHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=12
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=86 AND ds='2008-04-09' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_src_part_index__
 POSTHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=12
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/index_auto_unused.q.out b/src/ql/src/test/results/clientpositive/index_auto_unused.q.out
index c5a51ff..8ea6145 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_unused.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_unused.q.out
@@ -459,10 +459,12 @@ POSTHOOK: Lineage: default__src_src_val_index__._offsets EXPRESSION [(src)src.Fi
 POSTHOOK: Lineage: default__src_src_val_index__.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX src_part_index ON srcpart PARTITION (ds='2008-04-08', hr=11) REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@default__srcpart_src_part_index__@ds=2008-04-08/hr=11
 POSTHOOK: query: ALTER INDEX src_part_index ON srcpart PARTITION (ds='2008-04-08', hr=11) REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@default__srcpart_src_part_index__@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: default__src_src_index__._bucketname SIMPLE [(src)src.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -550,10 +552,12 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT * FROM srcpart WHERE ds='2008-04-09' AND hr=12 AND key < 10 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * FROM srcpart WHERE ds='2008-04-09' AND hr=12 AND key < 10 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__src_src_index__._bucketname SIMPLE [(src)src.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
diff --git a/src/ql/src/test/results/clientpositive/index_bitmap.q.out b/src/ql/src/test/results/clientpositive/index_bitmap.q.out
index 624e7e0..55699f0 100644
--- a/src/ql/src/test/results/clientpositive/index_bitmap.q.out
+++ b/src/ql/src/test/results/clientpositive/index_bitmap.q.out
@@ -25,6 +25,7 @@ POSTHOOK: type: CREATEINDEX
 POSTHOOK: Output: default@default__srcpart_srcpart_index_proj__
 PREHOOK: query: ALTER INDEX srcpart_index_proj ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -35,6 +36,7 @@ PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=
 PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_index_proj ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -49,10 +51,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT x.* FROM default__srcpart_srcpart_index_proj__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM default__srcpart_srcpart_index_proj__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart)srcpart.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -63,12 +67,14 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_srcpart_index_proj__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' GROUP BY `_bucketname`
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_srcpart_index_proj__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' GROUP BY `_bucketname`
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -78,11 +84,13 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -98,11 +106,13 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_srcpart_index_proj__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' and x.hr = 11 GROUP BY `_bucketname`
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_srcpart_index_proj__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' and x.hr = 11 GROUP BY `_bucketname`
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart)srcpart.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -111,10 +121,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart)srcpart.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -125,10 +137,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart)srcpart.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -176,6 +190,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: ALTER  INDEX srcpart_index_proj ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -186,6 +201,7 @@ PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=
 PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER  INDEX srcpart_index_proj ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -228,6 +244,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_srcpart_index_proj__
 WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND key=100 GROUP BY `_bucketname`
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=11
@@ -236,6 +253,7 @@ PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=1
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_srcpart_index_proj__
 WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND key=100 GROUP BY `_bucketname`
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=11
@@ -251,6 +269,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -258,6 +277,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -281,6 +301,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -288,6 +309,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/index_bitmap_auto_partitioned.q.out b/src/ql/src/test/results/clientpositive/index_bitmap_auto_partitioned.q.out
index 67dfc10..5281795 100644
--- a/src/ql/src/test/results/clientpositive/index_bitmap_auto_partitioned.q.out
+++ b/src/ql/src/test/results/clientpositive/index_bitmap_auto_partitioned.q.out
@@ -7,6 +7,7 @@ POSTHOOK: type: CREATEINDEX
 POSTHOOK: Output: default@default__srcpart_src_part_index__
 PREHOOK: query: ALTER INDEX src_part_index ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -17,6 +18,7 @@ PREHOOK: Output: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=11
 PREHOOK: Output: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX src_part_index ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -181,15 +183,19 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=86 AND ds='2008-04-09' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_src_part_index__
 PREHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=11
 PREHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=12
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=86 AND ds='2008-04-09' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_src_part_index__
 POSTHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@default__srcpart_src_part_index__@ds=2008-04-09/hr=12
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/index_bitmap_rc.q.out b/src/ql/src/test/results/clientpositive/index_bitmap_rc.q.out
index 0d01c9a..0681537 100644
--- a/src/ql/src/test/results/clientpositive/index_bitmap_rc.q.out
+++ b/src/ql/src/test/results/clientpositive/index_bitmap_rc.q.out
@@ -5,20 +5,24 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@srcpart_rc
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -27,10 +31,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -41,10 +47,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=11).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -94,6 +102,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX srcpart_rc_index ON srcpart_rc REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -104,6 +113,7 @@ PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr
 PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_rc_index ON srcpart_rc REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -126,10 +136,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart_rc)srcpart_rc.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -148,12 +160,14 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_rc_srcpart_rc_index__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' GROUP BY `_bucketname`
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_rc_srcpart_rc_index__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' GROUP BY `_bucketname`
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -171,11 +185,13 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -199,11 +215,13 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_rc_srcpart_rc_index__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' and x.hr = 11 GROUP BY `_bucketname`
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_rc_srcpart_rc_index__
 x WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND x.key=100 AND x.ds = '2008-04-08' and x.hr = 11 GROUP BY `_bucketname`
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart_rc)srcpart_rc.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -220,10 +238,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart_rc)srcpart_rc.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -242,10 +262,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bitmaps EXPRESSION [(srcpart_rc)srcpart_rc.FieldSchema(name:ROW__OFFSET__INSIDE__BLOCK, type:bigint, comment:), ]
@@ -325,6 +347,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER  INDEX srcpart_rc_index ON srcpart_rc REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -335,6 +358,7 @@ PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr
 PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER  INDEX srcpart_rc_index ON srcpart_rc REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -361,6 +385,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x WHERE x.key = 100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -368,6 +393,7 @@ PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x WHERE x.key = 100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -393,6 +419,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_rc_srcpart_rc_index__
 WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND key=100 GROUP BY `_bucketname`
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -401,6 +428,7 @@ PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=
 COLLECT_SET(`_offset`) as `_offsets` FROM default__srcpart_rc_srcpart_rc_index__
 WHERE NOT EWAH_BITMAP_EMPTY(`_bitmaps`) AND key=100 GROUP BY `_bucketname`
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -424,6 +452,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -431,6 +460,7 @@ PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -462,6 +492,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -469,6 +500,7 @@ PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/index_compact.q.out b/src/ql/src/test/results/clientpositive/index_compact.q.out
index 900b1c5..2d3aa6b 100644
--- a/src/ql/src/test/results/clientpositive/index_compact.q.out
+++ b/src/ql/src/test/results/clientpositive/index_compact.q.out
@@ -25,6 +25,7 @@ POSTHOOK: type: CREATEINDEX
 POSTHOOK: Output: default@default__srcpart_srcpart_index_proj__
 PREHOOK: query: ALTER INDEX srcpart_index_proj ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -35,6 +36,7 @@ PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=
 PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_index_proj ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -48,10 +50,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT x.* FROM default__srcpart_srcpart_index_proj__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM default__srcpart_srcpart_index_proj__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart)srcpart.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -59,10 +63,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 #### A masked pattern was here ####
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -71,11 +77,13 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -88,9 +96,11 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 100	val_100
 #### A masked pattern was here ####
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart)srcpart.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -98,10 +108,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart)srcpart.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -111,10 +123,12 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart)srcpart.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -158,6 +172,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: ALTER  INDEX srcpart_index_proj ON srcpart REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -168,6 +183,7 @@ PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=
 PREHOOK: Output: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER  INDEX srcpart_index_proj ON srcpart REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -204,12 +220,14 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 #### A masked pattern was here ####
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_srcpart_index_proj__
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=11
 PREHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_srcpart_index_proj__@ds=2008-04-09/hr=11
@@ -223,6 +241,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -230,6 +249,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -251,6 +271,7 @@ POSTHOOK: Lineage: default__srcpart_srcpart_index_proj__ PARTITION(ds=2008-04-09
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -258,6 +279,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/index_compact_2.q.out b/src/ql/src/test/results/clientpositive/index_compact_2.q.out
index 10a47a6..6f0e089 100644
--- a/src/ql/src/test/results/clientpositive/index_compact_2.q.out
+++ b/src/ql/src/test/results/clientpositive/index_compact_2.q.out
@@ -5,20 +5,24 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@srcpart_rc
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-08', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -27,10 +31,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -41,10 +47,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=11).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE srcpart_rc PARTITION (ds='2008-04-09', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@srcpart_rc@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -70,6 +78,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX srcpart_rc_index ON srcpart_rc REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -80,6 +89,7 @@ PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr
 PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX srcpart_rc_index ON srcpart_rc REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -101,10 +111,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x WHERE x.ds = '2008-04-08' and x.hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart_rc)srcpart_rc.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -120,10 +132,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 #### A masked pattern was here ####
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -140,11 +154,13 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -165,9 +181,11 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 100	val_100
 #### A masked pattern was here ####
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart_rc)srcpart_rc.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -183,10 +201,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart_rc)srcpart_rc.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -204,10 +224,12 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 AND ds = '2008-04-08' and hr = 11 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__srcpart_rc_srcpart_rc_index__ PARTITION(ds=2008-04-09,hr=12)._bucketname SIMPLE [(srcpart_rc)srcpart_rc.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -283,6 +305,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER  INDEX srcpart_rc_index ON srcpart_rc REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -293,6 +316,7 @@ PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr
 PREHOOK: Output: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER  INDEX srcpart_rc_index ON srcpart_rc REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -317,6 +341,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -324,6 +349,7 @@ PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM default__srcpart_rc_srcpart_rc_index__ x ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -345,12 +371,14 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 #### A masked pattern was here ####
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
 PREHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@default__srcpart_rc_srcpart_rc_index__@ds=2008-04-09/hr=11
@@ -372,6 +400,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(sr
 POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -379,6 +408,7 @@ PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -408,6 +438,7 @@ POSTHOOK: Lineage: srcpart_rc PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcp
 100	val_100
 PREHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_rc
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
@@ -415,6 +446,7 @@ PREHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT key, value FROM srcpart_rc WHERE key=100 ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_rc
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_rc@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/index_stale_partitioned.q.out b/src/ql/src/test/results/clientpositive/index_stale_partitioned.q.out
index 7b40efc..f76401b 100644
--- a/src/ql/src/test/results/clientpositive/index_stale_partitioned.q.out
+++ b/src/ql/src/test/results/clientpositive/index_stale_partitioned.q.out
@@ -37,10 +37,12 @@ POSTHOOK: Lineage: temp PARTITION(foo=bar).key SIMPLE [(src)src.FieldSchema(name
 POSTHOOK: Lineage: temp PARTITION(foo=bar).val SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX temp_index ON temp PARTITION (foo = 'bar') REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@temp
 PREHOOK: Input: default@temp@foo=bar
 PREHOOK: Output: default@default__temp_temp_index__@foo=bar
 POSTHOOK: query: ALTER INDEX temp_index ON temp PARTITION (foo = 'bar') REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@temp
 POSTHOOK: Input: default@temp@foo=bar
 POSTHOOK: Output: default@default__temp_temp_index__@foo=bar
 POSTHOOK: Lineage: default__temp_temp_index__ PARTITION(foo=bar)._bucketname SIMPLE [(temp)temp.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -68,11 +70,13 @@ POSTHOOK: Lineage: temp PARTITION(foo=bar).val SIMPLE [(src)src.FieldSchema(name
 PREHOOK: query: -- query should not return any values
 SELECT * FROM default__temp_temp_index__ WHERE key = 86 AND foo='bar'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@default__temp_temp_index__
 PREHOOK: Input: default@default__temp_temp_index__@foo=bar
 #### A masked pattern was here ####
 POSTHOOK: query: -- query should not return any values
 SELECT * FROM default__temp_temp_index__ WHERE key = 86 AND foo='bar'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@default__temp_temp_index__
 POSTHOOK: Input: default@default__temp_temp_index__@foo=bar
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__temp_temp_index__ PARTITION(foo=bar)._bucketname SIMPLE [(temp)temp.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -137,10 +141,12 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT * FROM temp WHERE key  = 86 AND foo = 'bar'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@temp
 PREHOOK: Input: default@temp@foo=bar
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * FROM temp WHERE key  = 86 AND foo = 'bar'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@temp
 POSTHOOK: Input: default@temp@foo=bar
 #### A masked pattern was here ####
 POSTHOOK: Lineage: default__temp_temp_index__ PARTITION(foo=bar)._bucketname SIMPLE [(temp)temp.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
diff --git a/src/ql/src/test/results/clientpositive/input23.q.out b/src/ql/src/test/results/clientpositive/input23.q.out
index a3a5bfd..5f6eab0 100644
--- a/src/ql/src/test/results/clientpositive/input23.q.out
+++ b/src/ql/src/test/results/clientpositive/input23.q.out
@@ -159,9 +159,11 @@ STAGE PLANS:
 
 PREHOOK: query: select * from srcpart a join srcpart b where a.ds = '2008-04-08' and a.hr = '11' and b.ds = '2008-04-08' and b.hr = '14' limit 5
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpart a join srcpart b where a.ds = '2008-04-08' and a.hr = '11' and b.ds = '2008-04-08' and b.hr = '14' limit 5
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/input24.q.out b/src/ql/src/test/results/clientpositive/input24.q.out
index 4b624ea..88a606c 100644
--- a/src/ql/src/test/results/clientpositive/input24.q.out
+++ b/src/ql/src/test/results/clientpositive/input24.q.out
@@ -69,10 +69,12 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from tst x where x.d='2009-01-01'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tst
 PREHOOK: Input: default@tst@d=2009-01-01
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from tst x where x.d='2009-01-01'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tst
 POSTHOOK: Input: default@tst@d=2009-01-01
 #### A masked pattern was here ####
 0
diff --git a/src/ql/src/test/results/clientpositive/input25.q.out b/src/ql/src/test/results/clientpositive/input25.q.out
index e5bb962..262027a 100644
--- a/src/ql/src/test/results/clientpositive/input25.q.out
+++ b/src/ql/src/test/results/clientpositive/input25.q.out
@@ -164,6 +164,7 @@ PREHOOK: query: select * from (
   select * from tst x where x.d='2009-02-02' limit 10
 ) subq
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tst
 PREHOOK: Input: default@tst@d=2009-01-01
 PREHOOK: Input: default@tst@d=2009-02-02
 #### A masked pattern was here ####
@@ -173,6 +174,7 @@ POSTHOOK: query: select * from (
   select * from tst x where x.d='2009-02-02' limit 10
 ) subq
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tst
 POSTHOOK: Input: default@tst@d=2009-01-01
 POSTHOOK: Input: default@tst@d=2009-02-02
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/input26.q.out b/src/ql/src/test/results/clientpositive/input26.q.out
index ea93fda..018e3f8 100644
--- a/src/ql/src/test/results/clientpositive/input26.q.out
+++ b/src/ql/src/test/results/clientpositive/input26.q.out
@@ -163,6 +163,7 @@ PREHOOK: query: select * from (
   select * from srcpart b where b.ds = '2008-04-08' and b.hr = '14' limit 5
 )subq
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select * from (
@@ -171,6 +172,7 @@ POSTHOOK: query: select * from (
   select * from srcpart b where b.ds = '2008-04-08' and b.hr = '14' limit 5
 )subq
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 0	val_0	2008-04-08	11
diff --git a/src/ql/src/test/results/clientpositive/input28.q.out b/src/ql/src/test/results/clientpositive/input28.q.out
index 80ec74b..461c736 100644
--- a/src/ql/src/test/results/clientpositive/input28.q.out
+++ b/src/ql/src/test/results/clientpositive/input28.q.out
@@ -14,12 +14,14 @@ PREHOOK: query: insert overwrite table tst partition(d='2009-01-01')
 select tst.a, src.value from tst join src ON (tst.a = src.key)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@tst
 PREHOOK: Input: default@tst@d=2009-01-01
 PREHOOK: Output: default@tst@d=2009-01-01
 POSTHOOK: query: insert overwrite table tst partition(d='2009-01-01')
 select tst.a, src.value from tst join src ON (tst.a = src.key)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@tst
 POSTHOOK: Input: default@tst@d=2009-01-01
 POSTHOOK: Output: default@tst@d=2009-01-01
 POSTHOOK: Lineage: tst PARTITION(d=2009-01-01).a SIMPLE [(tst)tst.FieldSchema(name:a, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out b/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out
index 5a587fc..19b0602 100644
--- a/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out
@@ -177,12 +177,16 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from t1 join t2 on t1.key=t2.key where t1.ds='1' and t2.ds='1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@t1
 PREHOOK: Input: default@t1@ds=1
+PREHOOK: Input: default@t2
 PREHOOK: Input: default@t2@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from t1 join t2 on t1.key=t2.key where t1.ds='1' and t2.ds='1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@t1
 POSTHOOK: Input: default@t1@ds=1
+POSTHOOK: Input: default@t2
 POSTHOOK: Input: default@t2@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: t1 PARTITION(ds=1).key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/input40.q.out b/src/ql/src/test/results/clientpositive/input40.q.out
index 8206f48..17b3315 100644
--- a/src/ql/src/test/results/clientpositive/input40.q.out
+++ b/src/ql/src/test/results/clientpositive/input40.q.out
@@ -532,11 +532,13 @@ POSTHOOK: Output: default@tmp_insert_test_p@ds=2009-08-01
 PREHOOK: query: select * from tmp_insert_test_p where ds= '2009-08-01'
 order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tmp_insert_test_p
 PREHOOK: Input: default@tmp_insert_test_p@ds=2009-08-01
 #### A masked pattern was here ####
 POSTHOOK: query: select * from tmp_insert_test_p where ds= '2009-08-01'
 order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tmp_insert_test_p
 POSTHOOK: Input: default@tmp_insert_test_p@ds=2009-08-01
 #### A masked pattern was here ####
 0	val_0	2009-08-01
@@ -1048,11 +1050,13 @@ POSTHOOK: Output: default@tmp_insert_test_p@ds=2009-08-01
 PREHOOK: query: select * from tmp_insert_test_p where ds= '2009-08-01'
 order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tmp_insert_test_p
 PREHOOK: Input: default@tmp_insert_test_p@ds=2009-08-01
 #### A masked pattern was here ####
 POSTHOOK: query: select * from tmp_insert_test_p where ds= '2009-08-01'
 order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tmp_insert_test_p
 POSTHOOK: Input: default@tmp_insert_test_p@ds=2009-08-01
 #### A masked pattern was here ####
 0	val_0	2009-08-01
diff --git a/src/ql/src/test/results/clientpositive/input41.q.out b/src/ql/src/test/results/clientpositive/input41.q.out
index 1a815e2..6c0c6ac 100644
--- a/src/ql/src/test/results/clientpositive/input41.q.out
+++ b/src/ql/src/test/results/clientpositive/input41.q.out
@@ -11,6 +11,7 @@ select * from
   )x
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Output: default@dest_sp
 POSTHOOK: query: insert overwrite table dest_sp
 select * from 
@@ -20,6 +21,7 @@ select * from
   )x
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Output: default@dest_sp
 POSTHOOK: Lineage: dest_sp.cnt EXPRESSION [(src)src.null, (srcpart)srcpart.null, ]
 PREHOOK: query: select * from dest_sp x order by x.cnt limit 2
diff --git a/src/ql/src/test/results/clientpositive/input42.q.out b/src/ql/src/test/results/clientpositive/input42.q.out
index 45b2cc9..06fa1c0 100644
--- a/src/ql/src/test/results/clientpositive/input42.q.out
+++ b/src/ql/src/test/results/clientpositive/input42.q.out
@@ -175,11 +175,13 @@ STAGE PLANS:
 
 PREHOOK: query: select * from srcpart a where a.ds='2008-04-08' order by a.key, a.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpart a where a.ds='2008-04-08' order by a.key, a.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1365,11 +1367,13 @@ STAGE PLANS:
 
 PREHOOK: query: select * from srcpart a where a.ds='2008-04-08' and key < 200 order by a.key, a.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpart a where a.ds='2008-04-08' and key < 200 order by a.key, a.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1933,11 +1937,13 @@ STAGE PLANS:
 
 PREHOOK: query: select * from srcpart a where a.ds='2008-04-08' and rand(100) < 0.1 order by a.key, a.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpart a where a.ds='2008-04-08' and rand(100) < 0.1 order by a.key, a.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/input_part1.q.out b/src/ql/src/test/results/clientpositive/input_part1.q.out
index 29fe04d..304b976 100644
--- a/src/ql/src/test/results/clientpositive/input_part1.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part1.q.out
@@ -314,11 +314,13 @@ STAGE PLANS:
 PREHOOK: query: FROM srcpart
 INSERT OVERWRITE TABLE dest1 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
 POSTHOOK: query: FROM srcpart
 INSERT OVERWRITE TABLE dest1 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.ds SIMPLE [(srcpart)srcpart.FieldSchema(name:ds, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/input_part2.q.out b/src/ql/src/test/results/clientpositive/input_part2.q.out
index a1bd366..8deda18 100644
--- a/src/ql/src/test/results/clientpositive/input_part2.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part2.q.out
@@ -601,6 +601,7 @@ PREHOOK: query: FROM srcpart
 INSERT OVERWRITE TABLE dest1 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
 INSERT OVERWRITE TABLE dest2 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-09' and srcpart.hr = '12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@dest1
@@ -609,6 +610,7 @@ POSTHOOK: query: FROM srcpart
 INSERT OVERWRITE TABLE dest1 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-08' and srcpart.hr = '12'
 INSERT OVERWRITE TABLE dest2 SELECT srcpart.key, srcpart.value, srcpart.hr, srcpart.ds WHERE srcpart.key < 100 and srcpart.ds = '2008-04-09' and srcpart.hr = '12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/input_part5.q.out b/src/ql/src/test/results/clientpositive/input_part5.q.out
index 1076a77..61f433b 100644
--- a/src/ql/src/test/results/clientpositive/input_part5.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part5.q.out
@@ -113,12 +113,14 @@ STAGE PLANS:
 PREHOOK: query: insert overwrite table tmptable
 SELECT x.* FROM SRCPART x WHERE x.ds = '2008-04-08' and x.key < 100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tmptable
 POSTHOOK: query: insert overwrite table tmptable
 SELECT x.* FROM SRCPART x WHERE x.ds = '2008-04-08' and x.key < 100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tmptable
diff --git a/src/ql/src/test/results/clientpositive/input_part6.q.out b/src/ql/src/test/results/clientpositive/input_part6.q.out
index 8c9eb0a..8f52a34 100644
--- a/src/ql/src/test/results/clientpositive/input_part6.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part6.q.out
@@ -48,6 +48,7 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT x.* FROM SRCPART x WHERE x.ds = 2008-04-08 LIMIT 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -55,6 +56,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM SRCPART x WHERE x.ds = 2008-04-08 LIMIT 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/input_part7.q.out b/src/ql/src/test/results/clientpositive/input_part7.q.out
index 62a2357..66ed3fd 100644
--- a/src/ql/src/test/results/clientpositive/input_part7.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part7.q.out
@@ -264,6 +264,7 @@ PREHOOK: query: SELECT * FROM (
 ) A
 SORT BY A.key, A.value, A.ds, A.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -274,6 +275,7 @@ POSTHOOK: query: SELECT * FROM (
 ) A
 SORT BY A.key, A.value, A.ds, A.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/input_part9.q.out b/src/ql/src/test/results/clientpositive/input_part9.q.out
index bc5931c..a3df4a1 100644
--- a/src/ql/src/test/results/clientpositive/input_part9.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part9.q.out
@@ -180,11 +180,13 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT x.* FROM SRCPART x WHERE key IS NOT NULL AND ds = '2008-04-08' order by x.key, x.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT x.* FROM SRCPART x WHERE key IS NOT NULL AND ds = '2008-04-08' order by x.key, x.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/inputddl7.q.out b/src/ql/src/test/results/clientpositive/inputddl7.q.out
index 4cb83c0..c219644 100644
--- a/src/ql/src/test/results/clientpositive/inputddl7.q.out
+++ b/src/ql/src/test/results/clientpositive/inputddl7.q.out
@@ -60,10 +60,12 @@ POSTHOOK: Output: default@t3
 POSTHOOK: Output: default@t3@ds=2008-04-09
 PREHOOK: query: SELECT COUNT(1) FROM T3 where T3.ds='2008-04-09'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@t3
 PREHOOK: Input: default@t3@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT COUNT(1) FROM T3 where T3.ds='2008-04-09'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@t3
 POSTHOOK: Input: default@t3@ds=2008-04-09
 #### A masked pattern was here ####
 500
@@ -81,10 +83,12 @@ POSTHOOK: Output: default@t4
 POSTHOOK: Output: default@t4@ds=2008-04-09
 PREHOOK: query: SELECT COUNT(1) FROM T4 where T4.ds='2008-04-09'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@t4
 PREHOOK: Input: default@t4@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT COUNT(1) FROM T4 where T4.ds='2008-04-09'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@t4
 POSTHOOK: Input: default@t4@ds=2008-04-09
 #### A masked pattern was here ####
 500
diff --git a/src/ql/src/test/results/clientpositive/insert1_overwrite_partitions.q.out b/src/ql/src/test/results/clientpositive/insert1_overwrite_partitions.q.out
index fb19693..3a11764 100644
--- a/src/ql/src/test/results/clientpositive/insert1_overwrite_partitions.q.out
+++ b/src/ql/src/test/results/clientpositive/insert1_overwrite_partitions.q.out
@@ -123,21 +123,25 @@ STAGE PLANS:
 PREHOOK: query: INSERT OVERWRITE TABLE destinTable PARTITION (ds='2011-11-11', hr='11') if not exists
 SELECT one,two FROM sourceTable WHERE ds='2011-11-11' AND hr='11' order by one desc, two desc limit 5
 PREHOOK: type: QUERY
+PREHOOK: Input: default@sourcetable
 PREHOOK: Input: default@sourcetable@ds=2011-11-11/hr=11
 PREHOOK: Output: default@destintable@ds=2011-11-11/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE destinTable PARTITION (ds='2011-11-11', hr='11') if not exists
 SELECT one,two FROM sourceTable WHERE ds='2011-11-11' AND hr='11' order by one desc, two desc limit 5
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@sourcetable
 POSTHOOK: Input: default@sourcetable@ds=2011-11-11/hr=11
 POSTHOOK: Output: default@destintable@ds=2011-11-11/hr=11
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11,hr=11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11,hr=11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: select one,two from destinTable order by one desc, two desc
 PREHOOK: type: QUERY
+PREHOOK: Input: default@destintable
 PREHOOK: Input: default@destintable@ds=2011-11-11/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select one,two from destinTable order by one desc, two desc
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@destintable
 POSTHOOK: Input: default@destintable@ds=2011-11-11/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11,hr=11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
@@ -172,10 +176,12 @@ POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11,hr=11).one SIMPLE [(sourc
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11,hr=11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: select one,two from destinTable order by one desc, two desc
 PREHOOK: type: QUERY
+PREHOOK: Input: default@destintable
 PREHOOK: Input: default@destintable@ds=2011-11-11/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select one,two from destinTable order by one desc, two desc
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@destintable
 POSTHOOK: Input: default@destintable@ds=2011-11-11/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11,hr=11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
@@ -299,10 +305,12 @@ STAGE PLANS:
 
 PREHOOK: query: INSERT OVERWRITE TABLE destinTable SELECT one,two FROM sourceTable WHERE ds='2011-11-11' AND hr='11' order by one desc, two desc limit 5
 PREHOOK: type: QUERY
+PREHOOK: Input: default@sourcetable
 PREHOOK: Input: default@sourcetable@ds=2011-11-11/hr=11
 PREHOOK: Output: default@destintable
 POSTHOOK: query: INSERT OVERWRITE TABLE destinTable SELECT one,two FROM sourceTable WHERE ds='2011-11-11' AND hr='11' order by one desc, two desc limit 5
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@sourcetable
 POSTHOOK: Input: default@sourcetable@ds=2011-11-11/hr=11
 POSTHOOK: Output: default@destintable
 POSTHOOK: Lineage: destintable.one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out b/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out
index 1f8947f..cc6ce4f 100644
--- a/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out
+++ b/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out
@@ -129,21 +129,25 @@ STAGE PLANS:
 PREHOOK: query: INSERT OVERWRITE TABLE db2.destinTable PARTITION (ds='2011-11-11')
 SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two desc limit 5
 PREHOOK: type: QUERY
+PREHOOK: Input: db1@sourcetable
 PREHOOK: Input: db1@sourcetable@ds=2011-11-11
 PREHOOK: Output: db2@destintable@ds=2011-11-11
 POSTHOOK: query: INSERT OVERWRITE TABLE db2.destinTable PARTITION (ds='2011-11-11')
 SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two desc limit 5
 POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@sourcetable
 POSTHOOK: Input: db1@sourcetable@ds=2011-11-11
 POSTHOOK: Output: db2@destintable@ds=2011-11-11
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 PREHOOK: type: QUERY
+PREHOOK: Input: db2@destintable
 PREHOOK: Input: db2@destintable@ds=2011-11-11
 #### A masked pattern was here ####
 POSTHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 POSTHOOK: type: QUERY
+POSTHOOK: Input: db2@destintable
 POSTHOOK: Input: db2@destintable@ds=2011-11-11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
@@ -255,11 +259,13 @@ STAGE PLANS:
 PREHOOK: query: INSERT OVERWRITE TABLE db2.destinTable PARTITION (ds='2011-11-11')
 SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two desc limit 5
 PREHOOK: type: QUERY
+PREHOOK: Input: db1@sourcetable
 PREHOOK: Input: db1@sourcetable@ds=2011-11-11
 PREHOOK: Output: db2@destintable@ds=2011-11-11
 POSTHOOK: query: INSERT OVERWRITE TABLE db2.destinTable PARTITION (ds='2011-11-11')
 SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two desc limit 5
 POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@sourcetable
 POSTHOOK: Input: db1@sourcetable@ds=2011-11-11
 POSTHOOK: Output: db2@destintable@ds=2011-11-11
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
@@ -268,10 +274,12 @@ POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 PREHOOK: type: QUERY
+PREHOOK: Input: db2@destintable
 PREHOOK: Input: db2@destintable@ds=2011-11-11
 #### A masked pattern was here ####
 POSTHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 POSTHOOK: type: QUERY
+POSTHOOK: Input: db2@destintable
 POSTHOOK: Input: db2@destintable@ds=2011-11-11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/insert_into2.q.out b/src/ql/src/test/results/clientpositive/insert_into2.q.out
index de417aa..19358bd 100644
--- a/src/ql/src/test/results/clientpositive/insert_into2.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into2.q.out
@@ -105,10 +105,12 @@ POSTHOOK: Lineage: insert_into2 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSc
 POSTHOOK: Lineage: insert_into2 PARTITION(ds=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT COUNT(*) FROM insert_into2 WHERE ds='1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into2
 PREHOOK: Input: default@insert_into2@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT COUNT(*) FROM insert_into2 WHERE ds='1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into2
 POSTHOOK: Input: default@insert_into2@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: insert_into2 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -120,12 +122,14 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into2
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into2
 PREHOOK: Input: default@insert_into2@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into2
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into2
 POSTHOOK: Input: default@insert_into2@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: insert_into2 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -229,6 +233,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into2
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into2
 PREHOOK: Input: default@insert_into2@ds=1
 PREHOOK: Input: default@insert_into2@ds=2
 #### A masked pattern was here ####
@@ -236,6 +241,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into2
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into2
 POSTHOOK: Input: default@insert_into2@ds=1
 POSTHOOK: Input: default@insert_into2@ds=2
 #### A masked pattern was here ####
@@ -346,6 +352,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into2
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into2
 PREHOOK: Input: default@insert_into2@ds=1
 PREHOOK: Input: default@insert_into2@ds=2
 #### A masked pattern was here ####
@@ -353,6 +360,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into2
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into2
 POSTHOOK: Input: default@insert_into2@ds=1
 POSTHOOK: Input: default@insert_into2@ds=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/insert_into5.q.out b/src/ql/src/test/results/clientpositive/insert_into5.q.out
index 060ec10..533e0d5 100644
--- a/src/ql/src/test/results/clientpositive/insert_into5.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into5.q.out
@@ -349,12 +349,14 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into5b
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into5b
 PREHOOK: Input: default@insert_into5b@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into5b
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into5b
 POSTHOOK: Input: default@insert_into5b@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: insert_into5a.key SIMPLE []
@@ -472,11 +474,13 @@ STAGE PLANS:
 PREHOOK: query: INSERT INTO TABLE insert_into5b PARTITION (ds='1') 
   SELECT key, value FROM insert_into5b
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into5b
 PREHOOK: Input: default@insert_into5b@ds=1
 PREHOOK: Output: default@insert_into5b@ds=1
 POSTHOOK: query: INSERT INTO TABLE insert_into5b PARTITION (ds='1') 
   SELECT key, value FROM insert_into5b
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into5b
 POSTHOOK: Input: default@insert_into5b@ds=1
 POSTHOOK: Output: default@insert_into5b@ds=1
 POSTHOOK: Lineage: insert_into5a.key SIMPLE []
@@ -491,12 +495,14 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into5b
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into5b
 PREHOOK: Input: default@insert_into5b@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into5b
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into5b
 POSTHOOK: Input: default@insert_into5b@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: insert_into5a.key SIMPLE []
diff --git a/src/ql/src/test/results/clientpositive/insert_into6.q.out b/src/ql/src/test/results/clientpositive/insert_into6.q.out
index c44c5a9..db3fd2c 100644
--- a/src/ql/src/test/results/clientpositive/insert_into6.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into6.q.out
@@ -114,6 +114,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into6a
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into6a
 PREHOOK: Input: default@insert_into6a@ds=1
 PREHOOK: Input: default@insert_into6a@ds=2
 #### A masked pattern was here ####
@@ -121,6 +122,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into6a
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into6a
 POSTHOOK: Input: default@insert_into6a@ds=1
 POSTHOOK: Input: default@insert_into6a@ds=2
 #### A masked pattern was here ####
@@ -236,11 +238,13 @@ STAGE PLANS:
 
 PREHOOK: query: INSERT INTO TABLE insert_into6b PARTITION (ds) SELECT * FROM insert_into6a
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into6a
 PREHOOK: Input: default@insert_into6a@ds=1
 PREHOOK: Input: default@insert_into6a@ds=2
 PREHOOK: Output: default@insert_into6b
 POSTHOOK: query: INSERT INTO TABLE insert_into6b PARTITION (ds) SELECT * FROM insert_into6a
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into6a
 POSTHOOK: Input: default@insert_into6a@ds=1
 POSTHOOK: Input: default@insert_into6a@ds=2
 POSTHOOK: Output: default@insert_into6b@ds=1
@@ -257,6 +261,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into6b
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@insert_into6b
 PREHOOK: Input: default@insert_into6b@ds=1
 PREHOOK: Input: default@insert_into6b@ds=2
 #### A masked pattern was here ####
@@ -264,6 +269,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     SELECT TRANSFORM(*) USING 'tr \t _' AS (c) FROM insert_into6b
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@insert_into6b
 POSTHOOK: Input: default@insert_into6b@ds=1
 POSTHOOK: Input: default@insert_into6b@ds=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/join14_hadoop20.q.out b/src/ql/src/test/results/clientpositive/join14_hadoop20.q.out
index e176f67..ea0e274 100644
--- a/src/ql/src/test/results/clientpositive/join14_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/join14_hadoop20.q.out
@@ -115,6 +115,7 @@ PREHOOK: query: FROM src JOIN srcpart ON src.key = srcpart.key AND srcpart.ds =
 INSERT OVERWRITE TABLE dest1 SELECT src.key, srcpart.value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
@@ -122,6 +123,7 @@ POSTHOOK: query: FROM src JOIN srcpart ON src.key = srcpart.key AND srcpart.ds =
 INSERT OVERWRITE TABLE dest1 SELECT src.key, srcpart.value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/join26.q.out b/src/ql/src/test/results/clientpositive/join26.q.out
index 1feb15f..5d69f7b 100644
--- a/src/ql/src/test/results/clientpositive/join26.q.out
+++ b/src/ql/src/test/results/clientpositive/join26.q.out
@@ -372,6 +372,7 @@ JOIN srcpart z ON (x.key = z.key and z.ds='2008-04-08' and z.hr=11)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest_j1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
@@ -381,6 +382,7 @@ JOIN srcpart z ON (x.key = z.key and z.ds='2008-04-08' and z.hr=11)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest_j1
 POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/join28.q.out b/src/ql/src/test/results/clientpositive/join28.q.out
index 18c1647..10ef51d 100644
--- a/src/ql/src/test/results/clientpositive/join28.q.out
+++ b/src/ql/src/test/results/clientpositive/join28.q.out
@@ -198,6 +198,7 @@ FROM
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest_j1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1 
@@ -209,6 +210,7 @@ FROM
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest_j1
 POSTHOOK: Lineage: dest_j1.key EXPRESSION [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/join32.q.out b/src/ql/src/test/results/clientpositive/join32.q.out
index 6267c50..2952441 100644
--- a/src/ql/src/test/results/clientpositive/join32.q.out
+++ b/src/ql/src/test/results/clientpositive/join32.q.out
@@ -432,6 +432,7 @@ JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest_j1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
@@ -441,6 +442,7 @@ JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest_j1
 POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/join33.q.out b/src/ql/src/test/results/clientpositive/join33.q.out
index 92cbbb2..2c51f44 100644
--- a/src/ql/src/test/results/clientpositive/join33.q.out
+++ b/src/ql/src/test/results/clientpositive/join33.q.out
@@ -322,6 +322,7 @@ JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest_j1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
@@ -331,6 +332,7 @@ JOIN srcpart z ON (x.value = z.value and z.ds='2008-04-08' and z.hr=11)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest_j1
 POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/join9.q.out b/src/ql/src/test/results/clientpositive/join9.q.out
index b156908..0609650 100644
--- a/src/ql/src/test/results/clientpositive/join9.q.out
+++ b/src/ql/src/test/results/clientpositive/join9.q.out
@@ -234,12 +234,14 @@ PREHOOK: query: FROM srcpart src1 JOIN src src2 ON (src1.key = src2.key)
 INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value where src1.ds = '2008-04-08' and src1.hr = '12'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@dest1
 POSTHOOK: query: FROM srcpart src1 JOIN src src2 ON (src1.key = src2.key)
 INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value where src1.ds = '2008-04-08' and src1.hr = '12'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.key EXPRESSION [(srcpart)src1.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/join_empty.q.out b/src/ql/src/test/results/clientpositive/join_empty.q.out
index 96eddda..c8929bf 100644
--- a/src/ql/src/test/results/clientpositive/join_empty.q.out
+++ b/src/ql/src/test/results/clientpositive/join_empty.q.out
@@ -11,10 +11,12 @@ POSTHOOK: Output: default@src2_empty
 PREHOOK: query: select /*+mapjoin(a)*/ a.key, b.value from srcpart_empty a join src b on a.key=b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart_empty
 #### A masked pattern was here ####
 POSTHOOK: query: select /*+mapjoin(a)*/ a.key, b.value from srcpart_empty a join src b on a.key=b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart_empty
 #### A masked pattern was here ####
 PREHOOK: query: select /*+mapjoin(a)*/ a.key, b.value from src2_empty a join src b on a.key=b.key
 PREHOOK: type: QUERY
@@ -29,10 +31,12 @@ POSTHOOK: Input: default@src2_empty
 PREHOOK: query: select a.key, b.value from srcpart_empty a join src b on a.key=b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart_empty
 #### A masked pattern was here ####
 POSTHOOK: query: select a.key, b.value from srcpart_empty a join src b on a.key=b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart_empty
 #### A masked pattern was here ####
 PREHOOK: query: select a.key, b.value from src2_empty a join src b on a.key=b.key
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/join_map_ppr.q.out b/src/ql/src/test/results/clientpositive/join_map_ppr.q.out
index 98001e1..b9e13db 100644
--- a/src/ql/src/test/results/clientpositive/join_map_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/join_map_ppr.q.out
@@ -379,6 +379,7 @@ WHERE z.ds='2008-04-08' and z.hr=11
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest_j1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
@@ -389,6 +390,7 @@ WHERE z.ds='2008-04-08' and z.hr=11
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest_j1
 POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
@@ -979,6 +981,7 @@ WHERE z.ds='2008-04-08' and z.hr=11
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src1_copy
 PREHOOK: Input: default@src_copy
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest_j1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest_j1
@@ -989,6 +992,7 @@ WHERE z.ds='2008-04-08' and z.hr=11
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src1_copy
 POSTHOOK: Input: default@src_copy
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest_j1
 POSTHOOK: Lineage: dest_j1.key SIMPLE [(src1)x.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/lateral_view_ppd.q.out b/src/ql/src/test/results/clientpositive/lateral_view_ppd.q.out
index 5463364..c97a297 100644
--- a/src/ql/src/test/results/clientpositive/lateral_view_ppd.q.out
+++ b/src/ql/src/test/results/clientpositive/lateral_view_ppd.q.out
@@ -303,10 +303,12 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT value, myCol FROM (SELECT * FROM srcpart LATERAL VIEW explode(array(1,2,3)) myTable AS myCol) a WHERE ds='2008-04-08' AND hr="12" LIMIT 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT value, myCol FROM (SELECT * FROM srcpart LATERAL VIEW explode(array(1,2,3)) myTable AS myCol) a WHERE ds='2008-04-08' AND hr="12" LIMIT 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 val_238	1
diff --git a/src/ql/src/test/results/clientpositive/leftsemijoin.q.out b/src/ql/src/test/results/clientpositive/leftsemijoin.q.out
index 4425bd2..07c5a4d 100644
--- a/src/ql/src/test/results/clientpositive/leftsemijoin.q.out
+++ b/src/ql/src/test/results/clientpositive/leftsemijoin.q.out
@@ -52,11 +52,13 @@ Hank	2
 Joe	2
 PREHOOK: query: SELECT id,name FROM things ORDER BY id ASC, name ASC
 PREHOOK: type: QUERY
+PREHOOK: Input: default@things
 PREHOOK: Input: default@things@ds=2011-10-23
 PREHOOK: Input: default@things@ds=2011-10-24
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT id,name FROM things ORDER BY id ASC, name ASC
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@things
 POSTHOOK: Input: default@things@ds=2011-10-23
 POSTHOOK: Input: default@things@ds=2011-10-24
 #### A masked pattern was here ####
@@ -65,12 +67,14 @@ POSTHOOK: Input: default@things@ds=2011-10-24
 PREHOOK: query: SELECT name,id FROM sales LEFT SEMI JOIN things ON (sales.id = things.id) ORDER BY name ASC, id ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@sales
+PREHOOK: Input: default@things
 PREHOOK: Input: default@things@ds=2011-10-23
 PREHOOK: Input: default@things@ds=2011-10-24
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT name,id FROM sales LEFT SEMI JOIN things ON (sales.id = things.id) ORDER BY name ASC, id ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@sales
+POSTHOOK: Input: default@things
 POSTHOOK: Input: default@things@ds=2011-10-23
 POSTHOOK: Input: default@things@ds=2011-10-24
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out
index 4204e48..e93f0c9 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out
@@ -227,6 +227,7 @@ PREHOOK: query: from srcpart
 insert overwrite table nzhang_part1 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 insert overwrite table nzhang_part2 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -237,6 +238,7 @@ POSTHOOK: query: from srcpart
 insert overwrite table nzhang_part1 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 insert overwrite table nzhang_part2 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part10.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part10.q.out
index 3477f3e..254dce4 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part10.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part10.q.out
@@ -82,12 +82,14 @@ STAGE PLANS:
 PREHOOK: query: from srcpart
 insert overwrite table nzhang_part10 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part10@ds=2008-12-31
 POSTHOOK: query: from srcpart
 insert overwrite table nzhang_part10 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@nzhang_part10@ds=2008-12-31/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part11.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part11.q.out
index bcba1cd..50913c7 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part11.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part11.q.out
@@ -23,6 +23,7 @@ hr	string
 #### A masked pattern was here ####
 PREHOOK: query: insert overwrite table nzhang_part partition (ds="2010-03-03", hr) select key, value, hr from srcpart where ds is not null and hr is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -30,6 +31,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part@ds=2010-03-03
 POSTHOOK: query: insert overwrite table nzhang_part partition (ds="2010-03-03", hr) select key, value, hr from srcpart where ds is not null and hr is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part12.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part12.q.out
index d8970fe..e763cc6 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part12.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part12.q.out
@@ -23,6 +23,7 @@ hr	string
 #### A masked pattern was here ####
 PREHOOK: query: insert overwrite table nzhang_part12 partition (ds="2010-03-03", hr) select key, value, cast(hr*2 as int) from srcpart where ds is not null and hr is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -30,6 +31,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part12@ds=2010-03-03
 POSTHOOK: query: insert overwrite table nzhang_part12 partition (ds="2010-03-03", hr) select key, value, cast(hr*2 as int) from srcpart where ds is not null and hr is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out
index 99d7e24..8a5f5da 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out
@@ -303,12 +303,14 @@ value=__HIVE_DEFAULT_PARTITION__
 PREHOOK: query: select * from nzhang_part14 where value <> 'a'
 order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@nzhang_part14
 PREHOOK: Input: default@nzhang_part14@value= 
 PREHOOK: Input: default@nzhang_part14@value=__HIVE_DEFAULT_PARTITION__
 #### A masked pattern was here ####
 POSTHOOK: query: select * from nzhang_part14 where value <> 'a'
 order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@nzhang_part14
 POSTHOOK: Input: default@nzhang_part14@value= 
 POSTHOOK: Input: default@nzhang_part14@value=__HIVE_DEFAULT_PARTITION__
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part2.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part2.q.out
index ecbe7da..8d3ad15 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part2.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part2.q.out
@@ -90,6 +90,7 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table nzhang_part_bucket partition (ds='2010-03-23', hr) select key, value, hr from srcpart where ds is not null and hr is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -97,6 +98,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part_bucket@ds=2010-03-23
 POSTHOOK: query: insert overwrite table nzhang_part_bucket partition (ds='2010-03-23', hr) select key, value, hr from srcpart where ds is not null and hr is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -119,10 +121,12 @@ ds=2010-03-23/hr=11
 ds=2010-03-23/hr=12
 PREHOOK: query: select * from nzhang_part_bucket where ds='2010-03-23' and hr='11' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@nzhang_part_bucket
 PREHOOK: Input: default@nzhang_part_bucket@ds=2010-03-23/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select * from nzhang_part_bucket where ds='2010-03-23' and hr='11' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@nzhang_part_bucket
 POSTHOOK: Input: default@nzhang_part_bucket@ds=2010-03-23/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: nzhang_part_bucket PARTITION(ds=2010-03-23,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -1131,10 +1135,12 @@ POSTHOOK: Lineage: nzhang_part_bucket PARTITION(ds=2010-03-23,hr=12).value SIMPL
 98	val_98	2010-03-23	11
 PREHOOK: query: select * from nzhang_part_bucket where ds='2010-03-23' and hr='12' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@nzhang_part_bucket
 PREHOOK: Input: default@nzhang_part_bucket@ds=2010-03-23/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from nzhang_part_bucket where ds='2010-03-23' and hr='12' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@nzhang_part_bucket
 POSTHOOK: Input: default@nzhang_part_bucket@ds=2010-03-23/hr=12
 #### A masked pattern was here ####
 POSTHOOK: Lineage: nzhang_part_bucket PARTITION(ds=2010-03-23,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part3.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part3.q.out
index 0a689e6..77d3d8f 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part3.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part3.q.out
@@ -81,6 +81,7 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table nzhang_part3 partition (ds, hr) select key, value, ds, hr from srcpart where ds is not null and hr is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -88,6 +89,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part3
 POSTHOOK: query: insert overwrite table nzhang_part3 partition (ds, hr) select key, value, ds, hr from srcpart where ds is not null and hr is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part4.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part4.q.out
index 2fdc875..11f0120 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part4.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part4.q.out
@@ -93,6 +93,7 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table nzhang_part4 partition (ds, hr) select key, value, ds, hr from srcpart where ds is not null and hr is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -100,6 +101,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part4
 POSTHOOK: query: insert overwrite table nzhang_part4 partition (ds, hr) select key, value, ds, hr from srcpart where ds is not null and hr is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part6.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part6.q.out
index 2923320..4fe23b2 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part6.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part6.q.out
@@ -23,6 +23,7 @@ hr	string
 #### A masked pattern was here ####
 PREHOOK: query: insert overwrite table nzhang_part6 partition (ds="2010-03-03", hr) select key, value, hr from srcpart where ds is not null and hr is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -30,6 +31,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@nzhang_part6@ds=2010-03-03
 POSTHOOK: query: insert overwrite table nzhang_part6 partition (ds="2010-03-03", hr) select key, value, hr from srcpart where ds is not null and hr is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part7.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part7.q.out
index 9f642d2..9d48f40 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part7.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part7.q.out
@@ -23,10 +23,12 @@ hr	string
 #### A masked pattern was here ####
 PREHOOK: query: insert overwrite table nzhang_part7 partition (ds='2010-03-03', hr='12') select key, value from srcpart where ds = '2008-04-08' and hr = '12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@nzhang_part7@ds=2010-03-03/hr=12
 POSTHOOK: query: insert overwrite table nzhang_part7 partition (ds='2010-03-03', hr='12') select key, value from srcpart where ds = '2008-04-08' and hr = '12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@nzhang_part7@ds=2010-03-03/hr=12
 POSTHOOK: Lineage: nzhang_part7 PARTITION(ds=2010-03-03,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part8.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part8.q.out
index ac91714..11a7c83 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part8.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part8.q.out
@@ -393,6 +393,7 @@ PREHOOK: query: from srcpart
 insert overwrite table nzhang_part8 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 insert overwrite table nzhang_part8 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -403,6 +404,7 @@ POSTHOOK: query: from srcpart
 insert overwrite table nzhang_part8 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 insert overwrite table nzhang_part8 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part9.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part9.q.out
index 18e2596..003eb83 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part9.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part9.q.out
@@ -84,12 +84,14 @@ STAGE PLANS:
 PREHOOK: query: from srcpart
 insert overwrite table nzhang_part9 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@nzhang_part9
 POSTHOOK: query: from srcpart
 insert overwrite table nzhang_part9 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@nzhang_part9@ds=2008-04-08/hr=11
diff --git a/src/ql/src/test/results/clientpositive/lock2.q.out b/src/ql/src/test/results/clientpositive/lock2.q.out
index d0fe51d..1a6ab78 100644
--- a/src/ql/src/test/results/clientpositive/lock2.q.out
+++ b/src/ql/src/test/results/clientpositive/lock2.q.out
@@ -33,11 +33,13 @@ POSTHOOK: Lineage: tstsrc.value SIMPLE [(src)src.FieldSchema(name:value, type:st
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/lock3.q.out b/src/ql/src/test/results/clientpositive/lock3.q.out
index 4d0fe6c..f5bfa30 100644
--- a/src/ql/src/test/results/clientpositive/lock3.q.out
+++ b/src/ql/src/test/results/clientpositive/lock3.q.out
@@ -11,12 +11,14 @@ PREHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds='2008-04-08',hr='11')
 select key, value where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds='2008-04-08',hr='11')
 select key, value where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,12 +26,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart
 POSTHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
@@ -43,12 +47,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds ='2008-04-08', hr) select key, value, hr where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08
 POSTHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds ='2008-04-08', hr) select key, value, hr where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
@@ -141,12 +147,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: from srcpart
 insert overwrite table tst1 partition (a='1', b='2', c, d) select key, value, ds, hr where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tst1@a=1/b=2
 POSTHOOK: query: from srcpart
 insert overwrite table tst1 partition (a='1', b='2', c, d) select key, value, ds, hr where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tst1@a=1/b=2/c=2008-04-08/d=11
diff --git a/src/ql/src/test/results/clientpositive/lock4.q.out b/src/ql/src/test/results/clientpositive/lock4.q.out
index 4d0fe6c..f5bfa30 100644
--- a/src/ql/src/test/results/clientpositive/lock4.q.out
+++ b/src/ql/src/test/results/clientpositive/lock4.q.out
@@ -11,12 +11,14 @@ PREHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds='2008-04-08',hr='11')
 select key, value where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds='2008-04-08',hr='11')
 select key, value where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -24,12 +26,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcp
 PREHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart
 POSTHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
@@ -43,12 +47,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds ='2008-04-08', hr) select key, value, hr where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08
 POSTHOOK: query: from srcpart
 insert overwrite table tstsrcpart partition (ds ='2008-04-08', hr) select key, value, hr where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=11
@@ -141,12 +147,14 @@ POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcp
 PREHOOK: query: from srcpart
 insert overwrite table tst1 partition (a='1', b='2', c, d) select key, value, ds, hr where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tst1@a=1/b=2
 POSTHOOK: query: from srcpart
 insert overwrite table tst1 partition (a='1', b='2', c, d) select key, value, ds, hr where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tst1@a=1/b=2/c=2008-04-08/d=11
diff --git a/src/ql/src/test/results/clientpositive/louter_join_ppr.q.out b/src/ql/src/test/results/clientpositive/louter_join_ppr.q.out
index ae2e967..417f11b 100644
--- a/src/ql/src/test/results/clientpositive/louter_join_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/louter_join_ppr.q.out
@@ -274,6 +274,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -286,6 +287,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -680,6 +682,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -694,6 +697,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1085,6 +1089,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND b.ds = '2008-04-08'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1099,6 +1104,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND b.ds = '2008-04-08'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1394,6 +1400,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND a.ds = '2008-04-08'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1406,6 +1413,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND a.ds = '2008-04-08'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/mapjoin1.q.out b/src/ql/src/test/results/clientpositive/mapjoin1.q.out
index 0a13758..bf39a3e 100644
--- a/src/ql/src/test/results/clientpositive/mapjoin1.q.out
+++ b/src/ql/src/test/results/clientpositive/mapjoin1.q.out
@@ -3,6 +3,7 @@ PREHOOK: query: SELECT  /*+ MAPJOIN(b) */ sum(a.key) as sum_a
 	JOIN src b ON a.key = b.key where a.ds is not null
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -13,6 +14,7 @@ POSTHOOK: query: SELECT  /*+ MAPJOIN(b) */ sum(a.key) as sum_a
 	JOIN src b ON a.key = b.key where a.ds is not null
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out b/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
index 3af79de..88c9275 100644
--- a/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
@@ -156,6 +156,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -164,6 +165,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -306,6 +308,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -314,6 +317,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -478,6 +482,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -486,6 +491,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -621,6 +627,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -629,6 +636,7 @@ JOIN srcpart d
 ON ( c.key=d.key AND c.ds='2008-04-08' AND d.ds='2008-04-08')
 SELECT /*+ MAPJOIN(d) */ DISTINCT c.value as value order by value limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/mapjoin_hook.q.out b/src/ql/src/test/results/clientpositive/mapjoin_hook.q.out
index 5384b90..6f54d6c 100644
--- a/src/ql/src/test/results/clientpositive/mapjoin_hook.q.out
+++ b/src/ql/src/test/results/clientpositive/mapjoin_hook.q.out
@@ -20,6 +20,7 @@ INSERT OVERWRITE TABLE dest1 SELECT src1.key, src2.value
 where (src1.ds = '2008-04-08' or src1.ds = '2008-04-09' )and (src1.hr = '12' or src1.hr = '11')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/mapjoin_mapjoin.q.out b/src/ql/src/test/results/clientpositive/mapjoin_mapjoin.q.out
index 243abfb..691b669 100644
--- a/src/ql/src/test/results/clientpositive/mapjoin_mapjoin.q.out
+++ b/src/ql/src/test/results/clientpositive/mapjoin_mapjoin.q.out
@@ -305,6 +305,7 @@ STAGE PLANS:
 PREHOOK: query: select /*+MAPJOIN(src, src1) */ count(*) from srcpart join src src on (srcpart.value=src.value) join src src1 on (srcpart.key=src1.key) group by ds
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -313,6 +314,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: select /*+MAPJOIN(src, src1) */ count(*) from srcpart join src src on (srcpart.value=src.value) join src src1 on (srcpart.key=src1.key) group by ds
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/mapjoin_subquery.q.out b/src/ql/src/test/results/clientpositive/mapjoin_subquery.q.out
index 1c423d6..82b8ceb 100644
--- a/src/ql/src/test/results/clientpositive/mapjoin_subquery.q.out
+++ b/src/ql/src/test/results/clientpositive/mapjoin_subquery.q.out
@@ -132,6 +132,7 @@ FROM
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(z) */ subq.key1, z.value
@@ -142,6 +143,7 @@ FROM
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 238	val_238
@@ -413,6 +415,7 @@ FROM
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(z) */ subq.key1, z.value
@@ -424,6 +427,7 @@ FROM
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 128	val_128
diff --git a/src/ql/src/test/results/clientpositive/merge1.q.out b/src/ql/src/test/results/clientpositive/merge1.q.out
index 7199dca..6522d1a 100644
--- a/src/ql/src/test/results/clientpositive/merge1.q.out
+++ b/src/ql/src/test/results/clientpositive/merge1.q.out
@@ -629,11 +629,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table dest1 select key from test_src
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_src
 PREHOOK: Input: default@test_src@ds=101
 PREHOOK: Input: default@test_src@ds=102
 PREHOOK: Output: default@dest1
 POSTHOOK: query: insert overwrite table dest1 select key from test_src
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_src
 POSTHOOK: Input: default@test_src@ds=101
 POSTHOOK: Input: default@test_src@ds=102
 POSTHOOK: Output: default@dest1
@@ -748,11 +750,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table dest1 select key from test_src
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_src
 PREHOOK: Input: default@test_src@ds=101
 PREHOOK: Input: default@test_src@ds=102
 PREHOOK: Output: default@dest1
 POSTHOOK: query: insert overwrite table dest1 select key from test_src
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_src
 POSTHOOK: Input: default@test_src@ds=101
 POSTHOOK: Input: default@test_src@ds=102
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/merge2.q.out b/src/ql/src/test/results/clientpositive/merge2.q.out
index 65707fd..252017f 100644
--- a/src/ql/src/test/results/clientpositive/merge2.q.out
+++ b/src/ql/src/test/results/clientpositive/merge2.q.out
@@ -629,11 +629,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table test1 select key from test_src
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_src
 PREHOOK: Input: default@test_src@ds=101
 PREHOOK: Input: default@test_src@ds=102
 PREHOOK: Output: default@test1
 POSTHOOK: query: insert overwrite table test1 select key from test_src
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_src
 POSTHOOK: Input: default@test_src@ds=101
 POSTHOOK: Input: default@test_src@ds=102
 POSTHOOK: Output: default@test1
@@ -748,11 +750,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table test1 select key from test_src
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_src
 PREHOOK: Input: default@test_src@ds=101
 PREHOOK: Input: default@test_src@ds=102
 PREHOOK: Output: default@test1
 POSTHOOK: query: insert overwrite table test1 select key from test_src
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_src
 POSTHOOK: Input: default@test_src@ds=101
 POSTHOOK: Input: default@test_src@ds=102
 POSTHOOK: Output: default@test1
diff --git a/src/ql/src/test/results/clientpositive/merge3.q.out b/src/ql/src/test/results/clientpositive/merge3.q.out
index 91061fa..996901e 100644
--- a/src/ql/src/test/results/clientpositive/merge3.q.out
+++ b/src/ql/src/test/results/clientpositive/merge3.q.out
@@ -1,6 +1,7 @@
 PREHOOK: query: create table merge_src as 
 select key, value from srcpart where ds is not null
 PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -8,6 +9,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: create table merge_src as 
 select key, value from srcpart where ds is not null
 POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -20,6 +22,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@merge_src_part
 PREHOOK: query: insert overwrite table merge_src_part partition(ds) select key, value, ds from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -27,6 +30,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@merge_src_part
 POSTHOOK: query: insert overwrite table merge_src_part partition(ds) select key, value, ds from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -2706,6 +2710,7 @@ PREHOOK: query: insert overwrite table merge_src_part2 partition(ds)
 select key, value, ds from merge_src_part
 where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_src_part
 PREHOOK: Input: default@merge_src_part@ds=2008-04-08
 PREHOOK: Input: default@merge_src_part@ds=2008-04-09
 PREHOOK: Output: default@merge_src_part2
@@ -2713,6 +2718,7 @@ POSTHOOK: query: insert overwrite table merge_src_part2 partition(ds)
 select key, value, ds from merge_src_part
 where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_src_part
 POSTHOOK: Input: default@merge_src_part@ds=2008-04-08
 POSTHOOK: Input: default@merge_src_part@ds=2008-04-09
 POSTHOOK: Output: default@merge_src_part2@ds=2008-04-08
@@ -2741,11 +2747,13 @@ ds=2008-04-08
 ds=2008-04-09
 PREHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_src_part2
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-08
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_src_part2
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-08
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-09
 #### A masked pattern was here ####
@@ -5170,6 +5178,7 @@ PREHOOK: query: from (select * from merge_src_part where ds is not null distribu
 insert overwrite table merge_src_part2 partition(ds)
 select key, value, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_src_part
 PREHOOK: Input: default@merge_src_part@ds=2008-04-08
 PREHOOK: Input: default@merge_src_part@ds=2008-04-09
 PREHOOK: Output: default@merge_src_part2
@@ -5177,6 +5186,7 @@ POSTHOOK: query: from (select * from merge_src_part where ds is not null distrib
 insert overwrite table merge_src_part2 partition(ds)
 select key, value, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_src_part
 POSTHOOK: Input: default@merge_src_part@ds=2008-04-08
 POSTHOOK: Input: default@merge_src_part@ds=2008-04-09
 POSTHOOK: Output: default@merge_src_part2@ds=2008-04-08
@@ -5213,11 +5223,13 @@ ds=2008-04-08
 ds=2008-04-09
 PREHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_src_part2
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-08
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_src_part2
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-08
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-09
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/merge4.q.out b/src/ql/src/test/results/clientpositive/merge4.q.out
index 072515d..2633a63 100644
--- a/src/ql/src/test/results/clientpositive/merge4.q.out
+++ b/src/ql/src/test/results/clientpositive/merge4.q.out
@@ -107,11 +107,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table nzhang_part partition (ds='2010-08-15', hr) select key, value, hr from srcpart where ds='2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@nzhang_part@ds=2010-08-15
 POSTHOOK: query: insert overwrite table nzhang_part partition (ds='2010-08-15', hr) select key, value, hr from srcpart where ds='2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@nzhang_part@ds=2010-08-15/hr=11
@@ -1240,11 +1242,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table nzhang_part partition (ds='2010-08-15', hr=11) select key, value from srcpart where ds='2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@nzhang_part@ds=2010-08-15/hr=11
 POSTHOOK: query: insert overwrite table nzhang_part partition (ds='2010-08-15', hr=11) select key, value from srcpart where ds='2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@nzhang_part@ds=2010-08-15/hr=11
@@ -2960,6 +2964,7 @@ select * from (
     select '1' as key, '1' as value, 'file,' as hr from src limit 1) s
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@nzhang_part@ds=2010-08-15
@@ -2970,6 +2975,7 @@ select * from (
     select '1' as key, '1' as value, 'file,' as hr from src limit 1) s
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@nzhang_part@ds=2010-08-15/hr=11
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
index 99cace8..a9bfc87 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
@@ -91,20 +91,24 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds='2008-04-08', hr) select key, value, hr from srcpart_merge_dp where ds='2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Output: default@merge_dynamic_part@ds=2008-04-08
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds='2008-04-08', hr) select key, value, hr from srcpart_merge_dp where ds='2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select * from merge_dynamic_part order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_dynamic_part
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select * from merge_dynamic_part order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_dynamic_part
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:key, type:string, comment:default), ]
@@ -732,10 +736,12 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds='2008-04-08', hr=11) select key, value from srcpart_merge_dp where ds='2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds='2008-04-08', hr=11) select key, value from srcpart_merge_dp where ds='2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:key, type:string, comment:default), ]
@@ -744,10 +750,12 @@ POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select * from merge_dynamic_part order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_dynamic_part
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select * from merge_dynamic_part order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_dynamic_part
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:key, type:string, comment:default), ]
@@ -1385,10 +1393,12 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds, hr) select key, value, ds, hr from srcpart_merge_dp where ds='2008-04-08' and hr=11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Output: default@merge_dynamic_part
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds, hr) select key, value, ds, hr from srcpart_merge_dp where ds='2008-04-08' and hr=11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:key, type:string, comment:default), ]
@@ -1399,10 +1409,12 @@ POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select * from merge_dynamic_part order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_dynamic_part
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select * from merge_dynamic_part order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_dynamic_part
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
index 14211ae..c2231ea 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
@@ -150,11 +150,13 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds='2008-04-08', hr) select key, value, hr from srcpart_merge_dp where ds='2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 PREHOOK: Output: default@merge_dynamic_part@ds=2008-04-08
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds='2008-04-08', hr) select key, value, hr from srcpart_merge_dp where ds='2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=11
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
index d5a5474..7eaeac0 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
@@ -198,6 +198,7 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds, hr) select key, value, ds, hr from srcpart_merge_dp where ds>='2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-09/hr=11
@@ -205,6 +206,7 @@ PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-09/hr=12
 PREHOOK: Output: default@merge_dynamic_part
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds, hr) select key, value, ds, hr from srcpart_merge_dp where ds>='2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-09/hr=11
@@ -223,6 +225,7 @@ POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-09,hr=12).key SIMPLE
 POSTHOOK: Lineage: merge_dynamic_part PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart_merge_dp)srcpart_merge_dp.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select ds, hr, count(1) from merge_dynamic_part where ds>='2008-04-08' group by ds, hr order by ds, hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_dynamic_part
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=12
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-09/hr=11
@@ -230,6 +233,7 @@ PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select ds, hr, count(1) from merge_dynamic_part where ds>='2008-04-08' group by ds, hr order by ds, hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_dynamic_part
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition4.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition4.q.out
index 5c4230d..1f8ce49 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition4.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition4.q.out
@@ -88,12 +88,14 @@ POSTHOOK: Output: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 PREHOOK: query: insert overwrite table srcpart_merge_dp_rc partition (ds = '2008-04-08', hr) 
 select key, value, hr from srcpart_merge_dp where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_merge_dp_rc@ds=2008-04-08
 POSTHOOK: query: insert overwrite table srcpart_merge_dp_rc partition (ds = '2008-04-08', hr) 
 select key, value, hr from srcpart_merge_dp where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=11
@@ -193,12 +195,14 @@ STAGE PLANS:
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds = '2008-04-08', hr)
 select key, value, if(key % 2 == 0, 'a1', 'b1') as hr from srcpart_merge_dp_rc where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp_rc
 PREHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=12
 PREHOOK: Output: default@merge_dynamic_part@ds=2008-04-08
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds = '2008-04-08', hr)
 select key, value, if(key % 2 == 0, 'a1', 'b1') as hr from srcpart_merge_dp_rc where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp_rc
 POSTHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=a1
@@ -227,11 +231,13 @@ ds=2008-04-08/hr=a1
 ds=2008-04-08/hr=b1
 PREHOOK: query: select count(*) from merge_dynamic_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_dynamic_part
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=a1
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=b1
 #### A masked pattern was here ####
 POSTHOOK: query: select count(*) from merge_dynamic_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_dynamic_part
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=a1
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=b1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition5.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition5.q.out
index 2abb156..f3489f6 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition5.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition5.q.out
@@ -68,12 +68,14 @@ POSTHOOK: Output: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 PREHOOK: query: insert overwrite table srcpart_merge_dp_rc partition (ds = '2008-04-08', hr) 
 select key, value, hr from srcpart_merge_dp where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 PREHOOK: Output: default@srcpart_merge_dp_rc@ds=2008-04-08
 POSTHOOK: query: insert overwrite table srcpart_merge_dp_rc partition (ds = '2008-04-08', hr) 
 select key, value, hr from srcpart_merge_dp where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_merge_dp@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=11
@@ -173,12 +175,14 @@ STAGE PLANS:
 PREHOOK: query: insert overwrite table merge_dynamic_part partition (ds = '2008-04-08', hr)
 select key, value, if(key % 100 == 0, 'a1', 'b1') as hr from srcpart_merge_dp_rc where ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart_merge_dp_rc
 PREHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=12
 PREHOOK: Output: default@merge_dynamic_part@ds=2008-04-08
 POSTHOOK: query: insert overwrite table merge_dynamic_part partition (ds = '2008-04-08', hr)
 select key, value, if(key % 100 == 0, 'a1', 'b1') as hr from srcpart_merge_dp_rc where ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart_merge_dp_rc
 POSTHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart_merge_dp_rc@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@merge_dynamic_part@ds=2008-04-08/hr=a1
@@ -207,11 +211,13 @@ ds=2008-04-08/hr=a1
 ds=2008-04-08/hr=b1
 PREHOOK: query: select count(*) from merge_dynamic_part
 PREHOOK: type: QUERY
+PREHOOK: Input: default@merge_dynamic_part
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=a1
 PREHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=b1
 #### A masked pattern was here ####
 POSTHOOK: query: select count(*) from merge_dynamic_part
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@merge_dynamic_part
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=a1
 POSTHOOK: Input: default@merge_dynamic_part@ds=2008-04-08/hr=b1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/metadataonly1.q.out b/src/ql/src/test/results/clientpositive/metadataonly1.q.out
index 7ccabb6..b3836d5 100644
--- a/src/ql/src/test/results/clientpositive/metadataonly1.q.out
+++ b/src/ql/src/test/results/clientpositive/metadataonly1.q.out
@@ -77,9 +77,11 @@ STAGE PLANS:
 
 PREHOOK: query: select max(ds) from TEST1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 #### A masked pattern was here ####
 POSTHOOK: query: select max(ds) from TEST1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 #### A masked pattern was here ####
 
 PREHOOK: query: alter table TEST1 add partition (ds='1')
@@ -204,10 +206,12 @@ STAGE PLANS:
 
 PREHOOK: query: select max(ds) from TEST1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 PREHOOK: Input: default@test1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: select max(ds) from TEST1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 POSTHOOK: Input: default@test1@ds=1
 #### A masked pattern was here ####
 1
@@ -332,10 +336,12 @@ STAGE PLANS:
 
 PREHOOK: query: select count(distinct ds) from TEST1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 PREHOOK: Input: default@test1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: select count(distinct ds) from TEST1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 POSTHOOK: Input: default@test1@ds=1
 #### A masked pattern was here ####
 1
@@ -454,10 +460,12 @@ STAGE PLANS:
 
 PREHOOK: query: select count(ds) from TEST1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 PREHOOK: Input: default@test1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: select count(ds) from TEST1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 POSTHOOK: Input: default@test1@ds=1
 #### A masked pattern was here ####
 0
@@ -838,11 +846,13 @@ STAGE PLANS:
 
 PREHOOK: query: select count(*) from TEST1 a2 join (select max(ds) m from TEST1) b on a2.ds=b.m
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 PREHOOK: Input: default@test1@ds=1
 PREHOOK: Input: default@test1@ds=2
 #### A masked pattern was here ####
 POSTHOOK: query: select count(*) from TEST1 a2 join (select max(ds) m from TEST1) b on a2.ds=b.m
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 POSTHOOK: Input: default@test1@ds=1
 POSTHOOK: Input: default@test1@ds=2
 #### A masked pattern was here ####
@@ -1087,12 +1097,14 @@ STAGE PLANS:
 
 PREHOOK: query: select ds, count(distinct hr) from TEST2 group by ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test2
 PREHOOK: Input: default@test2@ds=1/hr=1
 PREHOOK: Input: default@test2@ds=1/hr=2
 PREHOOK: Input: default@test2@ds=1/hr=3
 #### A masked pattern was here ####
 POSTHOOK: query: select ds, count(distinct hr) from TEST2 group by ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test2
 POSTHOOK: Input: default@test2@ds=1/hr=1
 POSTHOOK: Input: default@test2@ds=1/hr=2
 POSTHOOK: Input: default@test2@ds=1/hr=3
@@ -1306,12 +1318,14 @@ STAGE PLANS:
 
 PREHOOK: query: select ds, count(hr) from TEST2 group by ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test2
 PREHOOK: Input: default@test2@ds=1/hr=1
 PREHOOK: Input: default@test2@ds=1/hr=2
 PREHOOK: Input: default@test2@ds=1/hr=3
 #### A masked pattern was here ####
 POSTHOOK: query: select ds, count(hr) from TEST2 group by ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test2
 POSTHOOK: Input: default@test2@ds=1/hr=1
 POSTHOOK: Input: default@test2@ds=1/hr=2
 POSTHOOK: Input: default@test2@ds=1/hr=3
@@ -1469,17 +1483,20 @@ STAGE PLANS:
 
 PREHOOK: query: select max(ds) from TEST1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 PREHOOK: Input: default@test1@ds=1
 PREHOOK: Input: default@test1@ds=2
 #### A masked pattern was here ####
 POSTHOOK: query: select max(ds) from TEST1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 POSTHOOK: Input: default@test1@ds=1
 POSTHOOK: Input: default@test1@ds=2
 #### A masked pattern was here ####
 2
 PREHOOK: query: select distinct ds from srcpart
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1487,6 +1504,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select distinct ds from srcpart
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1496,6 +1514,7 @@ POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 2008-04-09
 PREHOOK: query: select min(ds),max(ds) from srcpart
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1503,6 +1522,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select min(ds),max(ds) from srcpart
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/mi.q.out b/src/ql/src/test/results/clientpositive/mi.q.out
index 0aab2f3..8de6cf7 100644
--- a/src/ql/src/test/results/clientpositive/mi.q.out
+++ b/src/ql/src/test/results/clientpositive/mi.q.out
@@ -17,6 +17,7 @@ SELECT key, value, ds, hr
 WHERE ds = '2008-04-08' and hr = '12'
 GROUP BY key, value, ds, hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@nzhang_t1
@@ -30,6 +31,7 @@ SELECT key, value, ds, hr
 WHERE ds = '2008-04-08' and hr = '12'
 GROUP BY key, value, ds, hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@nzhang_t1@ds=2008-04-08/hr=11
diff --git a/src/ql/src/test/results/clientpositive/nonmr_fetch.q.out b/src/ql/src/test/results/clientpositive/nonmr_fetch.q.out
index ba87df5..1fc6eae 100644
--- a/src/ql/src/test/results/clientpositive/nonmr_fetch.q.out
+++ b/src/ql/src/test/results/clientpositive/nonmr_fetch.q.out
@@ -202,6 +202,7 @@ STAGE PLANS:
 
 PREHOOK: query: select * from srcpart where key > 100 limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -209,6 +210,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpart where key > 100 limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/nullgroup3.q.out b/src/ql/src/test/results/clientpositive/nullgroup3.q.out
index 46b199c..7757a62 100644
--- a/src/ql/src/test/results/clientpositive/nullgroup3.q.out
+++ b/src/ql/src/test/results/clientpositive/nullgroup3.q.out
@@ -76,11 +76,13 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from tstparttbl
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstparttbl
 PREHOOK: Input: default@tstparttbl@ds=2008-04-08
 PREHOOK: Input: default@tstparttbl@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from tstparttbl
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstparttbl
 POSTHOOK: Input: default@tstparttbl@ds=2008-04-08
 POSTHOOK: Input: default@tstparttbl@ds=2008-04-09
 #### A masked pattern was here ####
@@ -163,11 +165,13 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from tstparttbl2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstparttbl2
 PREHOOK: Input: default@tstparttbl2@ds=2008-04-08
 PREHOOK: Input: default@tstparttbl2@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from tstparttbl2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstparttbl2
 POSTHOOK: Input: default@tstparttbl2@ds=2008-04-08
 POSTHOOK: Input: default@tstparttbl2@ds=2008-04-09
 #### A masked pattern was here ####
@@ -258,11 +262,13 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from tstparttbl
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstparttbl
 PREHOOK: Input: default@tstparttbl@ds=2008-04-08
 PREHOOK: Input: default@tstparttbl@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from tstparttbl
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstparttbl
 POSTHOOK: Input: default@tstparttbl@ds=2008-04-08
 POSTHOOK: Input: default@tstparttbl@ds=2008-04-09
 #### A masked pattern was here ####
@@ -353,11 +359,13 @@ STAGE PLANS:
 
 PREHOOK: query: select count(1) from tstparttbl2
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstparttbl2
 PREHOOK: Input: default@tstparttbl2@ds=2008-04-08
 PREHOOK: Input: default@tstparttbl2@ds=2008-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from tstparttbl2
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstparttbl2
 POSTHOOK: Input: default@tstparttbl2@ds=2008-04-08
 POSTHOOK: Input: default@tstparttbl2@ds=2008-04-09
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/nullgroup5.q.out b/src/ql/src/test/results/clientpositive/nullgroup5.q.out
index e8823f8..2dc7bf0 100644
--- a/src/ql/src/test/results/clientpositive/nullgroup5.q.out
+++ b/src/ql/src/test/results/clientpositive/nullgroup5.q.out
@@ -114,6 +114,8 @@ PREHOOK: query: select u.* from
   select key, value from tstparttbl2 y where y.ds='2009-04-09'
 )u
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstparttbl
+PREHOOK: Input: default@tstparttbl2
 PREHOOK: Input: default@tstparttbl2@ds=2009-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select u.* from
@@ -123,6 +125,8 @@ POSTHOOK: query: select u.* from
   select key, value from tstparttbl2 y where y.ds='2009-04-09'
 )u
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstparttbl
+POSTHOOK: Input: default@tstparttbl2
 POSTHOOK: Input: default@tstparttbl2@ds=2009-04-09
 #### A masked pattern was here ####
 238	val_238
diff --git a/src/ql/src/test/results/clientpositive/nullinput2.q.out b/src/ql/src/test/results/clientpositive/nullinput2.q.out
index b7ec402..af0bec5 100644
--- a/src/ql/src/test/results/clientpositive/nullinput2.q.out
+++ b/src/ql/src/test/results/clientpositive/nullinput2.q.out
@@ -5,14 +5,18 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@nulltbl
 PREHOOK: query: select key from nulltbl where ds='101'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@nulltbl
 #### A masked pattern was here ####
 POSTHOOK: query: select key from nulltbl where ds='101'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@nulltbl
 #### A masked pattern was here ####
 PREHOOK: query: select count(1) from nulltbl where ds='101'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@nulltbl
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from nulltbl where ds='101'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@nulltbl
 #### A masked pattern was here ####
 0
diff --git a/src/ql/src/test/results/clientpositive/outer_join_ppr.q.out b/src/ql/src/test/results/clientpositive/outer_join_ppr.q.out
index 13ffa44..a3c6d70 100644
--- a/src/ql/src/test/results/clientpositive/outer_join_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/outer_join_ppr.q.out
@@ -367,6 +367,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -381,6 +382,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -762,6 +764,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND b.ds = '2008-04-08'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -776,6 +779,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND b.ds = '2008-04-08'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/partcols1.q.out b/src/ql/src/test/results/clientpositive/partcols1.q.out
index b3460e7..77f5b32 100644
--- a/src/ql/src/test/results/clientpositive/partcols1.q.out
+++ b/src/ql/src/test/results/clientpositive/partcols1.q.out
@@ -28,6 +28,7 @@ SELECT TRANSFORM(
 
  USING 'cat' as (a,b,c,d)
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test1
 PREHOOK: Input: default@test1@partitionid=1
 #### A masked pattern was here ####
 POSTHOOK: query: FROM (
@@ -44,6 +45,7 @@ SELECT TRANSFORM(
 
  USING 'cat' as (a,b,c,d)
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test1
 POSTHOOK: Input: default@test1@partitionid=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: test1 PARTITION(partitionid=1).col1 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/partition_serde_format.q.out b/src/ql/src/test/results/clientpositive/partition_serde_format.q.out
index db73bdb..92f6518 100644
--- a/src/ql/src/test/results/clientpositive/partition_serde_format.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_serde_format.q.out
@@ -25,10 +25,12 @@ POSTHOOK: Lineage: src_part_serde PARTITION(ds=2011).key EXPRESSION [(src)src.Fi
 POSTHOOK: Lineage: src_part_serde PARTITION(ds=2011).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select key, value from src_part_serde where ds='2011' order by key, value limit 20
 PREHOOK: type: QUERY
+PREHOOK: Input: default@src_part_serde
 PREHOOK: Input: default@src_part_serde@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from src_part_serde where ds='2011' order by key, value limit 20
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src_part_serde
 POSTHOOK: Input: default@src_part_serde@ds=2011
 #### A masked pattern was here ####
 POSTHOOK: Lineage: src_part_serde PARTITION(ds=2011).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/partition_special_char.q.out b/src/ql/src/test/results/clientpositive/partition_special_char.q.out
index 1b3e98d..5013fa0 100644
--- a/src/ql/src/test/results/clientpositive/partition_special_char.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_special_char.q.out
@@ -45,12 +45,14 @@ ts=2011-01-11+15%3A18%3A26
 ts=2011-01-11+16%3A18%3A26
 PREHOOK: query: select count(*) from sc_part where ts is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@sc_part
 PREHOOK: Input: default@sc_part@ts=2011-01-11+14%3A18%3A26
 PREHOOK: Input: default@sc_part@ts=2011-01-11+15%3A18%3A26
 PREHOOK: Input: default@sc_part@ts=2011-01-11+16%3A18%3A26
 #### A masked pattern was here ####
 POSTHOOK: query: select count(*) from sc_part where ts is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@sc_part
 POSTHOOK: Input: default@sc_part@ts=2011-01-11+14%3A18%3A26
 POSTHOOK: Input: default@sc_part@ts=2011-01-11+15%3A18%3A26
 POSTHOOK: Input: default@sc_part@ts=2011-01-11+16%3A18%3A26
@@ -90,12 +92,14 @@ ts=2011-01-11+15%3A18%3A26
 ts=2011-01-11+16%3A18%3A26
 PREHOOK: query: select count(*) from sc_part where ts is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@sc_part
 PREHOOK: Input: default@sc_part@ts=2011-01-11+14%3A18%3A26
 PREHOOK: Input: default@sc_part@ts=2011-01-11+15%3A18%3A26
 PREHOOK: Input: default@sc_part@ts=2011-01-11+16%3A18%3A26
 #### A masked pattern was here ####
 POSTHOOK: query: select count(*) from sc_part where ts is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@sc_part
 POSTHOOK: Input: default@sc_part@ts=2011-01-11+14%3A18%3A26
 POSTHOOK: Input: default@sc_part@ts=2011-01-11+15%3A18%3A26
 POSTHOOK: Input: default@sc_part@ts=2011-01-11+16%3A18%3A26
diff --git a/src/ql/src/test/results/clientpositive/partition_vs_table_metadata.q.out b/src/ql/src/test/results/clientpositive/partition_vs_table_metadata.q.out
index 35aa09d..cd5e8e6 100644
--- a/src/ql/src/test/results/clientpositive/partition_vs_table_metadata.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_vs_table_metadata.q.out
@@ -39,12 +39,14 @@ POSTHOOK: Lineage: partition_vs_table PARTITION(ds=101).value SIMPLE [(src)src.F
 PREHOOK: query: select key, value, newcol from partition_vs_table
 order by key, value, newcol
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_vs_table
 PREHOOK: Input: default@partition_vs_table@ds=100
 PREHOOK: Input: default@partition_vs_table@ds=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, newcol from partition_vs_table
 order by key, value, newcol
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_vs_table
 POSTHOOK: Input: default@partition_vs_table@ds=100
 POSTHOOK: Input: default@partition_vs_table@ds=101
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/partition_wise_fileformat.q.out b/src/ql/src/test/results/clientpositive/partition_wise_fileformat.q.out
index f330c73..0146e2e 100644
--- a/src/ql/src/test/results/clientpositive/partition_wise_fileformat.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_wise_fileformat.q.out
@@ -53,10 +53,12 @@ minFileSize:216
 
 PREHOOK: query: select key from partition_test_partitioned where dt=100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -88,10 +90,12 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -208,10 +212,12 @@ minFileSize:275
 
 PREHOOK: query: select key from partition_test_partitioned where dt=100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -245,10 +251,12 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned where dt=101
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=101
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -282,11 +290,13 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
@@ -464,10 +474,12 @@ minFileSize:888
 
 PREHOOK: query: select key from partition_test_partitioned where dt=100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -503,10 +515,12 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned where dt=101
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=101
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -542,10 +556,12 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned where dt=102
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=102
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=100).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -581,12 +597,14 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
@@ -674,12 +692,14 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(s
 
 PREHOOK: query: select key from partition_test_partitioned where dt >=100 and dt <= 102
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=100
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt >=100 and dt <= 102
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=100
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
diff --git a/src/ql/src/test/results/clientpositive/partition_wise_fileformat3.q.out b/src/ql/src/test/results/clientpositive/partition_wise_fileformat3.q.out
index f2cb7ff..5a32a20 100644
--- a/src/ql/src/test/results/clientpositive/partition_wise_fileformat3.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_wise_fileformat3.q.out
@@ -85,10 +85,12 @@ minFileSize:888
 
 PREHOOK: query: select key from partition_test_partitioned where dt=102
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=102
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -159,10 +161,12 @@ minFileSize:888
 
 PREHOOK: query: select key from partition_test_partitioned where dt=101
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select key from partition_test_partitioned where dt=101
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/partition_wise_fileformat5.q.out b/src/ql/src/test/results/clientpositive/partition_wise_fileformat5.q.out
index 1c3fe33..36b5fca 100644
--- a/src/ql/src/test/results/clientpositive/partition_wise_fileformat5.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_wise_fileformat5.q.out
@@ -45,11 +45,13 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).key SIMPLE [(src
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=102).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
 POSTHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
@@ -75,12 +77,14 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=103).key SIMPLE [(src
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=103).value SIMPLE [(src1)src1.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 PREHOOK: Input: default@partition_test_partitioned@dt=103
 #### A masked pattern was here ####
 POSTHOOK: query: select dt, count(1) from partition_test_partitioned where dt is not null group by dt
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
 POSTHOOK: Input: default@partition_test_partitioned@dt=103
diff --git a/src/ql/src/test/results/clientpositive/partition_wise_fileformat6.q.out b/src/ql/src/test/results/clientpositive/partition_wise_fileformat6.q.out
index 2bf9334..fda54d7 100644
--- a/src/ql/src/test/results/clientpositive/partition_wise_fileformat6.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_wise_fileformat6.q.out
@@ -48,6 +48,7 @@ PREHOOK: query: select count(1) from
  union all
 select key, value from partition_test_partitioned where dt=101 and key < 20)s
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from
@@ -55,6 +56,7 @@ POSTHOOK: query: select count(1) from
  union all
 select key, value from partition_test_partitioned where dt=101 and key < 20)s
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -67,6 +69,7 @@ PREHOOK: query: select count(1) from
  union all
 select key, value from partition_test_partitioned where dt=102 and key < 20)s
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 PREHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
@@ -75,6 +78,7 @@ POSTHOOK: query: select count(1) from
  union all
 select key, value from partition_test_partitioned where dt=102 and key < 20)s
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 POSTHOOK: Input: default@partition_test_partitioned@dt=102
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/partition_wise_fileformat7.q.out b/src/ql/src/test/results/clientpositive/partition_wise_fileformat7.q.out
index 82058fd..8164d1b 100644
--- a/src/ql/src/test/results/clientpositive/partition_wise_fileformat7.q.out
+++ b/src/ql/src/test/results/clientpositive/partition_wise_fileformat7.q.out
@@ -24,11 +24,13 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(s
 PREHOOK: query: select count(1) from partition_test_partitioned  a join partition_test_partitioned  b on a.key = b.key
 where a.dt = '101' and b.dt = '101'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from partition_test_partitioned  a join partition_test_partitioned  b on a.key = b.key
 where a.dt = '101' and b.dt = '101'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
@@ -37,11 +39,13 @@ POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).value SIMPLE [(s
 PREHOOK: query: select count(1) from partition_test_partitioned  a join partition_test_partitioned  b on a.key = b.key
 where a.dt = '101' and b.dt = '101' and a.key < 100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@partition_test_partitioned
 PREHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from partition_test_partitioned  a join partition_test_partitioned  b on a.key = b.key
 where a.dt = '101' and b.dt = '101' and a.key < 100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@partition_test_partitioned
 POSTHOOK: Input: default@partition_test_partitioned@dt=101
 #### A masked pattern was here ####
 POSTHOOK: Lineage: partition_test_partitioned PARTITION(dt=101).key SIMPLE [(src1)src1.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/pcr.q.out b/src/ql/src/test/results/clientpositive/pcr.q.out
index 674bac6..e170a31 100644
--- a/src/ql/src/test/results/clientpositive/pcr.q.out
+++ b/src/ql/src/test/results/clientpositive/pcr.q.out
@@ -231,11 +231,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds from pcr_t1 where ds<='2000-04-09' and key<5 order by key, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds from pcr_t1 where ds<='2000-04-09' and key<5 order by key, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
@@ -476,12 +478,14 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value from pcr_t1 where ds<='2000-04-09' or key<5 order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from pcr_t1 where ds<='2000-04-09' or key<5 order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -717,11 +721,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds from pcr_t1 where ds<='2000-04-09' and key<5 and value != 'val_2' order by key, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds from pcr_t1 where ds<='2000-04-09' and key<5 and value != 'val_2' order by key, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
@@ -924,12 +930,14 @@ STAGE PLANS:
 PREHOOK: query: select key, value, ds from pcr_t1
 where (ds < '2000-04-09' and key < 5) or (ds > '2000-04-09' and value == 'val_5') order by key, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds from pcr_t1
 where (ds < '2000-04-09' and key < 5) or (ds > '2000-04-09' and value == 'val_5') order by key, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
 #### A masked pattern was here ####
@@ -1179,6 +1187,7 @@ STAGE PLANS:
 PREHOOK: query: select key, value, ds from pcr_t1
 where (ds < '2000-04-10' and key < 5) or (ds > '2000-04-08' and value == 'val_5') order by key, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -1186,6 +1195,7 @@ PREHOOK: Input: default@pcr_t1@ds=2000-04-10
 POSTHOOK: query: select key, value, ds from pcr_t1
 where (ds < '2000-04-10' and key < 5) or (ds > '2000-04-08' and value == 'val_5') order by key, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -1444,6 +1454,7 @@ STAGE PLANS:
 PREHOOK: query: select key, value, ds from pcr_t1
 where (ds < '2000-04-10' or key < 5) and (ds > '2000-04-08' or value == 'val_5') order by key, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -1451,6 +1462,7 @@ PREHOOK: Input: default@pcr_t1@ds=2000-04-10
 POSTHOOK: query: select key, value, ds from pcr_t1
 where (ds < '2000-04-10' or key < 5) and (ds > '2000-04-08' or value == 'val_5') order by key, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -1665,11 +1677,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value from pcr_t1 where (ds='2000-04-08' or ds='2000-04-09') and key=14 order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from pcr_t1 where (ds='2000-04-08' or ds='2000-04-09') and key=14 order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
@@ -1850,11 +1864,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value from pcr_t1 where ds='2000-04-08' or ds='2000-04-09' order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from pcr_t1 where ds='2000-04-08' or ds='2000-04-09' order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
@@ -2122,12 +2138,14 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value from pcr_t1 where ds>='2000-04-08' or ds<'2000-04-10' order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from pcr_t1 where ds>='2000-04-08' or ds<'2000-04-10' order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -2380,11 +2398,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds from pcr_t1 where (ds='2000-04-08' and key=1) or (ds='2000-04-09' and key=2) order by key, value, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds from pcr_t1 where (ds='2000-04-08' and key=1) or (ds='2000-04-09' and key=2) order by key, value, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
@@ -2621,10 +2641,12 @@ STAGE PLANS:
 
 PREHOOK: query: select * from pcr_t1 t1 join pcr_t1 t2 on t1.key=t2.key and t1.ds='2000-04-08' and t2.ds='2000-04-08' order by t1.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: select * from pcr_t1 t1 join pcr_t1 t2 on t1.key=t2.key and t1.ds='2000-04-08' and t2.ds='2000-04-08' order by t1.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 #### A masked pattern was here ####
 POSTHOOK: Lineage: pcr_t1 PARTITION(ds=2000-04-08).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -2944,11 +2966,13 @@ STAGE PLANS:
 
 PREHOOK: query: select * from pcr_t1 t1 join pcr_t1 t2 on t1.key=t2.key and t1.ds='2000-04-08' and t2.ds='2000-04-09' order by t1.key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
 POSTHOOK: query: select * from pcr_t1 t1 join pcr_t1 t2 on t1.key=t2.key and t1.ds='2000-04-08' and t2.ds='2000-04-09' order by t1.key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 #### A masked pattern was here ####
@@ -3290,6 +3314,7 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds from pcr_t1 where (ds>'2000-04-08' and ds<'2000-04-11') or (ds>='2000-04-08' and ds<='2000-04-11' and key=2) order by key, value, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -3297,6 +3322,7 @@ PREHOOK: Input: default@pcr_t1@ds=2000-04-11
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds from pcr_t1 where (ds>'2000-04-08' and ds<'2000-04-11') or (ds>='2000-04-08' and ds<='2000-04-11' and key=2) order by key, value, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -3583,12 +3609,14 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds from pcr_t1 where (ds>'2000-04-08' and ds<'2000-04-11') or (ds<='2000-04-09' and key=2) order by key, value, ds
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Input: default@pcr_t1@ds=2000-04-09
 PREHOOK: Input: default@pcr_t1@ds=2000-04-10
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds from pcr_t1 where (ds>'2000-04-08' and ds<'2000-04-11') or (ds<='2000-04-09' and key=2) order by key, value, ds
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-09
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-10
@@ -4180,6 +4208,7 @@ PREHOOK: query: from pcr_t1
 insert overwrite table pcr_t2 select key, value where ds='2000-04-08'
 insert overwrite table pcr_t3 select key, value where ds='2000-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Output: default@pcr_t2
 PREHOOK: Output: default@pcr_t3
@@ -4187,6 +4216,7 @@ POSTHOOK: query: from pcr_t1
 insert overwrite table pcr_t2 select key, value where ds='2000-04-08'
 insert overwrite table pcr_t3 select key, value where ds='2000-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Output: default@pcr_t2
 POSTHOOK: Output: default@pcr_t3
@@ -4808,6 +4838,7 @@ PREHOOK: query: from pcr_t1
 insert overwrite table pcr_t2 select key, value where ds='2000-04-08' and key=2
 insert overwrite table pcr_t3 select key, value where ds='2000-04-08' and key=3
 PREHOOK: type: QUERY
+PREHOOK: Input: default@pcr_t1
 PREHOOK: Input: default@pcr_t1@ds=2000-04-08
 PREHOOK: Output: default@pcr_t2
 PREHOOK: Output: default@pcr_t3
@@ -4815,6 +4846,7 @@ POSTHOOK: query: from pcr_t1
 insert overwrite table pcr_t2 select key, value where ds='2000-04-08' and key=2
 insert overwrite table pcr_t3 select key, value where ds='2000-04-08' and key=3
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@pcr_t1
 POSTHOOK: Input: default@pcr_t1@ds=2000-04-08
 POSTHOOK: Output: default@pcr_t2
 POSTHOOK: Output: default@pcr_t3
@@ -4968,9 +5000,11 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value from srcpart where ds='2008-04-04' and hr=11 order by key limit 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value from srcpart where ds='2008-04-04' and hr=11 order by key limit 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 #### A masked pattern was here ####
 POSTHOOK: Lineage: pcr_t1 PARTITION(ds=2000-04-08).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: pcr_t1 PARTITION(ds=2000-04-08).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
@@ -5186,11 +5220,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds, hr from srcpart where ds='2008-04-08' and (hr='11' or hr='12') and key=11 order by key, ds, hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds, hr from srcpart where ds='2008-04-08' and (hr='11' or hr='12') and key=11 order by key, ds, hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -5410,11 +5446,13 @@ STAGE PLANS:
 
 PREHOOK: query: select key, value, ds, hr from srcpart where hr='11' and key=11 order by key, ds, hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select key, value, ds, hr from srcpart where hr='11' and key=11 order by key, ds, hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/ppd2.q.out b/src/ql/src/test/results/clientpositive/ppd2.q.out
index 6c8437a..65ba807 100644
--- a/src/ql/src/test/results/clientpositive/ppd2.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd2.q.out
@@ -158,6 +158,7 @@ from (
   sort by a.key,a.cc desc) b
 where b.cc>1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select b.key,b.cc
@@ -173,6 +174,7 @@ from (
   sort by a.key,a.cc desc) b
 where b.cc>1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 0	3
@@ -658,6 +660,7 @@ from (
   sort by a.key,a.cc desc) b
 where b.cc>1
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select b.key,b.cc
@@ -673,6 +676,7 @@ from (
   sort by a.key,a.cc desc) b
 where b.cc>1
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 0	3
diff --git a/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out b/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out
index 416ba33..1ff3349 100644
--- a/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out
@@ -192,6 +192,7 @@ WHERE a.ds = '2008-04-08' AND
        END
 ORDER BY a.key, a.value, a.ds, a.hr, b.key, b.value, b.ds, b.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -207,6 +208,7 @@ WHERE a.ds = '2008-04-08' AND
        END
 ORDER BY a.key, a.value, a.ds, a.hr, b.key, b.value, b.ds, b.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -404,6 +406,7 @@ WHERE a.ds = '2008-04-08' AND
        END
 ORDER BY a.key, a.value, a.ds, a.hr, b.key, b.value, b.ds, b.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -419,6 +422,7 @@ WHERE a.ds = '2008-04-08' AND
        END
 ORDER BY a.key, a.value, a.ds, a.hr, b.key, b.value, b.ds, b.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/ppd_union_view.q.out b/src/ql/src/test/results/clientpositive/ppd_union_view.q.out
index 626808f..ac74d7a 100644
--- a/src/ql/src/test/results/clientpositive/ppd_union_view.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_union_view.q.out
@@ -502,13 +502,19 @@ STAGE PLANS:
 PREHOOK: query: select * from t1 where ds = '2011-10-13'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
+PREHOOK: Input: default@t1_mapping
 PREHOOK: Input: default@t1_mapping@ds=2011-10-13
+PREHOOK: Input: default@t1_new
+PREHOOK: Input: default@t1_old
 PREHOOK: Input: default@t1_old@ds=2011-10-13
 #### A masked pattern was here ####
 POSTHOOK: query: select * from t1 where ds = '2011-10-13'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
+POSTHOOK: Input: default@t1_mapping
 POSTHOOK: Input: default@t1_mapping@ds=2011-10-13
+POSTHOOK: Input: default@t1_new
+POSTHOOK: Input: default@t1_old
 POSTHOOK: Input: default@t1_old@ds=2011-10-13
 #### A masked pattern was here ####
 POSTHOOK: Lineage: t1_mapping PARTITION(ds=2011-10-13).key SIMPLE []
@@ -527,13 +533,19 @@ key3	value3	2011-10-13
 PREHOOK: query: select * from t1 where ds = '2011-10-14'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
+PREHOOK: Input: default@t1_mapping
 PREHOOK: Input: default@t1_mapping@ds=2011-10-14
+PREHOOK: Input: default@t1_new
+PREHOOK: Input: default@t1_old
 PREHOOK: Input: default@t1_old@ds=2011-10-14
 #### A masked pattern was here ####
 POSTHOOK: query: select * from t1 where ds = '2011-10-14'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
+POSTHOOK: Input: default@t1_mapping
 POSTHOOK: Input: default@t1_mapping@ds=2011-10-14
+POSTHOOK: Input: default@t1_new
+POSTHOOK: Input: default@t1_old
 POSTHOOK: Input: default@t1_old@ds=2011-10-14
 #### A masked pattern was here ####
 POSTHOOK: Lineage: t1_mapping PARTITION(ds=2011-10-13).key SIMPLE []
@@ -835,12 +847,18 @@ STAGE PLANS:
 PREHOOK: query: select * from t1 where ds = '2011-10-15'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
+PREHOOK: Input: default@t1_mapping
+PREHOOK: Input: default@t1_new
 PREHOOK: Input: default@t1_new@ds=2011-10-15
+PREHOOK: Input: default@t1_old
 #### A masked pattern was here ####
 POSTHOOK: query: select * from t1 where ds = '2011-10-15'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
+POSTHOOK: Input: default@t1_mapping
+POSTHOOK: Input: default@t1_new
 POSTHOOK: Input: default@t1_new@ds=2011-10-15
+POSTHOOK: Input: default@t1_old
 #### A masked pattern was here ####
 POSTHOOK: Lineage: t1_mapping PARTITION(ds=2011-10-13).key SIMPLE []
 POSTHOOK: Lineage: t1_mapping PARTITION(ds=2011-10-13).keymap SIMPLE []
@@ -858,12 +876,18 @@ key1	value1	2011-10-15
 PREHOOK: query: select * from t1 where ds = '2011-10-16'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
+PREHOOK: Input: default@t1_mapping
+PREHOOK: Input: default@t1_new
 PREHOOK: Input: default@t1_new@ds=2011-10-16
+PREHOOK: Input: default@t1_old
 #### A masked pattern was here ####
 POSTHOOK: query: select * from t1 where ds = '2011-10-16'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
+POSTHOOK: Input: default@t1_mapping
+POSTHOOK: Input: default@t1_new
 POSTHOOK: Input: default@t1_new@ds=2011-10-16
+POSTHOOK: Input: default@t1_old
 #### A masked pattern was here ####
 POSTHOOK: Lineage: t1_mapping PARTITION(ds=2011-10-13).key SIMPLE []
 POSTHOOK: Lineage: t1_mapping PARTITION(ds=2011-10-13).keymap SIMPLE []
diff --git a/src/ql/src/test/results/clientpositive/ppr_allchildsarenull.q.out b/src/ql/src/test/results/clientpositive/ppr_allchildsarenull.q.out
index 241ab71..38e4558 100644
--- a/src/ql/src/test/results/clientpositive/ppr_allchildsarenull.q.out
+++ b/src/ql/src/test/results/clientpositive/ppr_allchildsarenull.q.out
@@ -175,6 +175,7 @@ PREHOOK: query: SELECT
    THEN 1
    ELSE 0  end ) > 0
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -186,6 +187,7 @@ POSTHOOK: query: SELECT
    THEN 1
    ELSE 0  end ) > 0
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -462,6 +464,7 @@ PREHOOK: query: SELECT
    THEN 1
    ELSE 0  end ) > 0
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -475,6 +478,7 @@ POSTHOOK: query: SELECT
    THEN 1
    ELSE 0  end ) > 0
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/ppr_pushdown.q.out b/src/ql/src/test/results/clientpositive/ppr_pushdown.q.out
index f949e86..7eb85a3 100644
--- a/src/ql/src/test/results/clientpositive/ppr_pushdown.q.out
+++ b/src/ql/src/test/results/clientpositive/ppr_pushdown.q.out
@@ -161,10 +161,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=1234).key EXPRESSION []
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 PREHOOK: query: select * from ppr_test where ds = '1234' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=1234
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '1234' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=1234
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -179,10 +181,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	1234
 PREHOOK: query: select * from ppr_test where ds = '1224' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=1224
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '1224' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=1224
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -197,10 +201,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	1224
 PREHOOK: query: select * from ppr_test where ds = '1214' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=1214
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '1214' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=1214
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -215,10 +221,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	1214
 PREHOOK: query: select * from ppr_test where ds = '12.4' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12.4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12.4' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12.4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -233,10 +241,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	12.4
 PREHOOK: query: select * from ppr_test where ds = '12+4' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12+4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12+4' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12+4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -251,10 +261,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	12+4
 PREHOOK: query: select * from ppr_test where ds = '12:4' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12%3A4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12:4' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12%3A4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -269,10 +281,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	12:4
 PREHOOK: query: select * from ppr_test where ds = '12%4' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12%254
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12%4' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12%254
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -287,10 +301,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	12%4
 PREHOOK: query: select * from ppr_test where ds = '12*4' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12%2A4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12*4' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12%2A4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -305,9 +321,11 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 abcd	12*4
 PREHOOK: query: select * from ppr_test where ds = '12.*4' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12.*4' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12*4).key EXPRESSION []
@@ -319,10 +337,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=1234).key EXPRESSION []
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 PREHOOK: query: select * from ppr_test where ds = '1234' and key = '1234'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=1234
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '1234' and key = '1234'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=1234
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -336,10 +356,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 1234	1234
 PREHOOK: query: select * from ppr_test where ds = '1224' and key = '1224'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=1224
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '1224' and key = '1224'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=1224
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -353,10 +375,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 1224	1224
 PREHOOK: query: select * from ppr_test where ds = '1214' and key = '1214'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=1214
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '1214' and key = '1214'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=1214
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -370,10 +394,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 1214	1214
 PREHOOK: query: select * from ppr_test where ds = '12.4' and key = '12.4'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12.4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12.4' and key = '12.4'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12.4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -387,10 +413,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 12.4	12.4
 PREHOOK: query: select * from ppr_test where ds = '12+4' and key = '12+4'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12+4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12+4' and key = '12+4'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12+4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -404,10 +432,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 12+4	12+4
 PREHOOK: query: select * from ppr_test where ds = '12:4' and key = '12:4'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12%3A4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12:4' and key = '12:4'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12%3A4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -421,10 +451,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 12:4	12:4
 PREHOOK: query: select * from ppr_test where ds = '12%4' and key = '12%4'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12%254
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12%4' and key = '12%4'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12%254
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
@@ -438,10 +470,12 @@ POSTHOOK: Lineage: ppr_test PARTITION(ds=12:4).key EXPRESSION []
 12%4	12%4
 PREHOOK: query: select * from ppr_test where ds = '12*4' and key = '12*4'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ppr_test
 PREHOOK: Input: default@ppr_test@ds=12%2A4
 #### A masked pattern was here ####
 POSTHOOK: query: select * from ppr_test where ds = '12*4' and key = '12*4'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ppr_test
 POSTHOOK: Input: default@ppr_test@ds=12%2A4
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ppr_test PARTITION(ds=12%4).key EXPRESSION []
diff --git a/src/ql/src/test/results/clientpositive/ppr_pushdown3.q.out b/src/ql/src/test/results/clientpositive/ppr_pushdown3.q.out
index fa91f75..ac4cdc5 100644
--- a/src/ql/src/test/results/clientpositive/ppr_pushdown3.q.out
+++ b/src/ql/src/test/results/clientpositive/ppr_pushdown3.q.out
@@ -45,6 +45,7 @@ STAGE PLANS:
 
 PREHOOK: query: select * from srcpart where key < 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -52,6 +53,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpart where key < 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -2179,6 +2181,7 @@ STAGE PLANS:
 
 PREHOOK: query: select key from srcpart
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -2186,6 +2189,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select key from srcpart
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/protectmode.q.out b/src/ql/src/test/results/clientpositive/protectmode.q.out
index a3aa692..c67e06c 100644
--- a/src/ql/src/test/results/clientpositive/protectmode.q.out
+++ b/src/ql/src/test/results/clientpositive/protectmode.q.out
@@ -224,10 +224,12 @@ POSTHOOK: Input: default@tbl2@p=p2
 #### A masked pattern was here ####
 PREHOOK: query: select col from tbl2 where p='p2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tbl2
 PREHOOK: Input: default@tbl2@p=p2
 #### A masked pattern was here ####
 POSTHOOK: query: select col from tbl2 where p='p2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tbl2
 POSTHOOK: Input: default@tbl2@p=p2
 #### A masked pattern was here ####
 PREHOOK: query: alter table tbl2 partition (p='p1') disable offline
@@ -257,18 +259,22 @@ POSTHOOK: Input: default@tbl2@p=p1
 #### A masked pattern was here ####
 PREHOOK: query: select col from tbl2 where p='p1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tbl2
 PREHOOK: Input: default@tbl2@p=p1
 #### A masked pattern was here ####
 POSTHOOK: query: select col from tbl2 where p='p1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tbl2
 POSTHOOK: Input: default@tbl2@p=p1
 #### A masked pattern was here ####
 PREHOOK: query: insert overwrite table tbl1 select col from tbl2 where p='p1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tbl2
 PREHOOK: Input: default@tbl2@p=p1
 PREHOOK: Output: default@tbl1
 POSTHOOK: query: insert overwrite table tbl1 select col from tbl2 where p='p1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tbl2
 POSTHOOK: Input: default@tbl2@p=p1
 POSTHOOK: Output: default@tbl1
 POSTHOOK: Lineage: tbl1.col SIMPLE [(tbl2)tbl2.FieldSchema(name:col, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out b/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
index bab3a82..9fd6422 100644
--- a/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
+++ b/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
@@ -2988,10 +2988,12 @@ POSTHOOK: Lineage: default__tbl_tbl_key_idx__._offsets EXPRESSION [(tbl)tbl.Fiel
 POSTHOOK: Lineage: default__tbl_tbl_key_idx__.key SIMPLE [(tbl)tbl.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-08', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tblpart@ds=2008-04-08/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-08', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tblpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3006,10 +3008,12 @@ POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-08,hr=11).key EXPRESSION [(srcpa
 POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-08', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tblpart@ds=2008-04-08/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-08', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-08' AND hr = 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tblpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3026,10 +3030,12 @@ POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-08,hr=12).key EXPRESSION [(srcpa
 POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-08,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-09', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 11
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@tblpart@ds=2008-04-09/hr=11
 POSTHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-09', hr=11) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 11
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@tblpart@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3048,10 +3054,12 @@ POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=11).key EXPRESSION [(srcpa
 POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-09', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 12
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@tblpart@ds=2008-04-09/hr=12
 POSTHOOK: query: INSERT OVERWRITE TABLE tblpart PARTITION (ds='2008-04-09', hr=12) SELECT key, value FROM srcpart WHERE ds = '2008-04-09' AND hr = 12
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@tblpart@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3093,10 +3101,12 @@ POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(srcpa
 POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-08', hr=11) REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@tblpart
 PREHOOK: Input: default@tblpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-08/hr=11
 POSTHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-08', hr=11) REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@tblpart
 POSTHOOK: Input: default@tblpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3218,10 +3228,12 @@ STAGE PLANS:
 
 PREHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-08', hr=12) REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@tblpart
 PREHOOK: Input: default@tblpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-08/hr=12
 POSTHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-08', hr=12) REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@tblpart
 POSTHOOK: Input: default@tblpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3250,10 +3262,12 @@ POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(srcpa
 POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-09', hr=11) REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@tblpart
 PREHOOK: Input: default@tblpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-09/hr=11
 POSTHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-09', hr=11) REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@tblpart
 POSTHOOK: Input: default@tblpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-09/hr=11
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
@@ -3286,10 +3300,12 @@ POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=12).key EXPRESSION [(srcpa
 POSTHOOK: Lineage: tblpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-09', hr=12) REBUILD
 PREHOOK: type: ALTERINDEX_REBUILD
+PREHOOK: Input: default@tblpart
 PREHOOK: Input: default@tblpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-09/hr=12
 POSTHOOK: query: ALTER INDEX tbl_part_index ON tblpart PARTITION (ds='2008-04-09', hr=12) REBUILD
 POSTHOOK: type: ALTERINDEX_REBUILD
+POSTHOOK: Input: default@tblpart
 POSTHOOK: Input: default@tblpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@default__tblpart_tbl_part_index__@ds=2008-04-09/hr=12
 POSTHOOK: Lineage: default__lineitem_lineitem_lshipdate_idx__._bucketname SIMPLE [(lineitem)lineitem.FieldSchema(name:INPUT__FILE__NAME, type:string, comment:), ]
diff --git a/src/ql/src/test/results/clientpositive/quote1.q.out b/src/ql/src/test/results/clientpositive/quote1.q.out
index dbf674b..5c78eff 100644
--- a/src/ql/src/test/results/clientpositive/quote1.q.out
+++ b/src/ql/src/test/results/clientpositive/quote1.q.out
@@ -174,10 +174,12 @@ POSTHOOK: Lineage: dest1 PARTITION(table=2008-04-08).location EXPRESSION [(src)s
 POSTHOOK: Lineage: dest1 PARTITION(table=2008-04-08).type SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT `int`.`location`, `int`.`type`, `int`.`table` FROM dest1 `int` WHERE `int`.`table` = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@dest1
 PREHOOK: Input: default@dest1@table=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT `int`.`location`, `int`.`type`, `int`.`table` FROM dest1 `int` WHERE `int`.`table` = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dest1
 POSTHOOK: Input: default@dest1@table=2008-04-08
 #### A masked pattern was here ####
 POSTHOOK: Lineage: dest1 PARTITION(table=2008-04-08).location EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out b/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out
index f40d75a..3828edb 100644
--- a/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out
+++ b/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out
@@ -355,12 +355,14 @@ STAGE PLANS:
 PREHOOK: query: insert overwrite table tmptable
 select a.* from srcpart a where rand(1) < 0.1 and a.ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tmptable
 POSTHOOK: query: insert overwrite table tmptable
 select a.* from srcpart a where rand(1) < 0.1 and a.ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tmptable
diff --git a/src/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out b/src/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out
index c07830f..c830792 100644
--- a/src/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out
+++ b/src/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out
@@ -115,10 +115,12 @@ STAGE PLANS:
 
 PREHOOK: query: select a.* from srcpart a where rand(1) < 0.1 and a.ds = '2008-04-08' and not(key > 50 or key < 10) and a.hr like '%2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select a.* from srcpart a where rand(1) < 0.1 and a.ds = '2008-04-08' and not(key > 50 or key < 10) and a.hr like '%2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 42	val_42	2008-04-08	12
@@ -241,10 +243,12 @@ STAGE PLANS:
 
 PREHOOK: query: select a.* from srcpart a where a.ds = '2008-04-08' and not(key > 50 or key < 10) and a.hr like '%2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select a.* from srcpart a where a.ds = '2008-04-08' and not(key > 50 or key < 10) and a.hr like '%2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
 27	val_27	2008-04-08	12
diff --git a/src/ql/src/test/results/clientpositive/rcfile_createas1.q.out b/src/ql/src/test/results/clientpositive/rcfile_createas1.q.out
index e190ab1..6bd123b 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_createas1.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_createas1.q.out
@@ -141,6 +141,7 @@ PREHOOK: query: CREATE TABLE rcfile_createas1b
         SELECT key, value, PMOD(HASH(key), 50) as part
         FROM rcfile_createas1a
 PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@rcfile_createas1a
 PREHOOK: Input: default@rcfile_createas1a@ds=1
 PREHOOK: Input: default@rcfile_createas1a@ds=2
 POSTHOOK: query: CREATE TABLE rcfile_createas1b
@@ -148,6 +149,7 @@ POSTHOOK: query: CREATE TABLE rcfile_createas1b
         SELECT key, value, PMOD(HASH(key), 50) as part
         FROM rcfile_createas1a
 POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@rcfile_createas1a
 POSTHOOK: Input: default@rcfile_createas1a@ds=1
 POSTHOOK: Input: default@rcfile_createas1a@ds=2
 POSTHOOK: Output: default@rcfile_createas1b
@@ -160,6 +162,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_createas1a
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_createas1a
 PREHOOK: Input: default@rcfile_createas1a@ds=1
 PREHOOK: Input: default@rcfile_createas1a@ds=2
 #### A masked pattern was here ####
@@ -168,6 +171,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_createas1a
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_createas1a
 POSTHOOK: Input: default@rcfile_createas1a@ds=1
 POSTHOOK: Input: default@rcfile_createas1a@ds=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out b/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out
index 725afe6..f8d1a25 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out
@@ -1250,6 +1250,7 @@ SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge1 WHERE ds='1'
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge1
 PREHOOK: Input: default@rcfile_merge1@ds=1/part=0
 PREHOOK: Input: default@rcfile_merge1@ds=1/part=1
 PREHOOK: Input: default@rcfile_merge1@ds=1/part=10
@@ -1356,6 +1357,7 @@ SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge1 WHERE ds='1'
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge1
 POSTHOOK: Input: default@rcfile_merge1@ds=1/part=0
 POSTHOOK: Input: default@rcfile_merge1@ds=1/part=1
 POSTHOOK: Input: default@rcfile_merge1@ds=1/part=10
@@ -1858,6 +1860,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge1b WHERE ds='1'
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge1b
 PREHOOK: Input: default@rcfile_merge1b@ds=1/part=0
 PREHOOK: Input: default@rcfile_merge1b@ds=1/part=1
 PREHOOK: Input: default@rcfile_merge1b@ds=1/part=10
@@ -1963,6 +1966,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge1b WHERE ds='1'
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge1b
 POSTHOOK: Input: default@rcfile_merge1b@ds=1/part=0
 POSTHOOK: Input: default@rcfile_merge1b@ds=1/part=1
 POSTHOOK: Input: default@rcfile_merge1b@ds=1/part=10
diff --git a/src/ql/src/test/results/clientpositive/rcfile_merge2.q.out b/src/ql/src/test/results/clientpositive/rcfile_merge2.q.out
index 39c76d8..24966ae 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_merge2.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_merge2.q.out
@@ -189,6 +189,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge2a
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge2a
 PREHOOK: Input: default@rcfile_merge2a@one=1/two=0/three=2
 PREHOOK: Input: default@rcfile_merge2a@one=1/two=0/three=8
 PREHOOK: Input: default@rcfile_merge2a@one=1/two=1/three=3
@@ -215,6 +216,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge2a
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge2a
 POSTHOOK: Input: default@rcfile_merge2a@one=1/two=0/three=2
 POSTHOOK: Input: default@rcfile_merge2a@one=1/two=0/three=8
 POSTHOOK: Input: default@rcfile_merge2a@one=1/two=1/three=3
diff --git a/src/ql/src/test/results/clientpositive/rcfile_merge3.q.out b/src/ql/src/test/results/clientpositive/rcfile_merge3.q.out
index 946e460..c171c68 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_merge3.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_merge3.q.out
@@ -128,12 +128,14 @@ STAGE PLANS:
 PREHOOK: query: INSERT OVERWRITE TABLE rcfile_merge3b
     SELECT key, value FROM rcfile_merge3a
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge3a
 PREHOOK: Input: default@rcfile_merge3a@ds=1
 PREHOOK: Input: default@rcfile_merge3a@ds=2
 PREHOOK: Output: default@rcfile_merge3b
 POSTHOOK: query: INSERT OVERWRITE TABLE rcfile_merge3b
     SELECT key, value FROM rcfile_merge3a
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge3a
 POSTHOOK: Input: default@rcfile_merge3a@ds=1
 POSTHOOK: Input: default@rcfile_merge3a@ds=2
 POSTHOOK: Output: default@rcfile_merge3b
@@ -148,6 +150,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge3a
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge3a
 PREHOOK: Input: default@rcfile_merge3a@ds=1
 PREHOOK: Input: default@rcfile_merge3a@ds=2
 #### A masked pattern was here ####
@@ -156,6 +159,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge3a
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge3a
 POSTHOOK: Input: default@rcfile_merge3a@ds=1
 POSTHOOK: Input: default@rcfile_merge3a@ds=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out b/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out
index 82a5306..8a96122 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out
@@ -148,12 +148,14 @@ STAGE PLANS:
 PREHOOK: query: INSERT OVERWRITE TABLE rcfile_merge3b
     SELECT key, value FROM rcfile_merge3a
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge3a
 PREHOOK: Input: default@rcfile_merge3a@ds=1
 PREHOOK: Input: default@rcfile_merge3a@ds=2
 PREHOOK: Output: default@rcfile_merge3b
 POSTHOOK: query: INSERT OVERWRITE TABLE rcfile_merge3b
     SELECT key, value FROM rcfile_merge3a
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge3a
 POSTHOOK: Input: default@rcfile_merge3a@ds=1
 POSTHOOK: Input: default@rcfile_merge3a@ds=2
 POSTHOOK: Output: default@rcfile_merge3b
@@ -168,6 +170,7 @@ PREHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge3a
 ) t
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rcfile_merge3a
 PREHOOK: Input: default@rcfile_merge3a@ds=1
 PREHOOK: Input: default@rcfile_merge3a@ds=2
 #### A masked pattern was here ####
@@ -176,6 +179,7 @@ POSTHOOK: query: SELECT SUM(HASH(c)) FROM (
     FROM rcfile_merge3a
 ) t
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@rcfile_merge3a
 POSTHOOK: Input: default@rcfile_merge3a@ds=1
 POSTHOOK: Input: default@rcfile_merge3a@ds=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/regex_col.q.out b/src/ql/src/test/results/clientpositive/regex_col.q.out
index 0352853..9a3d860 100644
--- a/src/ql/src/test/results/clientpositive/regex_col.q.out
+++ b/src/ql/src/test/results/clientpositive/regex_col.q.out
@@ -335,6 +335,7 @@ PREHOOK: query: SELECT b.`..` FROM srcpart a JOIN srcpart b
 ON a.key = b.key AND a.hr = b.hr AND a.ds = b.ds AND a.key = 103
 ORDER BY ds, hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -344,6 +345,7 @@ POSTHOOK: query: SELECT b.`..` FROM srcpart a JOIN srcpart b
 ON a.key = b.key AND a.hr = b.hr AND a.ds = b.ds AND a.key = 103
 ORDER BY ds, hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -537,6 +539,7 @@ STAGE PLANS:
 
 PREHOOK: query: SELECT `(ds|hr)?+.+` FROM srcpart ORDER BY key, value LIMIT 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -544,6 +547,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT `(ds|hr)?+.+` FROM srcpart ORDER BY key, value LIMIT 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/rename_external_partition_location.q.out b/src/ql/src/test/results/clientpositive/rename_external_partition_location.q.out
index 5598c21..bff9191 100644
--- a/src/ql/src/test/results/clientpositive/rename_external_partition_location.q.out
+++ b/src/ql/src/test/results/clientpositive/rename_external_partition_location.q.out
@@ -30,10 +30,12 @@ POSTHOOK: Lineage: ex_table PARTITION(part=part1).value SIMPLE [(src)src.FieldSc
 part=part1
 PREHOOK: query: SELECT * from ex_table where part='part1' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ex_table
 PREHOOK: Input: default@ex_table@part=part1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * from ex_table where part='part1' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ex_table
 POSTHOOK: Input: default@ex_table@part=part1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ex_table PARTITION(part=part1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -81,10 +83,12 @@ POSTHOOK: Lineage: ex_table PARTITION(part=part1).value SIMPLE [(src)src.FieldSc
 part=part2
 PREHOOK: query: SELECT * from ex_table where part='part2' ORDER BY key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@ex_table
 PREHOOK: Input: default@ex_table@part=part2
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT * from ex_table where part='part2' ORDER BY key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@ex_table
 POSTHOOK: Input: default@ex_table@part=part2
 #### A masked pattern was here ####
 POSTHOOK: Lineage: ex_table PARTITION(part=part1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/rename_partition_location.q.out b/src/ql/src/test/results/clientpositive/rename_partition_location.q.out
index 1020a2b..3086aa2 100644
--- a/src/ql/src/test/results/clientpositive/rename_partition_location.q.out
+++ b/src/ql/src/test/results/clientpositive/rename_partition_location.q.out
@@ -47,6 +47,7 @@ POSTHOOK: Lineage: rename_partition_table PARTITION(part=1).key SIMPLE [(src)src
 POSTHOOK: Lineage: rename_partition_table PARTITION(part=1).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: SELECT count(*) FROM rename_partition_table where part = '2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@rename_partition_table
 PREHOOK: Input: default@rename_partition_table@part=2
 #### A masked pattern was here ####
 500
diff --git a/src/ql/src/test/results/clientpositive/router_join_ppr.q.out b/src/ql/src/test/results/clientpositive/router_join_ppr.q.out
index a144588..8c50519 100644
--- a/src/ql/src/test/results/clientpositive/router_join_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/router_join_ppr.q.out
@@ -377,6 +377,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -391,6 +392,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -684,6 +686,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -696,6 +699,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -989,6 +993,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND b.ds = '2008-04-08'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1001,6 +1006,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND b.ds = '2008-04-08'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1390,6 +1396,7 @@ PREHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND a.ds = '2008-04-08'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -1404,6 +1411,7 @@ POSTHOOK: query: FROM
  WHERE a.key > 10 AND a.key < 20 AND b.key > 15 AND b.key < 25 AND a.ds = '2008-04-08'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/sample1.q.out b/src/ql/src/test/results/clientpositive/sample1.q.out
index 7db6918..d9064f5 100644
--- a/src/ql/src/test/results/clientpositive/sample1.q.out
+++ b/src/ql/src/test/results/clientpositive/sample1.q.out
@@ -319,12 +319,14 @@ PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.*
 FROM srcpart TABLESAMPLE (BUCKET 1 OUT OF 1 ON rand()) s
 WHERE s.ds='2008-04-08' and s.hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@dest1
 POSTHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.*
 FROM srcpart TABLESAMPLE (BUCKET 1 OUT OF 1 ON rand()) s
 WHERE s.ds='2008-04-08' and s.hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.dt SIMPLE [(srcpart)s.FieldSchema(name:ds, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/sample10.q.out b/src/ql/src/test/results/clientpositive/sample10.q.out
index 1158a0e..1fdb335 100644
--- a/src/ql/src/test/results/clientpositive/sample10.q.out
+++ b/src/ql/src/test/results/clientpositive/sample10.q.out
@@ -9,6 +9,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@srcpartbucket
 PREHOOK: query: insert overwrite table srcpartbucket partition(ds, hr) select * from srcpart where ds is not null and key < 10
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -16,6 +17,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@srcpartbucket
 POSTHOOK: query: insert overwrite table srcpartbucket partition(ds, hr) select * from srcpart where ds is not null and key < 10
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -395,6 +397,7 @@ STAGE PLANS:
 
 PREHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpartbucket
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
@@ -402,6 +405,7 @@ PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpartbucket
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
@@ -419,6 +423,7 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(s
 2008-04-09	10
 PREHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds ORDER BY ds ASC
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpartbucket
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
@@ -426,6 +431,7 @@ PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds ORDER BY ds ASC
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpartbucket
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
@@ -443,6 +449,7 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(s
 2008-04-09	12
 PREHOOK: query: select * from srcpartbucket where ds is not null ORDER BY key ASC, value ASC, ds ASC, hr ASC
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpartbucket
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
@@ -450,6 +457,7 @@ PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
 #### A masked pattern was here ####
 POSTHOOK: query: select * from srcpartbucket where ds is not null ORDER BY key ASC, value ASC, ds ASC, hr ASC
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpartbucket
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/sample8.q.out b/src/ql/src/test/results/clientpositive/sample8.q.out
index d4828f9..707a201 100644
--- a/src/ql/src/test/results/clientpositive/sample8.q.out
+++ b/src/ql/src/test/results/clientpositive/sample8.q.out
@@ -384,6 +384,7 @@ WHERE s.ds='2008-04-08' and s.hr='11' and s.ds='2008-04-08' and s.hr='11'
 DISTRIBUTE BY key, value
 SORT BY key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -396,6 +397,7 @@ WHERE s.ds='2008-04-08' and s.hr='11' and s.ds='2008-04-08' and s.hr='11'
 DISTRIBUTE BY key, value
 SORT BY key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/sample_islocalmode_hook_hadoop20.q.out b/src/ql/src/test/results/clientpositive/sample_islocalmode_hook_hadoop20.q.out
index c74812b..5ad312c 100644
--- a/src/ql/src/test/results/clientpositive/sample_islocalmode_hook_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/sample_islocalmode_hook_hadoop20.q.out
@@ -63,11 +63,13 @@ POSTHOOK: Lineage: sih_i_part PARTITION(p=3).key EXPRESSION [(src)src.FieldSchem
 POSTHOOK: Lineage: sih_i_part PARTITION(p=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: create table sih_src as select key, value from sih_i_part order by key, value
 PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@sih_i_part
 PREHOOK: Input: default@sih_i_part@p=1
 PREHOOK: Input: default@sih_i_part@p=2
 PREHOOK: Input: default@sih_i_part@p=3
 POSTHOOK: query: create table sih_src as select key, value from sih_i_part order by key, value
 POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@sih_i_part
 POSTHOOK: Input: default@sih_i_part@p=1
 POSTHOOK: Input: default@sih_i_part@p=2
 POSTHOOK: Input: default@sih_i_part@p=3
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
index 113d5a9..2b5b4d8 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
@@ -107,12 +107,16 @@ FROM hive_test_smb_bucket1 a JOIN
 hive_test_smb_bucket2 b
 ON a.key = b.key WHERE a.ds = '2010-10-15' and b.ds='2010-10-15' and  b.key IS NOT NULL
 PREHOOK: type: QUERY
+PREHOOK: Input: default@hive_test_smb_bucket1
+PREHOOK: Input: default@hive_test_smb_bucket2
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /* + MAPJOIN(b) */ b.key as k1, b.value, b.ds, a.key as k2
 FROM hive_test_smb_bucket1 a JOIN
 hive_test_smb_bucket2 b
 ON a.key = b.key WHERE a.ds = '2010-10-15' and b.ds='2010-10-15' and  b.key IS NOT NULL
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@hive_test_smb_bucket1
+POSTHOOK: Input: default@hive_test_smb_bucket2
 #### A masked pattern was here ####
 PREHOOK: query: explain extended
 SELECT /* + MAPJOIN(a) */ b.key as k1, b.value, b.ds, a.key as k2
@@ -211,12 +215,16 @@ FROM hive_test_smb_bucket1 a JOIN
 hive_test_smb_bucket2 b
 ON a.key = b.key WHERE a.ds = '2010-10-15' and b.ds='2010-10-15' and  b.key IS NOT NULL
 PREHOOK: type: QUERY
+PREHOOK: Input: default@hive_test_smb_bucket1
+PREHOOK: Input: default@hive_test_smb_bucket2
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /* + MAPJOIN(a) */ b.key as k1, b.value, b.ds, a.key as k2
 FROM hive_test_smb_bucket1 a JOIN
 hive_test_smb_bucket2 b
 ON a.key = b.key WHERE a.ds = '2010-10-15' and b.ds='2010-10-15' and  b.key IS NOT NULL
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@hive_test_smb_bucket1
+POSTHOOK: Input: default@hive_test_smb_bucket2
 #### A masked pattern was here ####
 PREHOOK: query: insert overwrite table hive_test_smb_bucket1 partition (ds='2010-10-15') select key, value from src
 PREHOOK: type: QUERY
@@ -349,7 +357,9 @@ FROM hive_test_smb_bucket1 a JOIN
 hive_test_smb_bucket2 b
 ON a.key = b.key WHERE a.ds = '2010-10-15' and b.ds='2010-10-15' and  b.key IS NOT NULL
 PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@hive_test_smb_bucket1
 PREHOOK: Input: default@hive_test_smb_bucket1@ds=2010-10-15
+PREHOOK: Input: default@hive_test_smb_bucket2
 PREHOOK: Input: default@hive_test_smb_bucket2@ds=2010-10-15
 POSTHOOK: query: create table smb_mapjoin9_results as
 SELECT /* + MAPJOIN(b) */ b.key as k1, b.value, b.ds, a.key as k2
@@ -357,7 +367,9 @@ FROM hive_test_smb_bucket1 a JOIN
 hive_test_smb_bucket2 b
 ON a.key = b.key WHERE a.ds = '2010-10-15' and b.ds='2010-10-15' and  b.key IS NOT NULL
 POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@hive_test_smb_bucket1
 POSTHOOK: Input: default@hive_test_smb_bucket1@ds=2010-10-15
+POSTHOOK: Input: default@hive_test_smb_bucket2
 POSTHOOK: Input: default@hive_test_smb_bucket2@ds=2010-10-15
 POSTHOOK: Output: default@smb_mapjoin9_results
 POSTHOOK: Lineage: hive_test_smb_bucket1 PARTITION(ds=2010-10-15).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin_11.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin_11.q.out
index 22dcecd..f978ff2 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin_11.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin_11.q.out
@@ -214,12 +214,16 @@ STAGE PLANS:
 
 PREHOOK: query: INSERT OVERWRITE TABLE test_table3 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1 a JOIN test_table2 b ON a.key = b.key AND a.ds = '1' AND b.ds = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_table1
 PREHOOK: Input: default@test_table1@ds=1
+PREHOOK: Input: default@test_table2
 PREHOOK: Input: default@test_table2@ds=1
 PREHOOK: Output: default@test_table3@ds=1
 POSTHOOK: query: INSERT OVERWRITE TABLE test_table3 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1 a JOIN test_table2 b ON a.key = b.key AND a.ds = '1' AND b.ds = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_table1
 POSTHOOK: Input: default@test_table1@ds=1
+POSTHOOK: Input: default@test_table2
 POSTHOOK: Input: default@test_table2@ds=1
 POSTHOOK: Output: default@test_table3@ds=1
 POSTHOOK: Lineage: test_table1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -231,13 +235,17 @@ POSTHOOK: Lineage: test_table3 PARTITION(ds=1).value SIMPLE [(test_table2)b.Fiel
 PREHOOK: query: -- Join data from a sampled bucket to verify the data is bucketed
 SELECT COUNT(*) FROM test_table3 TABLESAMPLE(BUCKET 2 OUT OF 16) a JOIN test_table1 TABLESAMPLE(BUCKET 2 OUT OF 16) b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_table1
 PREHOOK: Input: default@test_table1@ds=1
+PREHOOK: Input: default@test_table3
 PREHOOK: Input: default@test_table3@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: -- Join data from a sampled bucket to verify the data is bucketed
 SELECT COUNT(*) FROM test_table3 TABLESAMPLE(BUCKET 2 OUT OF 16) a JOIN test_table1 TABLESAMPLE(BUCKET 2 OUT OF 16) b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_table1
 POSTHOOK: Input: default@test_table1@ds=1
+POSTHOOK: Input: default@test_table3
 POSTHOOK: Input: default@test_table3@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: test_table1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin_12.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin_12.q.out
index 0d69406..ed78a59 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin_12.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin_12.q.out
@@ -236,14 +236,18 @@ STAGE PLANS:
 
 PREHOOK: query: INSERT OVERWRITE TABLE test_table3 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1 a JOIN test_table2 b ON a.key = b.key AND a.ds = '1' AND b.ds >= '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_table1
 PREHOOK: Input: default@test_table1@ds=1
+PREHOOK: Input: default@test_table2
 PREHOOK: Input: default@test_table2@ds=1
 PREHOOK: Input: default@test_table2@ds=2
 PREHOOK: Input: default@test_table2@ds=3
 PREHOOK: Output: default@test_table3@ds=1
 POSTHOOK: query: INSERT OVERWRITE TABLE test_table3 PARTITION (ds = '1') SELECT /*+ MAPJOIN(b) */ a.key, b.value FROM test_table1 a JOIN test_table2 b ON a.key = b.key AND a.ds = '1' AND b.ds >= '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_table1
 POSTHOOK: Input: default@test_table1@ds=1
+POSTHOOK: Input: default@test_table2
 POSTHOOK: Input: default@test_table2@ds=1
 POSTHOOK: Input: default@test_table2@ds=2
 POSTHOOK: Input: default@test_table2@ds=3
@@ -261,13 +265,17 @@ POSTHOOK: Lineage: test_table3 PARTITION(ds=1).value SIMPLE [(test_table2)b.Fiel
 PREHOOK: query: -- Join data from a sampled bucket to verify the data is bucketed
 SELECT COUNT(*) FROM test_table3 TABLESAMPLE(BUCKET 2 OUT OF 16) a JOIN test_table1 TABLESAMPLE(BUCKET 2 OUT OF 16) b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_table1
 PREHOOK: Input: default@test_table1@ds=1
+PREHOOK: Input: default@test_table3
 PREHOOK: Input: default@test_table3@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: -- Join data from a sampled bucket to verify the data is bucketed
 SELECT COUNT(*) FROM test_table3 TABLESAMPLE(BUCKET 2 OUT OF 16) a JOIN test_table1 TABLESAMPLE(BUCKET 2 OUT OF 16) b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_table1
 POSTHOOK: Input: default@test_table1@ds=1
+POSTHOOK: Input: default@test_table3
 POSTHOOK: Input: default@test_table3@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: test_table1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -475,13 +483,17 @@ STAGE PLANS:
 PREHOOK: query: INSERT OVERWRITE TABLE test_table3 PARTITION (ds = '2') 
 SELECT /*+mapjoin(b)*/ a.key, concat(a.value, b.value) FROM test_table3 a JOIN test_table1 b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_table1
 PREHOOK: Input: default@test_table1@ds=1
+PREHOOK: Input: default@test_table3
 PREHOOK: Input: default@test_table3@ds=1
 PREHOOK: Output: default@test_table3@ds=2
 POSTHOOK: query: INSERT OVERWRITE TABLE test_table3 PARTITION (ds = '2') 
 SELECT /*+mapjoin(b)*/ a.key, concat(a.value, b.value) FROM test_table3 a JOIN test_table1 b ON a.key = b.key AND a.ds = '1' AND b.ds='1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_table1
 POSTHOOK: Input: default@test_table1@ds=1
+POSTHOOK: Input: default@test_table3
 POSTHOOK: Input: default@test_table3@ds=1
 POSTHOOK: Output: default@test_table3@ds=2
 POSTHOOK: Lineage: test_table1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -498,10 +510,12 @@ POSTHOOK: Lineage: test_table3 PARTITION(ds=2).key SIMPLE [(test_table3)a.FieldS
 POSTHOOK: Lineage: test_table3 PARTITION(ds=2).value EXPRESSION [(test_table3)a.FieldSchema(name:value, type:string, comment:null), (test_table1)b.FieldSchema(name:value, type:string, comment:null), ]
 PREHOOK: query: SELECT count(*) from test_table3 tablesample (bucket 2 out of 16) a where ds = '2'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@test_table3
 PREHOOK: Input: default@test_table3@ds=2
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT count(*) from test_table3 tablesample (bucket 2 out of 16) a where ds = '2'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@test_table3
 POSTHOOK: Input: default@test_table3@ds=2
 #### A masked pattern was here ####
 POSTHOOK: Lineage: test_table1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/sort_merge_join_desc_5.q.out b/src/ql/src/test/results/clientpositive/sort_merge_join_desc_5.q.out
index ea1ee11..ba038c4 100644
--- a/src/ql/src/test/results/clientpositive/sort_merge_join_desc_5.q.out
+++ b/src/ql/src/test/results/clientpositive/sort_merge_join_desc_5.q.out
@@ -244,14 +244,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' AND b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' AND b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: srcbucket_mapjoin_part_1 PARTITION(part=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/sort_merge_join_desc_6.q.out b/src/ql/src/test/results/clientpositive/sort_merge_join_desc_6.q.out
index 13b42df..d0157bd 100644
--- a/src/ql/src/test/results/clientpositive/sort_merge_join_desc_6.q.out
+++ b/src/ql/src/test/results/clientpositive/sort_merge_join_desc_6.q.out
@@ -275,14 +275,18 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' AND b.part = '1'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part = '1' AND b.part = '1'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: srcbucket_mapjoin_part_1 PARTITION(part=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/sort_merge_join_desc_7.q.out b/src/ql/src/test/results/clientpositive/sort_merge_join_desc_7.q.out
index 6522824..7be90e6 100644
--- a/src/ql/src/test/results/clientpositive/sort_merge_join_desc_7.q.out
+++ b/src/ql/src/test/results/clientpositive/sort_merge_join_desc_7.q.out
@@ -379,8 +379,10 @@ PREHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part IS NOT NULL AND b.part IS NOT NULL
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcbucket_mapjoin_part_1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+PREHOOK: Input: default@srcbucket_mapjoin_part_2
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 PREHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
@@ -388,8 +390,10 @@ POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ count(*)
 FROM srcbucket_mapjoin_part_1 a JOIN srcbucket_mapjoin_part_2 b
 ON a.key = b.key AND a.part IS NOT NULL AND b.part IS NOT NULL
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcbucket_mapjoin_part_1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_1@part=2
+POSTHOOK: Input: default@srcbucket_mapjoin_part_2
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=1
 POSTHOOK: Input: default@srcbucket_mapjoin_part_2@part=2
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/split_sample.q.out b/src/ql/src/test/results/clientpositive/split_sample.q.out
index a869a74..10f8e76 100644
--- a/src/ql/src/test/results/clientpositive/split_sample.q.out
+++ b/src/ql/src/test/results/clientpositive/split_sample.q.out
@@ -63,11 +63,13 @@ POSTHOOK: Lineage: ss_i_part PARTITION(p=3).key EXPRESSION [(src)src.FieldSchema
 POSTHOOK: Lineage: ss_i_part PARTITION(p=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: create table ss_src2 as select key, value from ss_i_part
 PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@ss_i_part
 PREHOOK: Input: default@ss_i_part@p=1
 PREHOOK: Input: default@ss_i_part@p=2
 PREHOOK: Input: default@ss_i_part@p=3
 POSTHOOK: query: create table ss_src2 as select key, value from ss_i_part
 POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@ss_i_part
 POSTHOOK: Input: default@ss_i_part@p=1
 POSTHOOK: Input: default@ss_i_part@p=2
 POSTHOOK: Input: default@ss_i_part@p=3
@@ -237,11 +239,13 @@ POSTHOOK: Lineage: ss_i_part PARTITION(p=3).key EXPRESSION [(src)src.FieldSchema
 POSTHOOK: Lineage: ss_i_part PARTITION(p=3).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: create table ss_src3 as select key, value from ss_i_part
 PREHOOK: type: CREATETABLE_AS_SELECT
+PREHOOK: Input: default@ss_i_part
 PREHOOK: Input: default@ss_i_part@p=1
 PREHOOK: Input: default@ss_i_part@p=2
 PREHOOK: Input: default@ss_i_part@p=3
 POSTHOOK: query: create table ss_src3 as select key, value from ss_i_part
 POSTHOOK: type: CREATETABLE_AS_SELECT
+POSTHOOK: Input: default@ss_i_part
 POSTHOOK: Input: default@ss_i_part@p=1
 POSTHOOK: Input: default@ss_i_part@p=2
 POSTHOOK: Input: default@ss_i_part@p=3
diff --git a/src/ql/src/test/results/clientpositive/stats10.q.out b/src/ql/src/test/results/clientpositive/stats10.q.out
index 0cf39c4..eec17c1 100644
--- a/src/ql/src/test/results/clientpositive/stats10.q.out
+++ b/src/ql/src/test/results/clientpositive/stats10.q.out
@@ -122,10 +122,12 @@ POSTHOOK: Lineage: bucket3_1 PARTITION(ds=2).key EXPRESSION [(src)src.FieldSchem
 POSTHOOK: Lineage: bucket3_1 PARTITION(ds=2).value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select * from bucket3_1 tablesample (bucket 1 out of 2) s where ds = '1' order by key
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket3_1
 PREHOOK: Input: default@bucket3_1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: query: select * from bucket3_1 tablesample (bucket 1 out of 2) s where ds = '1' order by key
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket3_1
 POSTHOOK: Input: default@bucket3_1@ds=1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: bucket3_1 PARTITION(ds=1).key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -412,6 +414,7 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table bucket3_1 partition (ds) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@bucket3_1
 PREHOOK: Input: default@bucket3_1@ds=1
 PREHOOK: Input: default@bucket3_1@ds=2
 PREHOOK: Output: default@bucket3_1
@@ -419,6 +422,7 @@ PREHOOK: Output: default@bucket3_1@ds=1
 PREHOOK: Output: default@bucket3_1@ds=2
 POSTHOOK: query: analyze table bucket3_1 partition (ds) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@bucket3_1
 POSTHOOK: Input: default@bucket3_1@ds=1
 POSTHOOK: Input: default@bucket3_1@ds=2
 POSTHOOK: Output: default@bucket3_1
diff --git a/src/ql/src/test/results/clientpositive/stats11.q.out b/src/ql/src/test/results/clientpositive/stats11.q.out
index 51208a7..fda5796 100644
--- a/src/ql/src/test/results/clientpositive/stats11.q.out
+++ b/src/ql/src/test/results/clientpositive/stats11.q.out
@@ -616,6 +616,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -624,6 +625,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_tmp_result.key SIMPLE [(srcbucket_mapjoin)a.FieldSchema(name:key, type:int, comment:null), ]
@@ -663,6 +665,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -671,6 +674,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1156,6 +1160,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -1164,6 +1169,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
@@ -1239,6 +1245,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcbucket_mapjoin
+PREHOOK: Input: default@srcbucket_mapjoin_part
 PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 PREHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: query: insert overwrite table bucketmapjoin_tmp_result 
@@ -1247,6 +1254,7 @@ from srcbucket_mapjoin a join srcbucket_mapjoin_part b
 on a.key=b.key where b.ds="2008-04-08"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcbucket_mapjoin
+POSTHOOK: Input: default@srcbucket_mapjoin_part
 POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
 POSTHOOK: Output: default@bucketmapjoin_tmp_result
 POSTHOOK: Lineage: bucketmapjoin_hash_result_1.key EXPRESSION [(bucketmapjoin_tmp_result)bucketmapjoin_tmp_result.FieldSchema(name:key, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/stats12.q.out b/src/ql/src/test/results/clientpositive/stats12.q.out
index 702dd6a..e665993 100644
--- a/src/ql/src/test/results/clientpositive/stats12.q.out
+++ b/src/ql/src/test/results/clientpositive/stats12.q.out
@@ -5,6 +5,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@analyze_srcpart
 PREHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -12,6 +13,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_srcpart
 POSTHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -147,6 +149,7 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@analyze_srcpart
@@ -154,6 +157,7 @@ PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@analyze_srcpart
diff --git a/src/ql/src/test/results/clientpositive/stats13.q.out b/src/ql/src/test/results/clientpositive/stats13.q.out
index 13cc8d9..1990fd6 100644
--- a/src/ql/src/test/results/clientpositive/stats13.q.out
+++ b/src/ql/src/test/results/clientpositive/stats13.q.out
@@ -5,6 +5,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@analyze_srcpart
 PREHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -12,6 +13,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_srcpart
 POSTHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -109,11 +111,13 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=11) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=11) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
diff --git a/src/ql/src/test/results/clientpositive/stats14.q.out b/src/ql/src/test/results/clientpositive/stats14.q.out
index c8cac9e..bcb4448 100644
--- a/src/ql/src/test/results/clientpositive/stats14.q.out
+++ b/src/ql/src/test/results/clientpositive/stats14.q.out
@@ -94,11 +94,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
@@ -110,11 +112,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
@@ -284,6 +288,7 @@ Storage Desc Params:
 	serialization.format	1                   
 PREHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
@@ -293,6 +298,7 @@ PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=13
 POSTHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
diff --git a/src/ql/src/test/results/clientpositive/stats15.q.out b/src/ql/src/test/results/clientpositive/stats15.q.out
index c8cac9e..bcb4448 100644
--- a/src/ql/src/test/results/clientpositive/stats15.q.out
+++ b/src/ql/src/test/results/clientpositive/stats15.q.out
@@ -94,11 +94,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='11') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=11
@@ -110,11 +112,13 @@ POSTHOOK: Lineage: stats_src.key SIMPLE [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: stats_src.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: query: analyze table stats_part partition(ds='2010-04-08', hr='12') compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Output: default@stats_part
 POSTHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
@@ -284,6 +288,7 @@ Storage Desc Params:
 	serialization.format	1                   
 PREHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@stats_part
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
@@ -293,6 +298,7 @@ PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=12
 PREHOOK: Output: default@stats_part@ds=2010-04-08/hr=13
 POSTHOOK: query: analyze table stats_part partition(ds, hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@stats_part
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=11
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=12
 POSTHOOK: Input: default@stats_part@ds=2010-04-08/hr=13
diff --git a/src/ql/src/test/results/clientpositive/stats2.q.out b/src/ql/src/test/results/clientpositive/stats2.q.out
index a834c79..3dc8877 100644
--- a/src/ql/src/test/results/clientpositive/stats2.q.out
+++ b/src/ql/src/test/results/clientpositive/stats2.q.out
@@ -59,6 +59,7 @@ STAGE PLANS:
 
 PREHOOK: query: insert overwrite table analyze_t1 partition (ds, hr) select * from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -66,6 +67,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_t1
 POSTHOOK: query: insert overwrite table analyze_t1 partition (ds, hr) select * from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -158,6 +160,7 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_t1 partition (ds, hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_t1
 PREHOOK: Input: default@analyze_t1@ds=2008-04-08/hr=11
 PREHOOK: Input: default@analyze_t1@ds=2008-04-08/hr=12
 PREHOOK: Input: default@analyze_t1@ds=2008-04-09/hr=11
@@ -169,6 +172,7 @@ PREHOOK: Output: default@analyze_t1@ds=2008-04-09/hr=11
 PREHOOK: Output: default@analyze_t1@ds=2008-04-09/hr=12
 POSTHOOK: query: analyze table analyze_t1 partition (ds, hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_t1
 POSTHOOK: Input: default@analyze_t1@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@analyze_t1@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@analyze_t1@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/stats3.q.out b/src/ql/src/test/results/clientpositive/stats3.q.out
index cac54b1..64d97a9 100644
--- a/src/ql/src/test/results/clientpositive/stats3.q.out
+++ b/src/ql/src/test/results/clientpositive/stats3.q.out
@@ -126,10 +126,12 @@ POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1
 6	test_part	test_Part
 PREHOOK: query: select count(1) from hive_test_dst
 PREHOOK: type: QUERY
+PREHOOK: Input: default@hive_test_dst
 PREHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from hive_test_dst
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@hive_test_dst
 POSTHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
 #### A masked pattern was here ####
 POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
@@ -154,10 +156,12 @@ POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1
 POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
 PREHOOK: query: select count(1) from hive_test_dst
 PREHOOK: type: QUERY
+PREHOOK: Input: default@hive_test_dst
 PREHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from hive_test_dst
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@hive_test_dst
 POSTHOOK: Input: default@hive_test_dst@pcol1=test_part/pcol2=test_Part
 #### A masked pattern was here ####
 POSTHOOK: Lineage: hive_test_dst PARTITION(pcol1=test_part,pcol2=test_Part).col1 SIMPLE [(hive_test_src)hive_test_src.FieldSchema(name:col1, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/stats4.q.out b/src/ql/src/test/results/clientpositive/stats4.q.out
index 2775c7d..272e83f 100644
--- a/src/ql/src/test/results/clientpositive/stats4.q.out
+++ b/src/ql/src/test/results/clientpositive/stats4.q.out
@@ -225,6 +225,7 @@ PREHOOK: query: from srcpart
 insert overwrite table nzhang_part1 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 insert overwrite table nzhang_part2 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -235,6 +236,7 @@ POSTHOOK: query: from srcpart
 insert overwrite table nzhang_part1 partition (ds, hr) select key, value, ds, hr where ds <= '2008-04-08'
 insert overwrite table nzhang_part2 partition(ds='2008-12-31', hr) select key, value, hr where ds > '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/stats6.q.out b/src/ql/src/test/results/clientpositive/stats6.q.out
index 63dada0..95443da 100644
--- a/src/ql/src/test/results/clientpositive/stats6.q.out
+++ b/src/ql/src/test/results/clientpositive/stats6.q.out
@@ -5,6 +5,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@analyze_srcpart
 PREHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -12,6 +13,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_srcpart
 POSTHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -30,11 +32,13 @@ POSTHOOK: Lineage: analyze_srcpart PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(s
 POSTHOOK: Lineage: analyze_srcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=11) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=11) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
@@ -48,11 +52,13 @@ POSTHOOK: Lineage: analyze_srcpart PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(s
 POSTHOOK: Lineage: analyze_srcpart PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=12) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=12) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=12
diff --git a/src/ql/src/test/results/clientpositive/stats7.q.out b/src/ql/src/test/results/clientpositive/stats7.q.out
index 6716f22..7d077de 100644
--- a/src/ql/src/test/results/clientpositive/stats7.q.out
+++ b/src/ql/src/test/results/clientpositive/stats7.q.out
@@ -5,6 +5,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@analyze_srcpart
 PREHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -12,6 +13,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_srcpart
 POSTHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -61,6 +63,7 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@analyze_srcpart
@@ -68,6 +71,7 @@ PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@analyze_srcpart
diff --git a/src/ql/src/test/results/clientpositive/stats8.q.out b/src/ql/src/test/results/clientpositive/stats8.q.out
index 6e47271..e41d2d4 100644
--- a/src/ql/src/test/results/clientpositive/stats8.q.out
+++ b/src/ql/src/test/results/clientpositive/stats8.q.out
@@ -5,6 +5,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@analyze_srcpart
 PREHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -12,6 +13,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_srcpart
 POSTHOOK: query: insert overwrite table analyze_srcpart partition (ds, hr) select * from srcpart where ds is not null
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -61,11 +63,13 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=11) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=11) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=11
@@ -205,11 +209,13 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=12) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-08',hr=12) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-08/hr=12
@@ -301,11 +307,13 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-09',hr=11) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-09/hr=11
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-09',hr=11) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-09/hr=11
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-09/hr=11
@@ -397,11 +405,13 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-09',hr=12) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@analyze_srcpart
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds='2008-04-09',hr=12) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-09/hr=12
 POSTHOOK: Output: default@analyze_srcpart
 POSTHOOK: Output: default@analyze_srcpart@ds=2008-04-09/hr=12
@@ -493,6 +503,7 @@ STAGE PLANS:
 
 PREHOOK: query: analyze table analyze_srcpart PARTITION(ds, hr) compute statistics
 PREHOOK: type: QUERY
+PREHOOK: Input: default@analyze_srcpart
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@analyze_srcpart@ds=2008-04-09/hr=11
@@ -504,6 +515,7 @@ PREHOOK: Output: default@analyze_srcpart@ds=2008-04-09/hr=11
 PREHOOK: Output: default@analyze_srcpart@ds=2008-04-09/hr=12
 POSTHOOK: query: analyze table analyze_srcpart PARTITION(ds, hr) compute statistics
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@analyze_srcpart
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@analyze_srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/touch.q.out b/src/ql/src/test/results/clientpositive/touch.q.out
index 8c16199..604f76c 100644
--- a/src/ql/src/test/results/clientpositive/touch.q.out
+++ b/src/ql/src/test/results/clientpositive/touch.q.out
@@ -31,11 +31,13 @@ POSTHOOK: Lineage: tstsrc.value SIMPLE [(src)src.FieldSchema(name:value, type:st
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds='2008-04-08', hr='12')
 select key, value from srcpart where ds='2008-04-08' and hr='12'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@tstsrcpart@ds=2008-04-08/hr=12
 POSTHOOK: Lineage: tstsrc.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/transform_ppr1.q.out b/src/ql/src/test/results/clientpositive/transform_ppr1.q.out
index 63582d6..1d29048 100644
--- a/src/ql/src/test/results/clientpositive/transform_ppr1.q.out
+++ b/src/ql/src/test/results/clientpositive/transform_ppr1.q.out
@@ -308,6 +308,7 @@ PREHOOK: query: FROM (
 ) tmap
 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100 AND tmap.ds = '2008-04-08'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -321,6 +322,7 @@ POSTHOOK: query: FROM (
 ) tmap
 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100 AND tmap.ds = '2008-04-08'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
diff --git a/src/ql/src/test/results/clientpositive/transform_ppr2.q.out b/src/ql/src/test/results/clientpositive/transform_ppr2.q.out
index 7a299df..4f547c0 100644
--- a/src/ql/src/test/results/clientpositive/transform_ppr2.q.out
+++ b/src/ql/src/test/results/clientpositive/transform_ppr2.q.out
@@ -215,6 +215,7 @@ PREHOOK: query: FROM (
 ) tmap
 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -227,6 +228,7 @@ POSTHOOK: query: FROM (
 ) tmap
 SELECT tmap.tkey, tmap.tvalue WHERE tmap.tkey < 100
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/union22.q.out b/src/ql/src/test/results/clientpositive/union22.q.out
index f24a7ac..26e2616 100644
--- a/src/ql/src/test/results/clientpositive/union22.q.out
+++ b/src/ql/src/test/results/clientpositive/union22.q.out
@@ -522,7 +522,9 @@ where a.k1 > 20
 )
 subq
 PREHOOK: type: QUERY
+PREHOOK: Input: default@dst_union22
 PREHOOK: Input: default@dst_union22@ds=1
+PREHOOK: Input: default@dst_union22_delta
 PREHOOK: Input: default@dst_union22_delta@ds=1
 PREHOOK: Output: default@dst_union22@ds=2
 POSTHOOK: query: insert overwrite table dst_union22 partition (ds='2')
@@ -537,7 +539,9 @@ where a.k1 > 20
 )
 subq
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dst_union22
 POSTHOOK: Input: default@dst_union22@ds=1
+POSTHOOK: Input: default@dst_union22_delta
 POSTHOOK: Input: default@dst_union22_delta@ds=1
 POSTHOOK: Output: default@dst_union22@ds=2
 POSTHOOK: Lineage: dst_union22 PARTITION(ds=1).k1 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
@@ -556,10 +560,12 @@ POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k4 SIMPLE [(src)src.FieldSc
 POSTHOOK: Lineage: dst_union22_delta PARTITION(ds=1).k5 SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: select * from dst_union22 where ds = '2' order by k1, k2, k3, k4
 PREHOOK: type: QUERY
+PREHOOK: Input: default@dst_union22
 PREHOOK: Input: default@dst_union22@ds=2
 #### A masked pattern was here ####
 POSTHOOK: query: select * from dst_union22 where ds = '2' order by k1, k2, k3, k4
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dst_union22
 POSTHOOK: Input: default@dst_union22@ds=2
 #### A masked pattern was here ####
 POSTHOOK: Lineage: dst_union22 PARTITION(ds=1).k1 SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/union25.q.out b/src/ql/src/test/results/clientpositive/union25.q.out
index 3b40589..030a7c1 100644
--- a/src/ql/src/test/results/clientpositive/union25.q.out
+++ b/src/ql/src/test/results/clientpositive/union25.q.out
@@ -6,11 +6,13 @@ POSTHOOK: Output: default@tmp_srcpart
 PREHOOK: query: insert overwrite table tmp_srcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Output: default@tmp_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: query: insert overwrite table tmp_srcpart partition (ds='2008-04-08', hr='11')
 select key, value from srcpart where ds='2008-04-08' and hr='11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Output: default@tmp_srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Lineage: tmp_srcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/union26.q.out b/src/ql/src/test/results/clientpositive/union26.q.out
index d439c64..3d05af6 100644
--- a/src/ql/src/test/results/clientpositive/union26.q.out
+++ b/src/ql/src/test/results/clientpositive/union26.q.out
@@ -301,6 +301,7 @@ WHERE ds='2008-04-08' and hr='11'
 ) a
 group by key, value order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -325,6 +326,7 @@ WHERE ds='2008-04-08' and hr='11'
 ) a
 group by key, value order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -658,6 +660,7 @@ WHERE ds='2008-04-08' and hr='11'
 ) a
 group by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -682,6 +685,7 @@ WHERE ds='2008-04-08' and hr='11'
 ) a
 group by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1015,6 +1019,7 @@ WHERE ds='2008-04-08' and hr='11'
 ) a
 group by key, value order by key, value
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -1039,6 +1044,7 @@ WHERE ds='2008-04-08' and hr='11'
 ) a
 group by key, value order by key, value
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/union_lateralview.q.out b/src/ql/src/test/results/clientpositive/union_lateralview.q.out
index 0e98b01..c8ab3fc 100644
--- a/src/ql/src/test/results/clientpositive/union_lateralview.q.out
+++ b/src/ql/src/test/results/clientpositive/union_lateralview.q.out
@@ -293,6 +293,7 @@ LEFT OUTER JOIN src b
 ON d.key = b.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Output: default@test_union_lateral_view
 POSTHOOK: query: INSERT OVERWRITE TABLE test_union_lateral_view
@@ -314,6 +315,7 @@ LEFT OUTER JOIN src b
 ON d.key = b.key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Output: default@test_union_lateral_view
 POSTHOOK: Lineage: test_union_lateral_view.arr_ele EXPRESSION []
diff --git a/src/ql/src/test/results/clientpositive/union_ppr.q.out b/src/ql/src/test/results/clientpositive/union_ppr.q.out
index c6bf750..a2aefc7 100644
--- a/src/ql/src/test/results/clientpositive/union_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/union_ppr.q.out
@@ -267,6 +267,7 @@ PREHOOK: query: SELECT * FROM (
 WHERE A.ds = '2008-04-08'
 SORT BY A.key, A.value, A.ds, A.hr
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
@@ -278,6 +279,7 @@ POSTHOOK: query: SELECT * FROM (
 WHERE A.ds = '2008-04-08'
 SORT BY A.key, A.value, A.ds, A.hr
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/updateAccessTime.q.out b/src/ql/src/test/results/clientpositive/updateAccessTime.q.out
index 816d45e..734ec93 100644
--- a/src/ql/src/test/results/clientpositive/updateAccessTime.q.out
+++ b/src/ql/src/test/results/clientpositive/updateAccessTime.q.out
@@ -53,6 +53,7 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@tstsrcpart
 PREHOOK: query: insert overwrite table tstsrcpart partition (ds, hr) select key, value, ds, hr from srcpart
 PREHOOK: type: QUERY
+PREHOOK: Input: default@srcpart
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -60,6 +61,7 @@ PREHOOK: Input: default@srcpart@ds=2008-04-09/hr=12
 PREHOOK: Output: default@tstsrcpart
 POSTHOOK: query: insert overwrite table tstsrcpart partition (ds, hr) select key, value, ds, hr from srcpart
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@srcpart
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpart@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpart@ds=2008-04-09/hr=11
@@ -132,10 +134,12 @@ hr	string
 #### A masked pattern was here ####
 PREHOOK: query: select count(1) from tstsrcpart where ds = '2008-04-08' and hr = '11'
 PREHOOK: type: QUERY
+PREHOOK: Input: default@tstsrcpart
 PREHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: query: select count(1) from tstsrcpart where ds = '2008-04-08' and hr = '11'
 POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tstsrcpart
 POSTHOOK: Input: default@tstsrcpart@ds=2008-04-08/hr=11
 #### A masked pattern was here ####
 POSTHOOK: Lineage: tstsrcpart PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
-- 
1.7.0.4

