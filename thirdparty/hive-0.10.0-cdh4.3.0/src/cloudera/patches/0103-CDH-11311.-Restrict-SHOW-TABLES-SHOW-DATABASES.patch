From 09e689c2c2ccefd63776ff796fe3d8bf8990a86f Mon Sep 17 00:00:00 2001
From: Shreepadma Venugopalan <shreepadma@cloudera.com>
Date: Thu, 25 Apr 2013 18:49:18 -0700
Subject: [PATCH 103/121] CDH-11311. Restrict SHOW TABLES, SHOW DATABASES

---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |    1 +
 ql/src/java/org/apache/hadoop/hive/ql/Driver.java  |   43 +++++++++++-
 .../hadoop/hive/ql/HiveDriverFilterHook.java       |   38 ++++++++++
 .../hive/ql/HiveDriverFilterHookContext.java       |   34 +++++++++
 .../hive/ql/HiveDriverFilterHookContextImpl.java   |   62 ++++++++++++++++
 .../hadoop/hive/ql/HiveDriverFilterHookResult.java |   37 ++++++++++
 .../hive/ql/HiveDriverFilterHookResultImpl.java    |   77 ++++++++++++++++++++
 7 files changed, 291 insertions(+), 1 deletions(-)
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHook.java
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContext.java
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContextImpl.java
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResult.java
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResultImpl.java

diff --git a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index 1585555..7f708fe 100644
--- a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -623,6 +623,7 @@ public class HiveConf extends Configuration {
     HIVECONFVALIDATION("hive.conf.validation", true),
 
     SEMANTIC_ANALYZER_HOOK("hive.semantic.analyzer.hook", ""),
+    HIVE_EXEC_FILTER_HOOK("hive.exec.filter.hook",""),
 
     HIVE_AUTHORIZATION_ENABLED("hive.security.authorization.enabled", false),
     HIVE_AUTHORIZATION_MANAGER("hive.security.authorization.manager",
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java b/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
index bf2082a..929061f 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
@@ -24,6 +24,7 @@ import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.Serializable;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -135,6 +136,7 @@ public class Driver implements CommandProcessor {
   // transport is derived from TSocket
   private String ipAddress;
   private String userName;  // username for the currently executing statement
+  private HiveOperation hiveOperation;
 
   private boolean checkLockManager() {
     boolean supportConcurrency = conf.getBoolVar(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY);
@@ -466,6 +468,8 @@ public class Driver implements CommandProcessor {
       // validate the plan
       sem.validate();
 
+      hiveOperation = SessionState.get().getHiveOperation();
+
       plan = new QueryPlan(command, sem, perfLogger.getStartTime(PerfLogger.DRIVER_RUN),
            SessionState.get().getCommandType());
 
@@ -1416,11 +1420,47 @@ public class Driver implements CommandProcessor {
     }
   }
 
+  private boolean isExecMetadataLookup(HiveOperation hiveOperation) {
+    String[] commands = {"SHOWDATABASES", "SHOWTABLES"};
+    return Arrays.binarySearch(commands, hiveOperation.getOperationName().toUpperCase()) >=0 ;
+  }
+
+  private void fireFilterHooks(List<String> res) throws CommandNeedRetryException {
+    List<HiveDriverFilterHook> filterHooks = null;
+
+    // Invoke filter hooks if a) any specified and b) operation is a metadata operation
+    try {
+      filterHooks = getHooks(HiveConf.ConfVars.HIVE_EXEC_FILTER_HOOK,
+                   HiveDriverFilterHook.class);
+      if (res != null && !res.isEmpty() &&
+           filterHooks != null && !filterHooks.isEmpty() &&
+             isExecMetadataLookup(hiveOperation)) {
+        HiveDriverFilterHookContext hookCtx = new HiveDriverFilterHookContextImpl(conf,
+                                                  hiveOperation, userName, res);
+        HiveDriverFilterHookResult hookResult;
+        for (HiveDriverFilterHook hook : filterHooks) {
+          // result set 'res' is passed to the filter hooks. The filter hooks shouldn't mutate res
+          // directly. They should return a filtered result set instead.
+          hookResult = hook.postDriverFetch(hookCtx);
+          // pass the filtered result set back to the client
+          res.clear();
+          List<String> filteredValues = hookResult.getResult();
+          res.addAll(filteredValues);
+        }
+      }
+    } catch (Exception e) {
+       throw new CommandNeedRetryException(e);
+    }
+
+  }
+
   public boolean getResults(ArrayList<String> res) throws IOException, CommandNeedRetryException {
     if (plan != null && plan.getFetchTask() != null) {
       FetchTask ft = plan.getFetchTask();
       ft.setMaxRows(maxRows);
-      return ft.fetch(res);
+      boolean ret = ft.fetch(res);
+      fireFilterHooks(res);
+      return ret;
     }
 
     if (resStream == null) {
@@ -1462,6 +1502,7 @@ public class Driver implements CommandProcessor {
         return false;
       }
 
+      fireFilterHooks(res);
       if (ss == Utilities.StreamStatus.EOF) {
         resStream = ctx.getStream();
       }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHook.java b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHook.java
new file mode 100644
index 0000000..b539305
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHook.java
@@ -0,0 +1,38 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql;
+
+import org.apache.hadoop.hive.ql.hooks.Hook;
+
+/**
+ * HiveDriverFilterHook allows Hive to be extended with custom
+ * logic for processing commands.
+ *
+ * Note that the lifetime of an instantiated hook object is scoped to
+ * the analysis of a single statement; hook instances are never reused.
+ */
+public interface HiveDriverFilterHook extends Hook {
+  /**
+   * Invoked after Hive finishes processing a command, fetches results and before the results
+   * are returned to the client.
+   */
+  public HiveDriverFilterHookResult postDriverFetch(HiveDriverFilterHookContext hookContext)
+      throws Exception;
+
+}
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContext.java b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContext.java
new file mode 100644
index 0000000..80c086f
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContext.java
@@ -0,0 +1,34 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql;
+
+import java.util.List;
+
+import org.apache.hadoop.conf.Configurable;
+import org.apache.hadoop.hive.ql.plan.HiveOperation;
+
+/**
+ * Context information provided by Hive to implementations of
+ * HiveDriverFilterHook.
+ */
+public interface HiveDriverFilterHookContext extends Configurable{
+  public HiveOperation getHiveOperation ();
+  public String getUserName();
+  public List<String> getResult();
+}
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContextImpl.java b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContextImpl.java
new file mode 100644
index 0000000..feefaf5
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookContextImpl.java
@@ -0,0 +1,62 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql;
+
+import java.util.List;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hive.ql.plan.HiveOperation;
+
+public class HiveDriverFilterHookContextImpl implements HiveDriverFilterHookContext {
+
+  private Configuration conf;
+  private final HiveOperation hiveOperation;
+  private final String userName;
+  private final List<String> result;
+
+  public HiveDriverFilterHookContextImpl(Configuration conf, HiveOperation hiveOperation,
+    String userName, List<String> result) {
+    this.conf = conf;
+    this.hiveOperation = hiveOperation;
+    this.userName = userName;
+    this.result = result;
+  }
+
+  @Override
+  public Configuration getConf() {
+    return conf;
+  }
+
+  public String getUserName() {
+    return userName;
+  }
+
+  public List<String> getResult() {
+    return result;
+  }
+
+  public HiveOperation getHiveOperation() {
+    return hiveOperation;
+  }
+
+  public void setConf(Configuration conf) {
+    this.conf = conf;
+  }
+
+}
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResult.java b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResult.java
new file mode 100644
index 0000000..77d698f
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResult.java
@@ -0,0 +1,37 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql;
+
+import java.util.List;
+
+import org.apache.hadoop.conf.Configurable;
+import org.apache.hadoop.hive.ql.plan.HiveOperation;
+
+/**
+ * Context information provided by Hive to implementations of
+ * HiveDriverFilterHook.
+ */
+public interface HiveDriverFilterHookResult extends Configurable{
+  public HiveOperation getHiveOperation ();
+  public void setHiveOperation(HiveOperation operation);
+  public String getUserName();
+  public void setUserName(String userName);
+  public List<String> getResult();
+  public void setResult(List<String> result);
+}
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResultImpl.java b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResultImpl.java
new file mode 100644
index 0000000..4f9b4e1
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/HiveDriverFilterHookResultImpl.java
@@ -0,0 +1,77 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql;
+
+import java.util.List;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.hive.ql.plan.HiveOperation;
+
+public class HiveDriverFilterHookResultImpl implements HiveDriverFilterHookResult {
+
+  private Configuration conf;
+  private HiveOperation hiveOperation;
+  private String userName;
+  private List<String> result;
+
+  public HiveDriverFilterHookResultImpl(Configuration conf, HiveOperation hiveOperation,
+    String userName, List<String> result) {
+    this.conf = conf;
+    this.hiveOperation = hiveOperation;
+    this.userName = userName;
+    this.result = result;
+  }
+
+  public HiveDriverFilterHookResultImpl() {
+  }
+
+  @Override
+  public Configuration getConf() {
+    return conf;
+  }
+
+  @Override
+  public void setConf(Configuration conf) {
+    this.conf = conf;
+  }
+
+  public String getUserName() {
+    return userName;
+  }
+
+  public void setUserName(String userName) {
+    this.userName = userName;
+  }
+
+  public List<String> getResult() {
+    return result;
+  }
+
+  public void setResult(List<String> result) {
+    this.result = result;
+  }
+
+  public HiveOperation getHiveOperation() {
+    return hiveOperation;
+  }
+
+  public void setHiveOperation(HiveOperation hiveOperation) {
+    this.hiveOperation = hiveOperation;
+  }
+}
-- 
1.7.0.4

