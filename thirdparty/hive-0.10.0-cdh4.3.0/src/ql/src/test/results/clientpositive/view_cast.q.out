PREHOOK: query: DROP TABLE IF EXISTS atab
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS atab
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE IF NOT EXISTS atab (ks_uid BIGINT, sr_uid STRING, sr_id STRING, tstamp STRING, m_id STRING, action STRING, at_sr_uid STRING, tstamp_type STRING, original_m_id STRING, original_tstamp STRING, registered_flag TINYINT, at_ks_uid BIGINT) PARTITIONED BY (dt STRING,network_abbr STRING)
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE IF NOT EXISTS atab (ks_uid BIGINT, sr_uid STRING, sr_id STRING, tstamp STRING, m_id STRING, action STRING, at_sr_uid STRING, tstamp_type STRING, original_m_id STRING, original_tstamp STRING, registered_flag TINYINT, at_ks_uid BIGINT) PARTITIONED BY (dt STRING,network_abbr STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@atab
PREHOOK: query: DROP TABLE IF EXISTS  mstab
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS  mstab
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE  mstab(ks_uid INT, csc INT) PARTITIONED BY (dt STRING)
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE  mstab(ks_uid INT, csc INT) PARTITIONED BY (dt STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@mstab
PREHOOK: query: DROP VIEW IF EXISTS aa_view_tw
PREHOOK: type: DROPVIEW
POSTHOOK: query: DROP VIEW IF EXISTS aa_view_tw
POSTHOOK: type: DROPVIEW
PREHOOK: query: CREATE VIEW aa_view_tw AS SELECT ks_uid, sr_id, action, at_ks_uid, at_sr_uid, from_unixtime(CAST(CAST( tstamp as BIGINT)/1000 AS BIGINT),'yyyyMMdd') AS action_date, from_unixtime(CAST(CAST( original_tstamp AS BIGINT)/1000 AS BIGINT),'yyyyMMdd') AS content_creation_date FROM atab WHERE dt='20130312' AND network_abbr='tw' AND ks_uid != at_ks_uid
PREHOOK: type: CREATEVIEW
#### A masked pattern was here ####
POSTHOOK: query: CREATE VIEW aa_view_tw AS SELECT ks_uid, sr_id, action, at_ks_uid, at_sr_uid, from_unixtime(CAST(CAST( tstamp as BIGINT)/1000 AS BIGINT),'yyyyMMdd') AS action_date, from_unixtime(CAST(CAST( original_tstamp AS BIGINT)/1000 AS BIGINT),'yyyyMMdd') AS content_creation_date FROM atab WHERE dt='20130312' AND network_abbr='tw' AND ks_uid != at_ks_uid
POSTHOOK: type: CREATEVIEW
POSTHOOK: Output: default@aa_view_tw
#### A masked pattern was here ####
PREHOOK: query: DROP VIEW IF EXISTS joined_aa_view_tw
PREHOOK: type: DROPVIEW
POSTHOOK: query: DROP VIEW IF EXISTS joined_aa_view_tw
POSTHOOK: type: DROPVIEW
PREHOOK: query: CREATE VIEW joined_aa_view_tw AS SELECT aa.ks_uid, aa.sr_id, aa.action, at_sr_uid, aa.action_date, aa.at_ks_uid, aa.content_creation_date, coalesce( other.ksc, 10.0) AS at_ksc, coalesce( self.ksc , 10.0 ) AS self_ksc FROM aa_view_tw aa LEFT OUTER JOIN ( SELECT ks_uid, csc AS ksc FROM mstab WHERE dt='20130311' ) self ON ( CAST(aa.ks_uid AS BIGINT) = CAST(self.ks_uid AS BIGINT) ) LEFT OUTER JOIN ( SELECT ks_uid, csc AS ksc FROM mstab WHERE dt='20130311' ) other ON ( CAST(aa.at_ks_uid AS BIGINT) = CAST(other.ks_uid AS BIGINT) )
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@aa_view_tw
#### A masked pattern was here ####
POSTHOOK: query: CREATE VIEW joined_aa_view_tw AS SELECT aa.ks_uid, aa.sr_id, aa.action, at_sr_uid, aa.action_date, aa.at_ks_uid, aa.content_creation_date, coalesce( other.ksc, 10.0) AS at_ksc, coalesce( self.ksc , 10.0 ) AS self_ksc FROM aa_view_tw aa LEFT OUTER JOIN ( SELECT ks_uid, csc AS ksc FROM mstab WHERE dt='20130311' ) self ON ( CAST(aa.ks_uid AS BIGINT) = CAST(self.ks_uid AS BIGINT) ) LEFT OUTER JOIN ( SELECT ks_uid, csc AS ksc FROM mstab WHERE dt='20130311' ) other ON ( CAST(aa.at_ks_uid AS BIGINT) = CAST(other.ks_uid AS BIGINT) )
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@aa_view_tw
POSTHOOK: Output: default@joined_aa_view_tw
#### A masked pattern was here ####
